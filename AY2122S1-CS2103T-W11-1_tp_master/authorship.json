[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W11-1/tp/branch/master/graph/badge.svg?token\u003dR2UHGI070A)](https://codecov.io/gh/AY2122S1-CS2103T-W11-1/tp)","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"# Fridgy","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"## What is Fridgy?","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"* Fridgy is **a Food Inventory Manager** that makes it easy to reduce food waste by keeping track of what you have and when it expires.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"* Fridgy\u0027s built-in **Recipe Tracker** matches recipe ingredients to ingredients in your inventory and helps to keep track of the quantity of ingredients.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"## Our Motivation","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"It can be hard for the typical adult who cooks often to stay on top of the ingredients that they have in their pantry, as they may be too busy to actively keep track of them.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"This can result in food wastage, in the form of constantly throwing away expired food.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"Fridgy was thus developed to solve the issue of having to manually track ingredients (and their expiry dates) in a pantry.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"## Who is it meant for?","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"* Households or individuals who want to keep track of groceries for meal preparation.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"* Households or individuals who want to reduce food wastage.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"* Individuals who are comfortable with a Command Line Interface (CLI).","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"## Example Usages","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"* As a user, you can add an ingredient (along with quantity and expiry information) in your pantry for tracking through the Command Line.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"  * You can also delete, view or edit information related to the ingredient.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"* As a user, you can add a recipe to Fridgy through the Command Line.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"  * You can also delete, view or edit the recipe.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"* Easily search for a previously added recipe or ingredient by name.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"pattan9955":32,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"mainClassName \u003d \u0027fridgy.Main\u0027","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"run {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    checkstyleTest.enabled \u003d true // temporarily skip checkstyle for tests","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    options.compilerArgs \u003c\u003c \"-Xdiags:verbose\"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rebeccacxy":6,"rootkie":4,"NayLin-H99":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"### Li Bailin","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"\u003cimg src\u003d\"images/rootkie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"[[github](https://github.com/rootkie)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"[[portfolio](team/rootkie.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"* Role: DevOps / Team Lead","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"* Responsibilities: Project Architecture + Code quality","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"### Rebecca Chin","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"\u003cimg src\u003d\"images/rebeccacxy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"[[github](http://github.com/rebeccacxy)]","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"[[portfolio](team/rebeccacxy.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"* Role: Developer","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"* Responsibilities: Testing + UI","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"### Nay Lin Han","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"\u003cimg src\u003d\"images/naylin-h99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"[[github](https://github.com/NayLin-H99)]","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"[[portfolio](team/naylin-h99.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"* Responsibilities: Code quality + Integration","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"### Alissa","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"\u003cimg src\u003d\"images/alissayarmantho.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"[[github](http://github.com/alissayarmantho)]","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"[[portfolio](team/alissayarmantho.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"* Responsibilities: Scheduling and tracking + Git expert","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"### Patrick Tan","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"\u003cimg src\u003d\"images/pattan9955.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"[[github](http://github.com/pattan9955)]","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"[[portfolio](team/pattan9955.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"* Responsibilities: Documentation + Testing","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"alissayarmantho":6,"rebeccacxy":6,"rootkie":6,"pattan9955":5,"NayLin-H99":4,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"# Fridgy – Developer Guide","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"By: `Team Fridgy`","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"# 1. **Overview**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"This developer guide contains documentation on design architecture and details software design decisions in the implementation of Fridgy.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"It is intended to be read by contributors, users, and future maintainers.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"For more information on the Fridgy application, refer to the [_User Guide_](UserGuide.md) instead.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"## 1.1 **About Fridgy**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"Fridgy is a **desktop app for managing an Inventory of food as well as a list of recipes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Fridgy can get your fridge Inventory and recipe sorted out faster than traditional GUI apps.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"Fridgy helps to manage and track your ingredients in the fridge. It can warn you about expiring ingredients and track your recipes in the Recipe Book. There will be more functionalities in the future, such as automatic deduction of ingredients after executing a recipe.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"## 1.2 **Setting up, Getting started**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"## 2. **Design**","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"### 2.1 Architecture","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete ingredient 1`. It is similar for operations on `Recipe`.","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"### 2.2 UI component","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/ui/Ui.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":"The UI consists of:","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"alissayarmantho"},"content":"1. `UIManager` which implements the `UI` interface, and hence is responsible for handling the initial setup when Fridgy is started e.g. initializing `MainWindow` and its parts. ","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"2. `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ActiveDisplay`, `ingredientListPanel`, `recipeListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI such as the handling of the interaction between these classes and their corresponding FXML files.","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"alissayarmantho"},"content":"The `UI` component uses the JavaFx UI framework. As such, it follows closely to the typical JavaFX application structure. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"alissayarmantho"},"content":"* displays the result of the command execution to the UI part `ResultDisplay`","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"alissayarmantho"},"content":"* logs the result of the command execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"* depends on some classes in the `Model` component, as it displays `Ingredient` and `Recipe` object residing in the `Model`.","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"### 2.3 Logic component","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/logic/Logic.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"Here is a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"1. When `Logic` is called upon to execute a command, it uses the `FridgyParser` class to parse the user command.","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"1. `FridgyParser` parses the command string and returns a higher order function that exposes the execute interface of the resulting `Command` object which can communicate with a given `Model` when it is executed (e.g to add a recipe).","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"1. `Logic` applies the returned higher order function on the model it was constructed with.","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"rootkie"},"content":"1. The result of the execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete recipe 1\")` API call.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"rootkie"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"800\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"* When called upon to parse a user command, the `FridgyParser` class checks if the command is a \u0027Typed\u0027 command (i.e. a command that pertains to Inventory or Recipes) or a \u0027General\u0027 command (such as \"help\" or \"exit\").","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"* \"Typed\" commands are sent to either `RecipeParser` or `InventoryParser` depending on the command type, while \"General\" commands are handled in `FridgyParser` directly.","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"* Inside `RecipeParser`/`InventoryParser`, commands that utilize arguments and require additional parsing will cause an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g. `AddCommandParser`) to be created.","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"* This `XYZCommandParser` is used to parse additional arguments and creates the `XYZCommand` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"* The `FridgyParser` class then returns the `XYZCommand` object wrapped in an executable `CommandExecutor` that can be applied on a provided `Model` and return a `CommandResult.`","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"rebeccacxy"},"content":"### 2.4 Model component","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/model/Model.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"rootkie"},"content":"\u003cimg src\u003d\"images/IngredientClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"rootkie"},"content":"\u003cimg src\u003d\"images/RecipeClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"* stores the Fridgy data i.e., all `Ingredient` and `Recipe` objects (which are contained in a `Database\u003cIngredient\u003e` / `Database\u003cRecipe` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"rootkie"},"content":"* stores the currently \u0027selected\u0027 `Ingredient` and `Recipe` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cIngredient\u003e` and `Recipe` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"rootkie"},"content":"* stores the \u0027active\u0027 `Ingredient` or `Recipe` object that is displayed in detail in the UI component","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"rootkie"},"content":"The container for `Ingredient` is called `Inventory` and container for `Recipe` is called `RecipeBook`","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"rootkie"},"content":"The CRUD behavior of `Ingredient` and `Recipe` are similar as they are implemented using a generic base model `Database\u003cT\u003e` internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"rootkie"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Inventory`, which `Ingredient` references. This allows `Inventory` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"rebeccacxy"},"content":"### 2.5 Storage component","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"rootkie"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W11-1/tp/tree/master/src/main/java/fridgy/storage/Storage.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"* can save `RecipeBook` and `Inventory` data as well as user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"rootkie"},"content":"* inherits from both `InventoryStorage`, `RecipeBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"rebeccacxy"},"content":"### 2.6 Common classes","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"rootkie"},"content":"Classes used by multiple components are in the `fridgy.commons` package.","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"rebeccacxy"},"content":"## 3. **Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"rootkie"},"content":"### 3.1 Model Generic abstraction","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"rootkie"},"content":"At the fundamental level, both `Recipe` and `Ingredient` are using the same CRUD operations. To reduce code duplication, a generic class of `Database\u003cT extends Eq\u003e` is implemented.","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `Eq` is an interface that ensures all objects entered into the Database has a weaker notion of equality defined by the developer. \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"rootkie"},"content":"This implementation allow more flexibility in extending the application in the future. One can easily duplicate a database model by extending from the Database generic.","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"However, do note that this implementation is purely contained within Model component. The `ModelManager` is still a monolithic class that handles all operations from other components. That means all CRUD operations to new types of objects will need to be implemented and exposed through `ModelManager`.","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"rootkie"},"content":"### 3.2 Automatic Quantity Conversion","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"NayLin-H99"},"content":"Currently, ","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"NayLin-H99"},"content":"1. Accepted SI prefixes are:","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"NayLin-H99"},"content":"   - `k`: for kilo-","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"NayLin-H99"},"content":"   - `m`: for milli-","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"NayLin-H99"},"content":"2. Accepted base units are:","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"NayLin-H99"},"content":"   - `g`: for grams","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"NayLin-H99"},"content":"   - `l`: for litres","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"NayLin-H99"},"content":"Do note that the user can choose not to include any units. It will be processed as a unit-less quantity.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"NayLin-H99"},"content":"The initial step is to use Regex to split the quantity into a `Double`, the SI prefix, and the base unit. The computation is done based on the prefix detected, and a relevant multiplier is used to convert the quantity into the base unit. ","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"NayLin-H99"},"content":"This is done for any incoming ingredient before the quantity is stored, and there are future plans to utilise this for other computations, such as deducting a quantity of ingredients in the inventory when a recipe is executed.","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"NayLin-H99"},"content":"This also requires consistency in units for each ingredient.","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"rebeccacxy"},"content":"## 4. **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"rebeccacxy"},"content":"## 5. **Appendix A: Requirements**","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"rebeccacxy"},"content":"### 5.1 Product scope","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"rebeccacxy"},"content":"* has a need to manage a significant number of ingredients and recipes","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"rebeccacxy"},"content":"**Value proposition**: manage ingredients and recipes faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"rebeccacxy"},"content":"### 5.2 User stories","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"rebeccacxy"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"rebeccacxy"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ----------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | new user                                    | see the help menu                  | refer to instructions when I forget how to use the App                     |","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"rebeccacxy"},"content":"| `**`   | new user exploring the app                  | see my inventory populated with some sample ingredients and recipes        | test out the features              |","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"rebeccacxy"},"content":"| `**`   | new user ready to start using the app       | purge all current data             | get rid of sample/experimental data I used for exploring the app           |","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who stocks up on ingredients           | add an ingredient                  | keep track of its quantity and expiry date                                 |","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who wants to tidy my inventory         | delete an ingredient               | remove expired ingredients                                                 |","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who wants to update my stock           | edit an ingredient                 | update ingredient details to have an accurate list that reflects my fridge |","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who has a large inventory of ingredients  | find an ingredient                 | locate details of ingredients without having to go through the entire list |","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who wants a complete view of my inventory | list all ingredients            | easily view all ingredients                                                |","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who can be forgetful                   | sort ingredients by expiry date    | locate ingredients that are expired or expiring soon                       |","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who is organised                       | tag ingredients                    | categorise my ingredients easily                                           |","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who has new recipes                    | add a recipe                       | keep track of quantity of ingredients needed for a recipe                  |","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who changes my meal options            | delete a recipe                    | stop keeping track of the recipe I no longer want                          |","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who is flexible with my meals          | edit recipes                       | update and personalise recipe details                                      |","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who has a large collection of recipes  | find a recipe by name              | locate details of recipes without having to go through the entire list     |","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who wants a complete view of all my recipes | list all recipes              | easily view all recipes                                                    |","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who is organised                       | tag recipes                        | categorise my recipes easily                                               |","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who cooks meals                        | execute a recipe                   | update the quantity of ingredients I have used                             |","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"rebeccacxy"},"content":"| `***`  | user who likes convenience                  | import my saved database           | start using it again quickly                                               |","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"rebeccacxy"},"content":"### 5.3 Use cases","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"rebeccacxy"},"content":"(For all use cases below, the **System** is `Fridgy` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"rebeccacxy"},"content":"| Use Case       | Description                      |","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"rebeccacxy"},"content":"| -------------- | -------------------------------- |","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"rebeccacxy"},"content":"| [UC01](#UC01)   | Add ingredient                   |","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"rebeccacxy"},"content":"| [UC02](#UC02)   | Delete ingredient                |","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"rebeccacxy"},"content":"| [UC03](#UC03)   | Edit ingredient                  |","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"rebeccacxy"},"content":"| [UC04](#UC04)   | Find ingredients                 |","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"rebeccacxy"},"content":"| [UC05](#UC05)   | List ingredients                 |","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"rebeccacxy"},"content":"| [UC06](#UC06)   | Add recipe                       |","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"rebeccacxy"},"content":"| [UC07](#UC07)   | Delete recipe                    |","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"rebeccacxy"},"content":"| [UC08](#UC08)   | Edit recipe                      |","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"rebeccacxy"},"content":"| [UC09](#UC09)   | Find recipes                     |","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"rebeccacxy"},"content":"| [UC10](#UC10)   | List recipes                     |","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"rebeccacxy"},"content":"| [UC11](#UC11)   | Execute recipe                   |","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"rebeccacxy"},"content":"### 5.3.1 Ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC01\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC01 - Add ingredient**","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to add an ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"rebeccacxy"},"content":"2. User provides its name, quantity, expiry date and an optional description.","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy tags the ingredient with its expiry status, i.e. `expired` or `expiring soon`.","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"rebeccacxy"},"content":"4. Fridgy adds the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"rebeccacxy"},"content":"5. Fridgy displays a confirmation message and the newly added ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.     ","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"rebeccacxy"},"content":"* 2b. Fridgy detects a duplicate ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"rebeccacxy"},"content":"    * 2b1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC02\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC02 - Delete ingredient**","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to delete an ingredient by specifying its index.","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"rebeccacxy"},"content":"2. Fridgy removes the full quantity of the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy displays a confirmation message for the ingredient deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"rebeccacxy"},"content":"    Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-09-19"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":333,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format or index.","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":336,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-09-19"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC03\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC03 - Edit ingredient**","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to edit a specific ingredient by specifying its index.","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"rebeccacxy"},"content":"2. User provides the parameter(s) to be edited.","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy edits the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"rebeccacxy"},"content":"4. Fridgy displays a confirmation message and the edited ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"rebeccacxy"},"content":"    Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format or index.","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":363,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC04\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC04 - Find ingredients**","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":370,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to find a specific ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"rebeccacxy"},"content":"2. User provides the filter condition, i.e. name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy displays a filtered list of ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":378,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":379,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":380,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":381,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid input parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":386,"author":{"gitId":"rebeccacxy"},"content":"* 2b. There are no ingredients that match the user\u0027s filter conditions.","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"rebeccacxy"},"content":"    * 2b1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC05\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":394,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC05 - List ingredients**","lastModifiedDate":"2021-10-19"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":397,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"rebeccacxy"},"content":"1. User requests to list all ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":399,"author":{"gitId":"rebeccacxy"},"content":"2. Fridgy displays a list of all ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":401,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":402,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":407,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":408,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"rebeccacxy"},"content":"### 5.3.2 Recipe","lastModifiedDate":"2021-10-19"},{"lineNumber":413,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":414,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC06\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC06 - Add Recipe**","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to add a recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"rebeccacxy"},"content":"2. User provides its name, ingredients and their respective quantities, recipe steps, and an optional description.","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy creates the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"rebeccacxy"},"content":"4. Fridgy displays a confirmation message and the newly created recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":428,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":429,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":431,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":432,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":433,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":435,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":437,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":439,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC07\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":440,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC07 - Delete Recipe**","lastModifiedDate":"2021-10-19"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":442,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"rebeccacxy"},"content":"1. User requests to delete a recipe by specifying its index.","lastModifiedDate":"2021-10-19"},{"lineNumber":445,"author":{"gitId":"rebeccacxy"},"content":"2. Fridgy removes the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":446,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy displays a confirmation message for the recipe deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":447,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":448,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":449,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":450,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":451,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":452,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format or index.","lastModifiedDate":"2021-10-19"},{"lineNumber":453,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":454,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":455,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":456,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":457,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":458,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":459,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC08\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":460,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC08 - Edit Recipe**","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":462,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":463,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":464,"author":{"gitId":"rebeccacxy"},"content":"1. User requests to edit a specific recipe by specifying its index.","lastModifiedDate":"2021-10-19"},{"lineNumber":465,"author":{"gitId":"rebeccacxy"},"content":"2. User provides the parameter(s) to be edited.","lastModifiedDate":"2021-10-19"},{"lineNumber":466,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy edits the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":467,"author":{"gitId":"rebeccacxy"},"content":"4. Fridgy displays a confirmation message and the edited recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":468,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":469,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":470,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format or index.","lastModifiedDate":"2021-10-19"},{"lineNumber":474,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":475,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":476,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":477,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":478,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":479,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":480,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":481,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":482,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":483,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":484,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC09\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":485,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC09 - Find Recipes**","lastModifiedDate":"2021-10-19"},{"lineNumber":486,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":487,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":488,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":489,"author":{"gitId":"rebeccacxy"},"content":"1. User chooses to find a specific recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":490,"author":{"gitId":"rebeccacxy"},"content":"2. User provides the filter condition, i.e. name of recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":491,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy displays a filtered list of recipes.","lastModifiedDate":"2021-10-19"},{"lineNumber":492,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":493,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":494,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":495,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":496,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":497,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":498,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":499,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":500,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":501,"author":{"gitId":"rebeccacxy"},"content":"* 2a. The user enters an invalid input parameter.","lastModifiedDate":"2021-10-19"},{"lineNumber":502,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":503,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":504,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":505,"author":{"gitId":"rebeccacxy"},"content":"* 2b. There are no recipes that match the user\u0027s filter conditions.","lastModifiedDate":"2021-10-19"},{"lineNumber":506,"author":{"gitId":"rebeccacxy"},"content":"    * 2b1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":507,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":508,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":509,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":510,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":511,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":512,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC10\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":513,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC10 - List recipes**","lastModifiedDate":"2021-10-19"},{"lineNumber":514,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":515,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":517,"author":{"gitId":"rebeccacxy"},"content":"1. User requests to list all recipes.","lastModifiedDate":"2021-10-19"},{"lineNumber":518,"author":{"gitId":"rebeccacxy"},"content":"2. Fridgy displays a list of all recipes.","lastModifiedDate":"2021-10-19"},{"lineNumber":519,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":520,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":521,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":522,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":523,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":524,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format.","lastModifiedDate":"2021-10-19"},{"lineNumber":525,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":526,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":527,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":528,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":529,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":530,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":531,"author":{"gitId":"rebeccacxy"},"content":"\u003ca name\u003d\"UC11\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":532,"author":{"gitId":"rebeccacxy"},"content":"**Use case: UC11 - Execute Recipe**","lastModifiedDate":"2021-10-19"},{"lineNumber":533,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":534,"author":{"gitId":"rebeccacxy"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":535,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":536,"author":{"gitId":"rebeccacxy"},"content":"1. User requests to execute a recipe by specifying its name.","lastModifiedDate":"2021-10-19"},{"lineNumber":537,"author":{"gitId":"rebeccacxy"},"content":"2. Fridgy executes the recipe and deducts the respective quantities of ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":538,"author":{"gitId":"rebeccacxy"},"content":"3. Fridgy displays a confirmation message.","lastModifiedDate":"2021-10-19"},{"lineNumber":539,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":540,"author":{"gitId":"rebeccacxy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":541,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":542,"author":{"gitId":"rebeccacxy"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":543,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":544,"author":{"gitId":"rebeccacxy"},"content":"* 1a. The user enters an invalid input format or name.","lastModifiedDate":"2021-10-19"},{"lineNumber":545,"author":{"gitId":"rebeccacxy"},"content":"    * 1a1. Fridgy displays an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":546,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":547,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":548,"author":{"gitId":"rebeccacxy"},"content":"* 2a. There are insufficient ingredients in the inventory to be deducted.","lastModifiedDate":"2021-10-19"},{"lineNumber":549,"author":{"gitId":"rebeccacxy"},"content":"    * 2a1. Fridgy displays an error message, with the missing ingredients and their respective quantities.","lastModifiedDate":"2021-10-19"},{"lineNumber":550,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":551,"author":{"gitId":"rebeccacxy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":552,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":553,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":554,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":555,"author":{"gitId":"rebeccacxy"},"content":"### 5.4 Non-Functional Requirements","lastModifiedDate":"2021-10-19"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"rebeccacxy"},"content":"2.  Should be able to hold up to 1000 ingredients / recipes without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-19"},{"lineNumber":559,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"rebeccacxy"},"content":"4. Should be able to function without internet access.","lastModifiedDate":"2021-09-19"},{"lineNumber":561,"author":{"gitId":"rebeccacxy"},"content":"5. Should be able to perform all actions from the command line.","lastModifiedDate":"2021-09-19"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":566,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":567,"author":{"gitId":"rebeccacxy"},"content":"### 5.5 Glossary","lastModifiedDate":"2021-10-19"},{"lineNumber":568,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":569,"author":{"gitId":"rebeccacxy"},"content":"|   Term   |    Explanation  |","lastModifiedDate":"2021-10-19"},{"lineNumber":570,"author":{"gitId":"rebeccacxy"},"content":"| -------- |------------------|","lastModifiedDate":"2021-10-19"},{"lineNumber":571,"author":{"gitId":"rebeccacxy"},"content":"|**Fridge**            | A personalised storage for ingredients. |","lastModifiedDate":"2021-10-19"},{"lineNumber":572,"author":{"gitId":"rebeccacxy"},"content":"|**Ingredient**        | A food item kept in a Fridge, that can be combined to make a meal. |","lastModifiedDate":"2021-10-19"},{"lineNumber":573,"author":{"gitId":"rebeccacxy"},"content":"|**Recipe**            | A set of steps that details how to prepare a meal, and the ingredients with their respective quantities required. |","lastModifiedDate":"2021-10-19"},{"lineNumber":574,"author":{"gitId":"NayLin-H99"},"content":"|**GUI**               | A graphical user interface, i.e. the visual display of Fridgy |","lastModifiedDate":"2021-10-21"},{"lineNumber":575,"author":{"gitId":"rebeccacxy"},"content":"|**Mainstream OS**     | Windows, Linux, Unix, OS-X. |","lastModifiedDate":"2021-10-19"},{"lineNumber":576,"author":{"gitId":"NayLin-H99"},"content":"|**SI prefix**         | SI prefixes are a standard defined by the International System of Units such as kilo-, milli-, centi- and so on. |","lastModifiedDate":"2021-10-21"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"rebeccacxy"},"content":"## 6. **Appendix B: Instructions for manual testing**","lastModifiedDate":"2021-10-19"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":591,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":592,"author":{"gitId":"rebeccacxy"},"content":"### 6.1 Launch and shutdown","lastModifiedDate":"2021-10-19"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"rebeccacxy"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample ingredients and recipes. The window size may not be optimum.","lastModifiedDate":"2021-09-19"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":610,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":611,"author":{"gitId":"rebeccacxy"},"content":"### 6.2 Deleting an ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"rebeccacxy"},"content":"1. Deleting an ingredient while all ingredients are being shown","lastModifiedDate":"2021-09-29"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"rebeccacxy"},"content":"   1. Prerequisites: List all ingredients using the `list` command. Multiple ingredients in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"rebeccacxy"},"content":"   2. Test case: `delete 2`\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":618,"author":{"gitId":"rebeccacxy"},"content":"      Expected: Second ingredient is deleted from the list. Details of the deleted ingredient shown in the status message.","lastModifiedDate":"2021-09-29"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"rebeccacxy"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":621,"author":{"gitId":"rebeccacxy"},"content":"      Expected: No ingredient is deleted. Error details shown in the status message.","lastModifiedDate":"2021-09-29"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"rebeccacxy"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"rebeccacxy"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":628,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":629,"author":{"gitId":"rebeccacxy"},"content":"### 6.3 Saving data","lastModifiedDate":"2021-10-19"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"rebeccacxy"},"content":"   1a. To simulate missing file, create an empty directory and run the program. Program should create a new file in the directory.","lastModifiedDate":"2021-09-19"},{"lineNumber":634,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":635,"author":{"gitId":"rebeccacxy"},"content":"   1b. To simulate a corrupted file, replace content in file with wrong or unexpected content. Program should throw an error.","lastModifiedDate":"2021-09-19"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alissayarmantho":6,"rebeccacxy":319,"rootkie":31,"pattan9955":8,"NayLin-H99":20,"-":252}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"# Introduction","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"Fridgy is a **desktop app for managing an Inventory of food as well as a RecipeBook of recipes**, optimized for use via ","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type ","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"fast, Fridgy can get your fridge Inventory and recipe sorted out faster than traditional GUI apps.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"Fridgy was made to help people living in shared spaces manage their fridges better, since it can get very messy and ","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"difficult to keep track of several items from different people. It has the ability to track your ingredients in the","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"fridge as well as your recipes. It can help to flag out expiring and expired ingredients in your fridge. Moreover, it ","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"is equipped with features to improve users\u0027 convenience, such as automatic deduction of ingredients after cooking a ","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"recipe.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"# UI","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"### Tabs","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"Click the `Ingredient` or `Recipe` tab each to show the contents of the Inventory or the RecipeBook respectively.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"### Side Bar","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"A scrollable window that displays all the contents of the Inventory or the RecipeBook depending on the Tab selected ","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"### Cards","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"A card displays the details of each item inside the Inventory or the RecipeBook depending on the tab selected. Each card ","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"represents **one** item.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"### CommandLine","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"Command Line for users to key their commands into.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"### CommandOutput","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"Output of the commands keyed in by users are displayed here.","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"### MainWindow","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"Displays the output of `View` command, which expands each ingredient or recipe card for better visibility. ","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"# Features","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"**Notes about the Command Format:**","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"- Words between `\u003c` and`\u003e` are parameters to be supplied by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"  e.g. in `add ingredient -n \u003cname\u003e`, `\u003cname\u003e` is a parameter which can be used as:\u003cbr /\u003e`add ingredient -n tomato`.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"  e.g. `add ingredient -n \u003cname\u003e [-d \u003cdescription\u003e]` can be used as","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"     1. `add ingredient -n tomato -d from Africa` or as","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"     2. `add ingredient -n tomato`","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"  e.g. `add ingredient -n \u003cname\u003e -q \u003cquantity\u003e[\u003cunits\u003e]` can be used as ","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"     1. `add ingredient -n chicken -q 2` or as","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"     2. `add ingredient -n chicken -q 2kg`","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"- Items with `…` after them can be used multiple times.","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"## General Commands","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"### Help","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"`help`","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"Pops out a window that leads the user to [User Guide](https://ay2122s1-cs2103t-w11-1.github.io/tp/UserGuide.html) ","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"(You are here).","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"### Exit","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"`exit`","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"Exits the program.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"## Ingredients","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"### Add Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"`add ingredient`","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"Add an ingredient to the Inventory. ","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"- Any expired ingredients will be automatically tagged as `expired`.","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"- Any expiring (within 7 days from current date) will be automatically tagged as `expiring`.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"Format: `add ingredient -n \u003cname\u003e -q \u003cquantity\u003e[\u003cunits\u003e] [-d \u003cdescription\u003e] -e \u003cexpiry date\u003e [-t \u003ctags\u003e]`","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"- For Quantity, units of measurement are not necessary, but the following are accepted:","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"    - Acceptable ingredient units are:","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        1. grams: `g`","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"        2. litres: `l`","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"    - Acceptable prefixes for units are:","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        1. milli- : `m` (i.e. `ml` for millilitres)","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"        2. kilo- : `k` (i.e. `kg` for kilograms)","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"    - All units will be converted to grams or litres, to 3 decimal places.","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"- Please ensure that the units used for quantity are consistent across the Inventory and the RecipeBook if you wish to","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"  use the [Cook Recipe](#cook-recipe) functionality.","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"1. `add ingredient -n tomato -d from africa -q 500 -e 27-09-2021 -t sweet`","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"![addCommand1.png](images/ingredientCommands/addCommand1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"2. `add ingredient -n milk -q 500ml -e 27-09-2021`","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"![addCommand2.png](images/ingredientCommands/addCommand2.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"3. `add ingredient -n flour -d fresh -q 500g -e 27-09-2021`","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"![addCommand3.png](images/ingredientCommands/addCommand3.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"### Delete Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"`delete ingredient`","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"Delete an ingredient from the Inventory.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"Format: `delete ingredient \u003cindex\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"1. `delete ingredient 1`","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"![deleteCommand1.png](images/ingredientCommands/deleteCommand1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"### Edit Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"`edit ingredient`","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"Edit an ingredient from the Inventory.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"Format: `edit ingredient \u003cindex\u003e -\u003cfield flag\u003e \u003cnew data\u003e...`","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"NayLin-H99"},"content":"- A `field flag` is also required for each input field you wish to edit. You can refer to ","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"NayLin-H99"},"content":"[Add Command](#add-ingredients) for more examples on usage of each `field flag`. It can be any of the following:","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"NayLin-H99"},"content":"    - `-n`: name of the ingredient","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"    - `-q`: quantity of the ingredient","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"    - `-d`: description of the ingredient","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"    - `-e`: expiry date of the ingredient","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"NayLin-H99"},"content":"    - `-t`: tags for the ingredient","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"NayLin-H99"},"content":"Example(s): ","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"NayLin-H99"},"content":"1. `edit ingredient 1 -d juicy -t fruit`","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"NayLin-H99"},"content":"![editCommand1.png](images/ingredientCommands/editCommand1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"NayLin-H99"},"content":"### Clear Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"NayLin-H99"},"content":"`clear ingredient`","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"Clear all the ingredients from the Inventory.","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"NayLin-H99"},"content":"Format: `clear ingredient`","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"NayLin-H99"},"content":"1. `clear ingredient`","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"![clearCommand.png](images/ingredientCommands/clearCommand.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"NayLin-H99"},"content":"### Find Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"NayLin-H99"},"content":"`find ingredient`","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"NayLin-H99"},"content":"- Search for an ingredient from the Inventory based on a user-inputted keyword(s) that match the name of an ingredient(s).","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"- After [Find Ingredient](#find-ingredients) command, to see the full list of ingredients again, please use ","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"[List Ingredient](#list-ingredients) command.","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"Format: `find ingredient \u003ckeyword\u003e...`","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"- Requirements for a keyword:","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"NayLin-H99"},"content":"    1. Keyword is case-insensitive.\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"NayLin-H99"},"content":"       e.g. Finding with keyword: \"corn\" will match with \"COrN\"","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"NayLin-H99"},"content":"    2. Any keyword must match a full word in the name of the recipe.\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"NayLin-H99"},"content":"       e.g. Finding with keyword: \"corn\" will match with \"CoRN flour\", \"coRn FlakeS\", etc. but not \"popcorn\" \u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"NayLin-H99"},"content":"       e.g. Finding with keywords: \"corn Chicken beef\" will match \"beef Chicken\", \"beef corn\", etc. but not \"beefcorn\"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"NayLin-H99"},"content":"1. `find ingredient cream`","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"![findIngredient1.png](images/ingredientCommands/findIngredient1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"### List Ingredients","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"NayLin-H99"},"content":"`list ingredient`","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"List all the ingredients again after `find ingredient` Operation.","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"Format: `list ingredient`","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"NayLin-H99"},"content":"1. `list ingredient`","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"NayLin-H99"},"content":"![listIngredient1.png](images/ingredientCommands/listIngredient1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"NayLin-H99"},"content":"### View Ingredients","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"NayLin-H99"},"content":"`view ingredient`","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"NayLin-H99"},"content":"View an ingredient in the [Main Window](#mainwindow).","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"NayLin-H99"},"content":"Format: `view ingredient \u003cindex\u003e`","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"NayLin-H99"},"content":"1. `view ingredient 10`","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"NayLin-H99"},"content":"![viewCommand1.png](images/ingredientCommands/viewCommand1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"NayLin-H99"},"content":"## Recipes","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"NayLin-H99"},"content":"### Add Recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"NayLin-H99"},"content":"`add recipe`","lastModifiedDate":"2021-10-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"NayLin-H99"},"content":"Add a recipe to the RecipeBook.","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"NayLin-H99"},"content":"Format: `add recipe -n \u003cname\u003e -i \u003cingredient\u003e \u003cquantity\u003e [-d \u003coptional description\u003e] -s \u003csteps\u003e...`","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"NayLin-H99"},"content":"1. `add recipe -n pasta -i tomato 1 -i milk 100ml -i chicken breast 200g -s Chicken thicc -s Thicc chicken`","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"NayLin-H99"},"content":"![addRecipe1.png](images/recipeCommands/addRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"NayLin-H99"},"content":"2. `add recipe -n aglio olio -i pasta 200g -d grandmother aglio olio recipe -s aglioli olioli -s aglioli olioli`","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"NayLin-H99"},"content":"    \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"NayLin-H99"},"content":"![addRecipe2.png](images/recipeCommands/addRecipe2.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"NayLin-H99"},"content":"3. `add recipe -n Grilled Lamb Chop with Mint Puree -i Mint 5g -i Lamb Chops 1kg -i Butter 20g -i Garlic 20g -s Season ","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"NayLin-H99"},"content":"the lamb chops with salt and pepper. -s Grill the lamb chops over medium high heat until cooked with butter. ","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"NayLin-H99"},"content":"-s Blend the mint with garlic to make a puree. -s Leave the lamb chops to rest for 5min. -s Serve with mint puree. ","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"NayLin-H99"},"content":"-d Juicy lamb chops served medium rare with a refreshing mint puree.`","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"NayLin-H99"},"content":"![addRecipe3.png](images/recipeCommands/addRecipe3.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"NayLin-H99"},"content":"### Delete Recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"NayLin-H99"},"content":"`delete recipe`","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"NayLin-H99"},"content":"Delete a recipe from the RecipeBook.","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"NayLin-H99"},"content":"Format: `delete recipe \u003cindex\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"NayLin-H99"},"content":"1. `delete recipe 1`","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"NayLin-H99"},"content":" ![deleteRecipe1.png](images/recipeCommands/deleteRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"NayLin-H99"},"content":"2. `delete recipe 2`","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"NayLin-H99"},"content":"   \u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"NayLin-H99"},"content":"![deleteRecipe2.png](images/recipeCommands/deleteRecipe2.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"NayLin-H99"},"content":"### Edit Recipes","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"NayLin-H99"},"content":"`edit recipe`","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"NayLin-H99"},"content":"Edit a recipe from the Inventory.","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"NayLin-H99"},"content":"Format: `edit recipe \u003cindex\u003e \u003cfield flag\u003e\u003cnew data\u003e...`","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"NayLin-H99"},"content":"- A `field flag` is also required for each input field you wish to edit. You can refer to","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"NayLin-H99"},"content":"  [Add Command](#add-recipes) for more examples on usage of each `field flag`. It can be any of the following:","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"NayLin-H99"},"content":"  - `-n`: name of the recipe","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"NayLin-H99"},"content":"  - `-i`: ingredients use in the recipe","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"NayLin-H99"},"content":"  - `-s`: steps of the recipe","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"NayLin-H99"},"content":"  - `-d`: description of the recipe","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"NayLin-H99"},"content":"1. `edit recipe 2 -i chicken 5kg -i mushroom sauce 1l`","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"NayLin-H99"},"content":"![editRecipe1.png](images/recipeCommands/editRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"NayLin-H99"},"content":"### Find Recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"NayLin-H99"},"content":"`find recipe`","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"NayLin-H99"},"content":"- Search for a recipe from the RecipeBook based on a user-inputted keyword(s) that match the name of a recipe(s).","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"NayLin-H99"},"content":"- After [Find Recipes](#find-recipes) command, to see the full list of recipes again, ","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"NayLin-H99"},"content":"please use [List Recipes](#list-recipes) command.","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"NayLin-H99"},"content":"Format: `find recipe \u003ckeyword\u003e...`","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"NayLin-H99"},"content":"- Current requirements for a keyword:","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"NayLin-H99"},"content":"    1. Keyword is case-insensitive.","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"NayLin-H99"},"content":"       i. e.g. Finding with keyword: \"mee\" will match with \"Maggie Mee\"","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"NayLin-H99"},"content":"    2. Any keyword must match a full word in the name of the recipe.","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"NayLin-H99"},"content":"       i. e.g. Finding with keyword: \"mee\" will match with \"Maggie Mee\", \"mee Goreng\", etc. but not \"meek\"","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"NayLin-H99"},"content":"       ii. e.g. Finding with keywords: \"salad Chicken burger\" will match \"Fried Chicken\", \"Burger Chicken\", \"Salad\",","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"NayLin-H99"},"content":"       \"Chicken Salad\", etc. but not \"chickenburger\"","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"NayLin-H99"},"content":"Example(s): ","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"NayLin-H99"},"content":"1. `find recipe chop`","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"NayLin-H99"},"content":"![findRecipe1.png](images/recipeCommands/findRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"NayLin-H99"},"content":"### List Recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"NayLin-H99"},"content":"`list recipe`","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"NayLin-H99"},"content":"Lists out all the recipes again after `find recipe` operation. ","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"NayLin-H99"},"content":"Format: `list recipe`","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"NayLin-H99"},"content":"1. `list recipe`","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003e Expected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"NayLin-H99"},"content":"![listRecipe1.png](images/recipeCommands/listRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"NayLin-H99"},"content":"### View Recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"NayLin-H99"},"content":"`view recipe`","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"NayLin-H99"},"content":"Expand the recipe and view the detailed steps in a bigger window.","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"NayLin-H99"},"content":"Format: `view recipe \u003cindex\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"NayLin-H99"},"content":"1. `view recipe 4`","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"NayLin-H99"},"content":"![viewRecipe1.png](images/recipeCommands/viewRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"NayLin-H99"},"content":"### Cook Recipe","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"NayLin-H99"},"content":"`cook recipe`","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"NayLin-H99"},"content":"Cooks a recipe and deducts the ingredients required by the chosen recipe from the Inventory.","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"NayLin-H99"},"content":"Format: `cook recipe \u003cindex\u003e`","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"NayLin-H99"},"content":"- An index number is required for the Command. Refer to the indexes displayed for each [Card](#cards) in the","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"NayLin-H99"},"content":"  [Side Bar](#side-bar).","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"NayLin-H99"},"content":"Example(s):","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"NayLin-H99"},"content":"1. `cook recipe 2`","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eIngredients Before Cooking:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"NayLin-H99"},"content":"![cookRecipe1.png](images/recipeCommands/cookRecipe1.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eExpected Output:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"NayLin-H99"},"content":"![cookRecipe2.png](images/recipeCommands/cookRecipe2.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"NayLin-H99"},"content":"\u003cbr /\u003eIngredients After Cooking:\u003cbr /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"NayLin-H99"},"content":"![cookRecipe3.png](images/recipeCommands/cookRecipe3.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"NayLin-H99"},"content":"-----","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"NayLin-H99"},"content":"# Command Summary","lastModifiedDate":"2021-09-30"},{"lineNumber":331,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"NayLin-H99"},"content":"Action | Format","lastModifiedDate":"2021-09-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"NayLin-H99"},"content":"**Add Ingredient** | `add ingredient -n \u003cname\u003e -q \u003cquantity\u003e[\u003cunits\u003e] [-d \u003cdescription\u003e] -e \u003cexpiry date\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"NayLin-H99"},"content":"**Delete Ingredient** | `delete ingredient \u003cindex\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"NayLin-H99"},"content":"**Edit Ingredient** | `edit ingredient \u003cindex\u003e (-\u003cfield flag\u003e \u003cnew data\u003e)...`","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"NayLin-H99"},"content":"**Clear Ingredient** | `clear ingredient`","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"NayLin-H99"},"content":"**Find Ingredient** | `find ingredient \u003ckeyword\u003e...`","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"NayLin-H99"},"content":"**List Ingredient** | `list ingredient`","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"NayLin-H99"},"content":"**View Ingredient** | `view ingredient \u003cindex\u003e`","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"NayLin-H99"},"content":"**Add Recipe** | `add recipe -n \u003cname\u003e -i \u003cingredient\u003e \u003cquantity\u003e [-d \u003coptional description\u003e] -s \u003csteps\u003e...`","lastModifiedDate":"2021-09-30"},{"lineNumber":342,"author":{"gitId":"NayLin-H99"},"content":"**Delete Recipe** | `delete recipe \u003cindex\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"NayLin-H99"},"content":"**Edit Recipe** | `edit recipe \u003cindex\u003e (-\u003cfield flag\u003e \u003cnew data\u003e)...`","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"NayLin-H99"},"content":"**Find Recipe** | `find recipe \u003ckeyword\u003e...`","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"NayLin-H99"},"content":"**List Recipe** | `list recipe`","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"NayLin-H99"},"content":"**View Recipe** | `view recipe \u003cindex\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"NayLin-H99"},"content":"**Cook Recipe** | `cook recipe \u003cindex\u003e`","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"NayLin-H99":264,"-":83}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"rootkie"},"content":"    content: \"Fridgy\";","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"rootkie":1,"-":294}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"$spacing-unit:     15px !default;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$content-width:    800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NayLin-H99":1,"-":50}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"user -[USER_COLOR]\u003e ui : \"delete ingredient 1\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete ingredient 1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"logic -[LOGIC_COLOR]\u003e model : delete(p)","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveInventory(inventory)","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":4,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"Inventory *-right-\u003e \"1\" UniqueIngredientList","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"Inventory *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"UniqueTagList -[hidden]down- UniqueIngredientList","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"UniqueTagList -[hidden]down- UniqueIngredientList","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"UniqueIngredientList -right-\u003e Ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"Ingredient -up-\u003e \"*\" Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Name","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Quantity","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e ExpiryDate","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Description","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":10,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"if () then ([command commits Inventory])","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    :Save Inventory to","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    inventoryStateList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"participant \":FridgyParser\" as FridgyParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"participant \"c:CommandExecutor\" as CommandExecutor LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"[-\u003e LogicManager : execute(\"delete ingredient 1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"LogicManager -\u003e FridgyParser : parseCommand(\"delete ingredient 1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"activate FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"FridgyParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"DeleteCommandParser --\u003e FridgyParser","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"FridgyParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"DeleteCommandParser --\u003e FridgyParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"DeleteCommandParser -[hidden]-\u003e FridgyParser","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"create CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"FridgyParser -\u003e CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"activate CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"CommandExecutor --\u003e FridgyParser : c","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"deactivate CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"FridgyParser --\u003e LogicManager : c","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"deactivate FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"activate CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"LogicManager -\u003e CommandExecutor : apply()","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"CommandExecutor -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"DeleteCommand -\u003e Model : deleteIngredient(1)","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"DeleteCommand --\u003e CommandExecutor : result","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"CommandExecutor --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"deactivate CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"destroy DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"destroy CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":29,"-":56}},{"path":"docs/diagrams/IngredientClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"Package Ingredient \u003c\u003cRectangle\u003e\u003e #F4F6F6 {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"Class Ingredient","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"Class Description","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"Class ExpiryDate","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"Class Name","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"Class Quantity","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"Class Tag","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Name","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Quantity","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e ExpiryDate","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e Description","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Ingredient *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"HiddenOutside ..\u003e Ingredient","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rootkie":25}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"Class FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nCommandExecutor\" as CommandExecutor","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"LogicManager -right-\u003e\"1\" FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"FridgyParser ..\u003e CommandExecutor : creates \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"LogicManager .left.\u003e CommandExecutor : apply \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"CommandExecutor .left.\u003e Command : execute \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"note right of CommandExecutor : A functional interface \\n that exposes Command\u0027s \\n execute function.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":8,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"Interface ReadOnlyInventory \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"Class Inventory","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"Class RecipeBook","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"Class ReadOnlyInventory","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Package Ingredient \u003c\u003cRectangle\u003e\u003e #F4F6F6 {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"Class UniqueIngredientList","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"Class Ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"Package Recipe \u003c\u003cRectangle\u003e\u003e #F4F6F6 {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"Class UniqueRecipeList","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"Class Recipe","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"Inventory .up.|\u003e ReadOnlyInventory","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"Model .left.\u003e ReadOnlyInventory","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"ModelManager -left-\u003e \"1\" Inventory","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"ModelManager -right-\u003e \"1\" RecipeBook","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"Inventory *--\u003e \"1\" UniqueIngredientList","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"UniqueIngredientList --\u003e \"~* all\" Ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"RecipeBook *--\u003e \"1\" UniqueRecipeList","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"UniqueRecipeList --\u003e \"~* all\" Recipe","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"ModelManager --\u003e\"~* filtered\" Ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"ModelManager --\u003e\"~* filtered\" Recipe","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":25,"-":30}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"package \"FridgyParser\" {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"Class FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"Class InventoryParser","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"Class RecipeParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"HiddenOutside ..\u003e FridgyParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"FridgyParser ..\u003e InventoryParser","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"FridgyParser ..\u003e RecipeParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"InventoryParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"RecipeParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"InventoryParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"RecipeParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"rootkie":18,"-":31}},{"path":"docs/diagrams/RecipeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"Package Recipe \u003c\u003cRectangle\u003e\u003e #F4F6F6 {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"Class RecipeName","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"Class Recipe","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"Class BaseIngredient","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"Class Step","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"Class RecipeDescription","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"Recipe *--\u003e RecipeName","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"Recipe *--\u003e \"*\" BaseIngredient","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"Recipe *--\u003e \"*\" Step","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"Recipe *--\u003e \"0..1\" RecipeDescription","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"HiddenOutside ..\u003e Recipe","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rootkie":23}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"package \"Inventory Storage\" #F4F6F6{","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"Interface InventoryStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"Class JsonInventoryStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"Class JsonSerializableInventory","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"package \"RecipeBook Storage\" #F4F6F6{","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"Interface RecipeBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"Class JsonRecipeBookStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"Class JsonSerializableRecipeBook","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"Class JsonAdaptedRecipe","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"Class JsonAdaptedIngredient","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"Class JsonAdaptedStep","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"StorageManager -up-\u003e \"1\" InventoryStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"StorageManager -up-\u003e \"1\" RecipeBookStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"Storage -right-|\u003e InventoryStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"Storage -down-|\u003e RecipeBookStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"\u0027 inventory stuff","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"JsonInventoryStorage .up.|\u003e InventoryStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"JsonInventoryStorage ..\u003e JsonSerializableInventory","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"JsonSerializableInventory --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"\u0027 recipebook stuff","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"JsonRecipeBookStorage .up.|\u003e RecipeBookStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"JsonRecipeBookStorage ..\u003e JsonSerializableRecipeBook","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"JsonSerializableRecipeBook --\u003e \"*\" JsonAdaptedRecipe","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"JsonAdaptedRecipe --\u003e \"*\" JsonAdaptedIngredient","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"JsonAdaptedRecipe --\u003e \"*\" JsonAdaptedStep","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":30,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"Class ActiveDisplay","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"Class IngredientListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"Class IngredientCard","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"Class RecipeListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"Class RecipeCard","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"MainWindow *-down-\u003e \"1\" IngredientListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"MainWindow *-down-\u003e \"1\" RecipeListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"IngredientListPanel -down-\u003e \"*\" IngredientCard","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"RecipeListPanel -down-\u003e \"*\" RecipeCard","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"IngredientListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"IngredientCard --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"RecipeListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"RecipeCard --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"IngredientCard ..\u003e Model","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"RecipeListPanel -[hidden]left- IngredientListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"IngredientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":18,"-":52}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    FontName Verdana","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    FontName Verdana","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    FontName Verdana","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rootkie":3,"-":72}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"title: Fridgy","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-1/tp/actions)","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W11-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-W11-1/tp)","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rootkie":3,"-":16}},{"path":"docs/team/alissayarmantho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"title: Alissa\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"* **Project management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"    * User Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"* **Tools**:","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"alissayarmantho":46}},{"path":"docs/team/naylin-h99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"title: Nay Lin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NayLin-H99":1,"-":45}},{"path":"docs/team/pattan9955.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"title: Patrick\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"* **Project management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"  * User Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"* **Tools**:","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"pattan9955":46}},{"path":"docs/team/rebeccacxy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"layout: page","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"title: Rebecca\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"* **Community**:","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"* **Tools**:","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"rebeccacxy":46}},{"path":"docs/team/rootkie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"title: Bailin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"rootkie":46}},{"path":"src/main/java/fridgy/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.FileUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"rebeccacxy":3,"-":61}},{"path":"src/main/java/fridgy/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"rebeccacxy":1,"-":24}},{"path":"src/main/java/fridgy/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Config;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Version;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.ConfigUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.StringUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.Logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.LogicManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.InventoryStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.JsonInventoryStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"import fridgy.storage.JsonRecipeBookStorage;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"import fridgy.storage.RecipeBookStorage;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.StorageManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.UserPrefsStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.ui.UiManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Fridgy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        InventoryStorage addressBookStorage \u003d new JsonInventoryStorage(userPrefs.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        RecipeBookStorage recipeBookStorage \u003d new JsonRecipeBookStorage(userPrefs.getRecipeBookFilePath());","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"        storage \u003d new StorageManager(addressBookStorage, recipeBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Inventory, recipe book","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"     * The data from the sample Inventory will be used instead if {@code storage}\u0027s Inventory is not found,","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"     * or an empty Inventory will be used instead if errors occur when reading {@code storage}\u0027s Inventory.","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"     * The data from the sample recipe book will be used instead if {@code storage}\u0027s recipe book is not found,","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"     * or an empty recipe book will be used instead if errors occur when reading {@code storage}\u0027s recipe book.","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"        Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e addressBookOptional;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"        ReadOnlyDatabase\u003cIngredient\u003e initialInventory;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"            addressBookOptional \u003d storage.readInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Inventory\");","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"            initialInventory \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleInventory);","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Inventory\");","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"            initialInventory \u003d new Inventory();","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Inventory\");","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"            initialInventory \u003d new Inventory();","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e recipeBookOptional;","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"        ReadOnlyDatabase\u003cRecipe\u003e initialRecipeBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"            recipeBookOptional \u003d storage.readRecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"            if (!recipeBookOptional.isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Inventory\");","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"            initialRecipeBook \u003d recipeBookOptional.orElseGet(SampleDataUtil::getSampleRecipeBook);","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Inventory\");","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"            initialRecipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"rebeccacxy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Inventory\");","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"rootkie"},"content":"            initialRecipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"        return new ModelManager(initialInventory, initialRecipeBook, userPrefs);","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"rebeccacxy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Inventory\");","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"rebeccacxy"},"content":"        logger.info(\"Starting Inventory \" + MainApp.VERSION);","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"rebeccacxy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Fridgy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":34,"rootkie":32,"-":145}},{"path":"src/main/java/fridgy/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":62}},{"path":"src/main/java/fridgy/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":78}},{"path":"src/main/java/fridgy/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":111}},{"path":"src/main/java/fridgy/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX \u003d \"The ingredient index provided is invalid\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_INVALID_RECIPE_DISPLAYED_INDEX \u003d \"The recipe index provided is invalid!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_INGREDIENTS_LISTED_OVERVIEW \u003d \"%1$d ingredient%2$s listed!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_RECIPES_LISTED_OVERVIEW \u003d \"%1$d recipe%2$s listed!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alissayarmantho":2,"rebeccacxy":2,"pattan9955":1,"-":10}},{"path":"src/main/java/fridgy/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":115}},{"path":"src/main/java/fridgy/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core.index;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"rebeccacxy":1,"-":53}},{"path":"src/main/java/fridgy/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":10}},{"path":"src/main/java/fridgy/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":1,"-":20}},{"path":"src/main/java/fridgy/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.MainApp;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rebeccacxy":2,"-":40}},{"path":"src/main/java/fridgy/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":1,"-":34}},{"path":"src/main/java/fridgy/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Config;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rebeccacxy":3,"-":20}},{"path":"src/main/java/fridgy/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":82}},{"path":"src/main/java/fridgy/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":3,"-":140}},{"path":"src/main/java/fridgy/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":3,"-":64}},{"path":"src/main/java/fridgy/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.ui.Observable;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the Inventory.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"     * @see Model#getInventory()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    ReadOnlyDatabase\u003cIngredient\u003e getInventory();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    /** Returns an unmodifiable view of the filtered list of ingredients */","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    /** Returns an unmodifiable view of the filtered list of recipes */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    ObservableList\u003cRecipe\u003e getFilteredRecipeList();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    /** Returns an active recipe */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"    Observable getActiveObservable();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the user prefs\u0027 Inventory file path.","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"alissayarmantho":4,"rebeccacxy":13,"rootkie":4,"NayLin-H99":2,"-":36}},{"path":"src/main/java/fridgy/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.CommandExecutor;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.FridgyParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.ui.Observable;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    private final FridgyParser fridgyParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        fridgyParser \u003d new FridgyParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        CommandExecutor commandExecutor \u003d fridgyParser.parseCommand(commandText);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        CommandResult commandResult \u003d commandExecutor.apply(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"            storage.saveInventory(model.getInventory());","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"            storage.saveRecipeBook(model.getRecipeBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"    public ReadOnlyDatabase\u003cIngredient\u003e getInventory() {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        return model.getInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"    public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"        return model.getFilteredRecipeList();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"    public Observable getActiveObservable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"        return model.getActiveObservable();","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        return model.getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alissayarmantho":6,"rebeccacxy":15,"pattan9955":6,"rootkie":6,"NayLin-H99":3,"-":57}},{"path":"src/main/java/fridgy/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_EXPIRY;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryStatusUpdater;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":" * Adds an ingredient to the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"            + INGREDIENT_KEYWORD + \": Adds an ingredient to the Inventory. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_QUANTITY + \" QUANTITY \"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"            + PREFIX_EXPIRY + \" EXPIRY DATE \"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \" DESCRIPTION] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"            + INGREDIENT_KEYWORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_NAME + \" Grapes \"","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_QUANTITY + \" 4 \"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_DESCRIPTION + \" Black seedless grapes \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"            + PREFIX_EXPIRY + \" 20-08-2010 \"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_TAG + \" fruit \"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"            + PREFIX_TAG + \" sweet\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New ingredient added:\\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the Inventory\";","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    private final Ingredient toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"     * Creates an AddCommand to add the specified {@code Ingredient}","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    public AddCommand(Ingredient ingredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        toAdd \u003d ExpiryStatusUpdater.updateExpiryTags(ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        if (model.has(toAdd)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"        model.add(toAdd);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alissayarmantho":2,"rebeccacxy":26,"rootkie":4,"NayLin-H99":6,"-":35}},{"path":"src/main/java/fridgy/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":" * Clears the Inventory.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Inventory has been cleared!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        model.setInventory(new Inventory());","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":4,"rootkie":3,"NayLin-H99":1,"-":16}},{"path":"src/main/java/fridgy/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"     * @param model {@code IngredientModel} which the command should operate on.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    public abstract CommandResult execute(IngredientModel model) throws CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":2,"rootkie":3,"-":15}},{"path":"src/main/java/fridgy/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":1,"-":70}},{"path":"src/main/java/fridgy/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":" * Deletes an ingredient identified using it\u0027s displayed index from the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + INGREDIENT_KEYWORD","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"            + \": Deletes the ingredient by index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + INGREDIENT_KEYWORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_SUCCESS \u003d \"Deleted Ingredient:\\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        model.delete(ingredientToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete));","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":15,"rootkie":3,"NayLin-H99":1,"-":35}},{"path":"src/main/java/fridgy/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.CollectionUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.CliSyntax;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryStatusUpdater;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":" * Edits the details of an existing ingredient in the Inventory.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"            + INGREDIENT_KEYWORD + \": Edits details of the ingredient. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"            + \"Existing values are replaced with input values.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + CliSyntax.PREFIX_QUANTITY + \" QUANTITY] \"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"            + \"[\" + CliSyntax.PREFIX_EXPIRY + \" EXPIRY DATE] \"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + CliSyntax.PREFIX_DESCRIPTION + \" DESCRIPTION] \"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + INGREDIENT_KEYWORD + \" 1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"            + CliSyntax.PREFIX_QUANTITY + \" 69\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_EDIT_INGREDIENT_SUCCESS \u003d \"Edited Ingredient:\\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the Inventory.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    private final EditIngredientDescriptor editIngredientDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"     * @param index of the ingredient in the filtered ingredient list to edit","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"     * @param editIngredientDescriptor details to edit the ingredient with","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    public EditCommand(Index index, EditIngredientDescriptor editIngredientDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(editIngredientDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        this.editIngredientDescriptor \u003d new EditIngredientDescriptor(editIngredientDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient editedIngredient \u003d createEditedIngredient(ingredientToEdit, editIngredientDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        if (!ingredientToEdit.isSameIngredient(editedIngredient) \u0026\u0026 model.has(editedIngredient)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        model.set(ingredientToEdit, editedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"        model.updateFilteredIngredientList(IngredientModel.PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient));","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"     * Creates and returns a {@code Ingredient} with the details of {@code ingredientToEdit}","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"     * edited with {@code editIngredientDescriptor}.","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"    private static Ingredient createEditedIngredient(Ingredient ingredientToEdit,","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"                                                     EditIngredientDescriptor editIngredientDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"        assert ingredientToEdit !\u003d null;","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        Name updatedName \u003d editIngredientDescriptor.getName().orElse(ingredientToEdit.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"        Quantity updatedQuantity \u003d editIngredientDescriptor.getQuantity().orElse(ingredientToEdit.getQuantity());","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        Description updatedDescription \u003d editIngredientDescriptor.getDescription()","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"                .orElse(ingredientToEdit.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        Set\u003cTag\u003e updatedTags \u003d editIngredientDescriptor.getTags().orElse(ingredientToEdit.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"        ExpiryDate updatedExpiryDate \u003d editIngredientDescriptor.getExpiryDate()","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"                .orElse(ingredientToEdit.getExpiryDate());","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedIngredient \u003d new Ingredient(updatedName, updatedQuantity, updatedDescription,","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"                updatedTags, updatedExpiryDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        return ExpiryStatusUpdater.updateExpiryTags(editedIngredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 editIngredientDescriptor.equals(e.editIngredientDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"     * Stores the details to edit the ingredient with. Each non-empty field value will replace the","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"rebeccacxy"},"content":"     * corresponding field value of the ingredient.","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"rebeccacxy"},"content":"    public static class EditIngredientDescriptor {","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"        private Quantity quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"        private Description description;","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"        private ExpiryDate expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"rebeccacxy"},"content":"        public EditIngredientDescriptor() {}","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"rebeccacxy"},"content":"        public EditIngredientDescriptor(EditIngredientDescriptor toCopy) {","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"rebeccacxy"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"rebeccacxy"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"            setExpiry(toCopy.expiryDate);","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"            return CollectionUtil.isAnyNonNull(name, quantity, description, tags, expiryDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"rebeccacxy"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"rebeccacxy"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"rebeccacxy"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"rebeccacxy"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"rebeccacxy"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"rebeccacxy"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"rebeccacxy"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"rebeccacxy"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"        public void setExpiry(ExpiryDate expiryDate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"            this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"NayLin-H99"},"content":"        public Optional\u003cExpiryDate\u003e getExpiryDate() {","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"NayLin-H99"},"content":"            return Optional.ofNullable(expiryDate);","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"rebeccacxy"},"content":"            if (!(other instanceof EditIngredientDescriptor)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"rebeccacxy"},"content":"            EditIngredientDescriptor e \u003d (EditIngredientDescriptor) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"rebeccacxy"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"rebeccacxy"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"NayLin-H99"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"NayLin-H99"},"content":"                    \u0026\u0026 getExpiryDate().equals(e.getExpiryDate());","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"rebeccacxy":69,"rootkie":5,"NayLin-H99":22,"-":131}},{"path":"src/main/java/fridgy/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Fridgy...\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"rebeccacxy":2,"rootkie":2,"-":16}},{"path":"src/main/java/fridgy/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":" * Finds and lists all ingredients in Inventory whose name contains any of the argument keywords.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + INGREDIENT_KEYWORD","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"            + \": Finds all ingredients whose names contain any of \"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"            + \"the specified keywords.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + INGREDIENT_KEYWORD + \" almond basil chocolate\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        model.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"        int size \u003d model.getFilteredIngredientList().size();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"        String plural \u003d size \u003d\u003d 0 || size \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"                String.format(Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW, size, plural));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"alissayarmantho":7,"rebeccacxy":7,"rootkie":2,"-":31}},{"path":"src/main/java/fridgy/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":1,"rootkie":2,"-":19}},{"path":"src/main/java/fridgy/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.IngredientDefaultComparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":" * Lists all ingredients in the address book to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"            + INGREDIENT_KEYWORD + \": Lists and sorts all ingredients.\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed and sorted all ingredients\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(IngredientModel model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        model.sortIngredient(new IngredientDefaultComparator());","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        model.updateFilteredIngredientList(Model.PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":27,"rootkie":2,"NayLin-H99":1,"-":1}},{"path":"src/main/java/fridgy/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INGREDIENT_KEYWORD \u003d \"ingredient\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + INGREDIENT_KEYWORD","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"            + \": view the ingredient identified by the index number used in the displayed ingredient list.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + INGREDIENT_KEYWORD + \" 1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing ingredient:\\n%1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    private final Index target;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"     * Instantiates a new View command.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"     * @param target the target index of the ingredient to view","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    public ViewCommand(Index target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    public CommandResult execute(IngredientModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        List\u003cIngredient\u003e ingredientList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"        if (target.getZeroBased() \u003e\u003d ingredientList.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient targetIngredient \u003d ingredientList.get(target.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        model.setActiveIngredient(targetIngredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetIngredient));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"            || ((other instanceof ViewCommand) //instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"            \u0026\u0026 target.equals(((ViewCommand) other).target)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rebeccacxy":1,"NayLin-H99":57}},{"path":"src/main/java/fridgy/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"rebeccacxy":2,"-":17}},{"path":"src/main/java/fridgy/logic/commands/recipe/AddRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_STEP;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" * Adds a Recipe to the RecipeBook.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"public class AddRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"            + RECIPE_KEYWORD","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"            + \": Adds a recipe to the RecipeBook. \"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_INGREDIENT + \" INGREDIENTS \"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_STEP + \" STEPS \"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \" DESCRIPTION]\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + RECIPE_KEYWORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_NAME + \" Burger \"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_INGREDIENT + \" Buns \"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_INGREDIENT + \" Patty \"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_STEP + \" Toast the buns. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_STEP + \" Put the patty between the buns. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"            + PREFIX_DESCRIPTION + \" Great burger! \";","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New recipe added:\\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_DUPLICATE_RECIPE \u003d \"This recipe already exists in the Inventory\";","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    private final Recipe toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * Creates an AddRecipeCommand to add the specified {@code Recipe}","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    public AddRecipeCommand(Recipe recipe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(recipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        toAdd \u003d recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    public CommandResult execute(RecipeModel model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        if (model.has(toAdd)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RECIPE);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        model.add(toAdd);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"                || (other instanceof AddRecipeCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"                \u0026\u0026 toAdd.equals(((AddRecipeCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rebeccacxy":1,"pattan9955":65,"rootkie":2,"NayLin-H99":1}},{"path":"src/main/java/fridgy/logic/commands/recipe/CookRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":" * Cooks a recipe and deducts the required quantity from the fridge inventory","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"public class CookRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"    public static final String COMMAND_WORD \u003d \"cook\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + RECIPE_KEYWORD","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"            + \": Cooks a recipe and deducts the quantity of ingredients from the inventory\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + RECIPE_KEYWORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recipe cooked:\\n%1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    public static final String NOT_ENOUGH_INGR \u003d \"There are not enough ingredients in the inventory to cook:\\n%1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"    private final Index target;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"     * Instantiates a new Cook recipe command.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"     * @param target the target index of the recipe to be cooked.","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"    public CookRecipeCommand(Index target) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"    public CommandResult execute(RecipeModel model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"        List\u003cRecipe\u003e recipeList \u003d model.getFilteredRecipeList();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        if (target.getZeroBased() \u003e\u003d recipeList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECIPE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"        Recipe recipeToCook \u003d recipeList.get(target.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e recipeIngredients \u003d recipeToCook.getIngredients();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        boolean deducted \u003d model.deductIngredients(recipeIngredients);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        if (!deducted) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"            throw new CommandException(String.format(NOT_ENOUGH_INGR, recipeToCook));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, recipeToCook));","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"                || (other instanceof CookRecipeCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"                \u0026\u0026 target.equals(((CookRecipeCommand) other).target));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NayLin-H99":69}},{"path":"src/main/java/fridgy/logic/commands/recipe/DeleteRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" * Deletes a Recipe from the RecipeBook.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"public class DeleteRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + RECIPE_KEYWORD","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"            + \": Deletes the recipe by index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"            + RECIPE_KEYWORD","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            + \" 1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recipe deleted:\\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    private final Index target;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * Creates a DeleteRecipeCommand to delete the recipe specified at {@code Index} in the","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * last observed recipe list.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    public DeleteRecipeCommand(Index target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    public CommandResult execute(RecipeModel model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"        List\u003cRecipe\u003e recipeList \u003d model.getFilteredRecipeList();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        if (target.getZeroBased() \u003e\u003d recipeList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECIPE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        Recipe targetRecipe \u003d recipeList.get(target.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        model.delete(targetRecipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetRecipe));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"                || ((other instanceof DeleteRecipeCommand) //instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"                \u0026\u0026 target.equals(((DeleteRecipeCommand) other).target)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"rebeccacxy":2,"pattan9955":58,"rootkie":1,"NayLin-H99":1}},{"path":"src/main/java/fridgy/logic/commands/recipe/EditRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":" * Edits a Recipe in the RecipeBook.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            + RECIPE_KEYWORD + \": Edits the details of the recipe identified \"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"            + \"by the index number used in the displayed recipe list. \"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"            + \"[\" + CliSyntax.PREFIX_DESCRIPTION + \" DESCRIPTION] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"            + \"[\" + CliSyntax.PREFIX_INGREDIENT + \" INGREDIENT]... \"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"            + \"[\" + CliSyntax.PREFIX_STEP + \" STEP]...\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + RECIPE_KEYWORD","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"            + \" 1 \" + CliSyntax.PREFIX_DESCRIPTION + \" Juicy Burger\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_EDIT_RECIPE_SUCCESS \u003d \"Edited Recipe:\\n%1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public static final String MESSAGE_DUPLICATE_RECIPE \u003d \"This recipe already exists in the RecipeBook.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    private final Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    private final EditRecipeDescriptor descriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"     * Creates an EditRecipeCommand to edit the specified Recipe at {@code Index} using {@code EditRecipeDescriptor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeCommand(Index index, EditRecipeDescriptor descriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     * @param model {@code RecipeModel} which the command should operate on.","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    public CommandResult execute(RecipeModel model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        List\u003cRecipe\u003e lastShownList \u003d model.getFilteredRecipeList();","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECIPE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        Recipe recipeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"        Recipe editedRecipe \u003d createEditedRecipe(recipeToEdit, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"        if (!recipeToEdit.isSameRecipe(editedRecipe) \u0026\u0026 model.has(editedRecipe)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RECIPE);","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        model.set(recipeToEdit, editedRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        model.updateFilteredRecipeList(RecipeModel.PREDICATE_SHOW_ALL_RECIPES);","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RECIPE_SUCCESS, editedRecipe));","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"    private static Recipe createEditedRecipe(Recipe toEdit, EditRecipeDescriptor descriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(toEdit);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"        Name updatedName \u003d descriptor.getName().orElse(toEdit.getName());","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        Optional\u003cString\u003e updatedDescription \u003d Optional.of(descriptor.getDescription()","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                .orElse(toEdit.getDescription().orElse(\"\")));","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"        Set\u003cBaseIngredient\u003e updatedIngredients \u003d descriptor.getIngredients()","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                .orElse(toEdit.getIngredients());","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"        List\u003cStep\u003e updatedSteps \u003d descriptor.getSteps()","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                .orElse(toEdit.getSteps());","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"        Recipe editedRecipe \u003d new Recipe(updatedName, updatedIngredients, updatedSteps, updatedDescription);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"        return editedRecipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"        if (!(other instanceof EditRecipeCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand otherCommand \u003d (EditRecipeCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"        return this.index.equals(otherCommand.index)","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"                \u0026\u0026 this.descriptor.equals(otherCommand.descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"    public static class EditRecipeDescriptor {","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        private Name name;","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"        private Set\u003cBaseIngredient\u003e ingredients;","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        private List\u003cStep\u003e steps;","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"        private String description;","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        public EditRecipeDescriptor() {}","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"        /** Copies an {@code EditRecipeDescriptor} for use in describing fields to edit. */","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        public EditRecipeDescriptor(EditRecipeDescriptor toCopy) {","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"            setIngredients(toCopy.ingredients);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"            setSteps(toCopy.steps);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"            return CollectionUtil.isAnyNonNull(name, ingredients, steps, description);","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"        public void setIngredients(Set\u003cBaseIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"            this.ingredients \u003d (ingredients !\u003d null) ? new HashSet\u003c\u003e(ingredients) : null;","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"        public void setSteps(List\u003cStep\u003e steps) {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"            this.steps \u003d (steps !\u003d null) ? new ArrayList\u003c\u003e(steps) : null;","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"        public Optional\u003cSet\u003cBaseIngredient\u003e\u003e getIngredients() {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"            return (ingredients !\u003d null)","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"pattan9955"},"content":"                    ? Optional.of(Collections.unmodifiableSet(ingredients))","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"        public Optional\u003cList\u003cStep\u003e\u003e getSteps() {","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"            return (steps !\u003d null)","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"                    ? Optional.of(Collections.unmodifiableList(steps))","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"pattan9955"},"content":"                return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"            if (!(other instanceof EditRecipeDescriptor)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"                return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"            EditRecipeDescriptor e \u003d (EditRecipeDescriptor) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 getIngredients().equals(e.getIngredients())","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 getSteps().equals(e.getSteps());","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"pattan9955":191}},{"path":"src/main/java/fridgy/logic/commands/recipe/FindRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Finds a Recipe by name in the RecipeBook.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"public class FindRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + RECIPE_KEYWORD","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"            + \": Finds all recipes whose names contain any of \"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"            + \"the specified keywords.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + RECIPE_KEYWORD + \" burger salad tempura\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"     * Creates a FindRecipeCommand to search for recipes which fulfill the specified {@code predicate}","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    public FindRecipeCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    public CommandResult execute(RecipeModel model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"        model.updateFilteredRecipeList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"        int size \u003d model.getFilteredRecipeList().size();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"        String plural \u003d size \u003d\u003d 0 || size \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"                String.format(Messages.MESSAGE_RECIPES_LISTED_OVERVIEW, size, plural));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"                || (other instanceof FindRecipeCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"                \u0026\u0026 predicate.equals(((FindRecipeCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alissayarmantho":45,"rebeccacxy":2,"pattan9955":3}},{"path":"src/main/java/fridgy/logic/commands/recipe/ListRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":" * Lists all recipes in the recipe book to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"public class ListRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"            + RECIPE_KEYWORD + \": Lists all recipes.\\n\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all recipes\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"    public CommandResult execute(RecipeModel model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"        model.updateFilteredRecipeList(Model.PREDICATE_SHOW_ALL_RECIPES);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"                || (other instanceof ListRecipeCommand); // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alissayarmantho":35}},{"path":"src/main/java/fridgy/logic/commands/recipe/RecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public abstract class RecipeCommand {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     * @param model {@code IngredientModel} which the command should operate on.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    public abstract CommandResult execute(RecipeModel model) throws CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"pattan9955":19}},{"path":"src/main/java/fridgy/logic/commands/recipe/ViewRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" * Views a specific Recipe in the RecipeBook in greater detail.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"public class ViewRecipeCommand extends RecipeCommand {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    public static final String RECIPE_KEYWORD \u003d \"recipe\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + RECIPE_KEYWORD","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"        + \": Views a recipe by index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"        + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        + RECIPE_KEYWORD","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        + \" 1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recipe in view: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    private final Index target;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     * Creates a DeleteRecipeCommand to delete the recipe specified at {@code Index} in the","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     * last observed recipe list.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    public ViewRecipeCommand(Index target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    public CommandResult execute(RecipeModel model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        List\u003cRecipe\u003e recipeList \u003d model.getFilteredRecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        if (target.getZeroBased() \u003e\u003d recipeList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECIPE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        Recipe targetRecipe \u003d recipeList.get(target.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        model.setActiveRecipe(targetRecipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetRecipe));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"            || ((other instanceof ViewRecipeCommand) //instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"            \u0026\u0026 target.equals(((ViewRecipeCommand) other).target)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rebeccacxy":3,"rootkie":56,"pattan9955":3}},{"path":"src/main/java/fridgy/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_EXPIRY;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    private static final Pattern INGREDIENT_ADD_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"            .compile(AddCommand.INGREDIENT_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        final Matcher matcher \u003d INGREDIENT_ADD_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"                    AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_DESCRIPTION,","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"                        PREFIX_TAG, PREFIX_EXPIRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_EXPIRY)","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        Quantity quantity \u003d ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"        ExpiryDate expiryDate \u003d ParserUtil.parseExpiry(argMultimap.getValue(PREFIX_EXPIRY).get());","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        assert name !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        assert quantity !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        assert expiryDate !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient ingredient \u003d new Ingredient(name, quantity, tagList, expiryDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"            Description description \u003d ParserUtil.parseDescription(","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"                    Optional.of(argMultimap.getValue(PREFIX_DESCRIPTION).orElse(null)));","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"            assert description !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"            ingredient \u003d new Ingredient(name, quantity, description, tagList, expiryDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        return new AddCommand(ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"rebeccacxy":40,"NayLin-H99":9,"-":37}},{"path":"src/main/java/fridgy/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"rebeccacxy":1,"-":59}},{"path":"src/main/java/fridgy/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"rebeccacxy":1,"-":147}},{"path":"src/main/java/fridgy/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"-q\");","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"-d\");","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t\");","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    public static final Prefix PREFIX_EXPIRY \u003d new Prefix(\"-e\");","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /* Recipe Prefixes */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    public static final Prefix PREFIX_INGREDIENT \u003d new Prefix(\"-i\");","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    public static final Prefix PREFIX_STEP \u003d new Prefix(\"-s\");","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rebeccacxy":3,"pattan9955":4,"NayLin-H99":3,"-":9}},{"path":"src/main/java/fridgy/logic/parser/CommandExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"public interface CommandExecutor {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    CommandResult apply(Model model) throws CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"pattan9955":10}},{"path":"src/main/java/fridgy/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    private static final Pattern INGREDIENT_DELETE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"            .compile(DeleteCommand.INGREDIENT_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        final Matcher matcher \u003d INGREDIENT_DELETE_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"            Index index \u003d ParserUtil.parseIndex(arguments);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rebeccacxy":23,"-":20}},{"path":"src/main/java/fridgy/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_EXPIRY;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand.EditIngredientDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    private static final Pattern INGREDIENT_EDIT_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"            .compile(EditCommand.INGREDIENT_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        final Matcher matcher \u003d INGREDIENT_EDIT_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"                    EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_TAG,","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                        PREFIX_DESCRIPTION, PREFIX_EXPIRY);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        EditIngredientDescriptor editIngredientDescriptor \u003d new EditIngredientDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"            editIngredientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"            editIngredientDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"            editIngredientDescriptor.setDescription(","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"                    ParserUtil.parseDescription(Optional.of(argMultimap.getValue(PREFIX_DESCRIPTION).get())));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        if (argMultimap.getValue(PREFIX_EXPIRY).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"            editIngredientDescriptor.setExpiry(ParserUtil.parseExpiry(argMultimap.getValue(PREFIX_EXPIRY).get()));","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editIngredientDescriptor::setTags);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        if (!editIngredientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        return new EditCommand(index, editIngredientDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rebeccacxy":37,"NayLin-H99":6,"-":55}},{"path":"src/main/java/fridgy/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.FindCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    private static final Pattern INGREDIENT_FIND_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"            .compile(FindCommand.INGREDIENT_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"        final Matcher matcher \u003d INGREDIENT_FIND_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"        final String trimmedArgs \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"alissayarmantho":13,"rebeccacxy":6,"-":24}},{"path":"src/main/java/fridgy/logic/parser/FridgyParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.RecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.recipe.RecipeParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"public class FridgyParser {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private static final String RECIPE_TYPE \u003d \"recipe\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    private static final String INGREDIENT_TYPE \u003d \"ingredient\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern TYPED_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"            .compile(\"(?\u003ccommandWord\u003e\\\\S+)\\\\s?(?\u003ctaskType\u003e\\\\S*)?\\\\s?(?\u003carguments\u003e.*)?\");","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern GENERAL_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"            .compile(\"(?\u003ccommandWord\u003e^\\\\S*$)\");","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    private RecipeParser recipeParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    private InventoryParser inventoryParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Initializes the Command Parser for Fridgy.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    public FridgyParser() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        this.recipeParser \u003d new RecipeParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        this.inventoryParser \u003d new InventoryParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * Parses user input into a CommandExecutor executable that can be run to","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * produce a CommandResult.","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandExecutor that executes the command when provided a model.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * @throws ParseException If user provides invalid input.","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    public CommandExecutor parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        final Matcher taskMatcher \u003d TYPED_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        if (!taskMatcher.matches()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"            return parseGeneralCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        final String taskType \u003d taskMatcher.group(\"taskType\");","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        switch(taskType) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        case RECIPE_TYPE:","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"            RecipeCommand recipeCommand \u003d recipeParser.parseCommand(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"            return recipeCommand::execute;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        case INGREDIENT_TYPE:","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"            Command ingredientCommand \u003d inventoryParser.parseCommand(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"            return ingredientCommand::execute;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"            return parseGeneralCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    private CommandExecutor parseGeneralCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"        final Matcher matcher \u003d GENERAL_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                    HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"            return new ExitCommand()::execute;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"            return new HelpCommand()::execute;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"pattan9955":81}},{"path":"src/main/java/fridgy/logic/parser/InventoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.FindCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"public class InventoryParser {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":15,"NayLin-H99":3,"-":53}},{"path":"src/main/java/fridgy/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ListCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":" * Parses input argument and creates a new ListCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    private static final Pattern INGREDIENT_LIST_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"            .compile(ListCommand.INGREDIENT_KEYWORD);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"        final Matcher matcher \u003d INGREDIENT_LIST_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"                    ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        return new ListCommand();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rebeccacxy":34}},{"path":"src/main/java/fridgy/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"rebeccacxy":3,"-":13}},{"path":"src/main/java/fridgy/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.StringUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"     * Parses {@code String date} into an {@code ExpiryDate} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"     * trimmed.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"     * @throws ParseException if the specified date is invalid (not of DD-MM-YYYY format).","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"    public static ExpiryDate parseExpiry(String date) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        if (!ExpiryDate.isValidExpiry(trimmedDate)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"            throw new ParseException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        return new ExpiryDate(trimmedDate);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"     * Parses a {@code String quantity} into a {@code Quantity}.","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        if (!Quantity.isValidQuantity(trimmedQuantity)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        return new Quantity(trimmedQuantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"    public static Description parseDescription(Optional\u003cString\u003e description) throws ParseException {","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        String trimmedDescription \u003d description.get().trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"        if (!Description.isValidDescription(Optional.of(trimmedDescription))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"        return new Description(Optional.of(trimmedDescription));","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"     * Parses {@code String name} into a {@code Name}","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    public static fridgy.model.recipe.Name parseRecipeName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"        return new fridgy.model.recipe.Name(trimmedName);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"rootkie"},"content":"     * Parses {@code List\u003cString\u003e ingredients} into a {@code Set\u003cBaseIngredient\u003e}.","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"    public static Set\u003cBaseIngredient\u003e parseIngredients(List\u003cString\u003e ingredients) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(ingredients);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"rootkie"},"content":"        final Set\u003cBaseIngredient\u003e ingredientSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"        for (String ingredient : ingredients) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"            if (!ingredient.equals(\"\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"rootkie"},"content":"                ingredientSet.add(parseBaseIngredient(ingredient));","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"        if (ingredientSet.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(BaseIngredient.BASE_INGREDIENT_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"        return ingredientSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"rootkie"},"content":"     * Parses {@code String ingredient} into a {@code BaseIngredient}.","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"rootkie"},"content":"    public static BaseIngredient parseBaseIngredient(String ingredient) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"        String trimmedIngredient \u003d ingredient.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"rootkie"},"content":"        // this regex matches for \u003cingredient name\u003e \u003cquantity\u003e string","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"rootkie"},"content":"        String validBaseIngredient \u003d \"(?\u003cname\u003e\\\\w.*)\\\\s(?\u003cquantity\u003e(?\u003d.*[1-9])\\\\d+(\\\\.\\\\d+)?\\\\h*((m|k)?(g|l)){0,1})\";","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"rootkie"},"content":"        Matcher matcher \u003d Pattern.compile(validBaseIngredient).matcher(trimmedIngredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"rootkie"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"rootkie"},"content":"            throw new ParseException(BaseIngredient.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"rootkie"},"content":"        Name name \u003d parseName(matcher.group(\"name\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"rootkie"},"content":"        Quantity quantity \u003d parseQuantity(matcher.group(\"quantity\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"rootkie"},"content":"        return new BaseIngredient(name, quantity);","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"     * Parses {@code List\u003cString\u003e steps} into a {@code List\u003cStep\u003e}.","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"    public static List\u003cStep\u003e parseSteps(List\u003cString\u003e steps) {","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(steps);","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"pattan9955"},"content":"        final ArrayList\u003cStep\u003e stepList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"        for (String step : steps) {","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"            stepList.add(parseStep(step));","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"        return stepList;","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"     * Parses {@code String step} into a {@code Step}.","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"    public static Step parseStep(String step) {","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(step);","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"pattan9955"},"content":"        String trimmedStep \u003d step.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"pattan9955"},"content":"        return new Step(trimmedStep);","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rebeccacxy":25,"pattan9955":52,"rootkie":20,"NayLin-H99":15,"-":84}},{"path":"src/main/java/fridgy/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"rebeccacxy":1,"-":38}},{"path":"src/main/java/fridgy/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    private static final Pattern INGREDIENT_VIEW_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"            .compile(ViewCommand.INGREDIENT_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    public ViewCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"        final Matcher matcher \u003d INGREDIENT_VIEW_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":32}},{"path":"src/main/java/fridgy/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"rebeccacxy":2,"-":15}},{"path":"src/main/java/fridgy/logic/parser/recipe/AddRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_STEP;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.Prefix;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":" * Parses input arguments and creates a new AddRecipeCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"public class AddRecipeCommandParser implements RecipeCommandParser\u003cAddRecipeCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern ADD_RECIPE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"            .compile(AddRecipeCommand.RECIPE_KEYWORD","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"                    + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    public AddRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        final Matcher matcher \u003d ADD_RECIPE_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"                    AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INGREDIENT, PREFIX_STEP, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INGREDIENT, PREFIX_STEP)","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"                    AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        Name name \u003d ParserUtil.parseRecipeName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        Set\u003cBaseIngredient\u003e ingredientSet \u003d ParserUtil.parseIngredients(argMultimap.getAllValues(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        List\u003cStep\u003e stepList \u003d ParserUtil.parseSteps(argMultimap.getAllValues(PREFIX_STEP));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        Optional\u003cString\u003e description \u003d argMultimap.getValue(PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        Recipe recipe \u003d new Recipe(name, ingredientSet, stepList, description);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        return new AddRecipeCommand(recipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"pattan9955":73,"rootkie":2}},{"path":"src/main/java/fridgy/logic/parser/recipe/CookRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.CookRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":" * Parses input arguments and creates a new CookRecipeCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"public class CookRecipeCommandParser implements RecipeCommandParser\u003cCookRecipeCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    private static final Pattern COOK_RECIPE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"            .compile(CookRecipeCommand.RECIPE_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"    public CookRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"        final Matcher matcher \u003d COOK_RECIPE_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"                    CookRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"            return new CookRecipeCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CookRecipeCommand.MESSAGE_USAGE), e","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"            );","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NayLin-H99":39}},{"path":"src/main/java/fridgy/logic/parser/recipe/DeleteRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":" * Parses input arguments and creates a new DeleteRecipeCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"public class DeleteRecipeCommandParser implements RecipeCommandParser\u003cDeleteRecipeCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern DELETE_RECIPE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"            .compile(DeleteRecipeCommand.RECIPE_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public DeleteRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        final Matcher matcher \u003d DELETE_RECIPE_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"                    DeleteRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            return new DeleteRecipeCommand(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecipeCommand.MESSAGE_USAGE), e","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"            );","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"pattan9955":39}},{"path":"src/main/java/fridgy/logic/parser/recipe/EditRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.CliSyntax.PREFIX_STEP;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":" * Parses input arguments and creates a new EditRecipeCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeCommandParser implements RecipeCommandParser\u003cEditRecipeCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern RECIPE_EDIT_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            .compile(EditRecipeCommand.RECIPE_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        final Matcher matcher \u003d RECIPE_EDIT_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"                    EditRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"                .tokenize(args, PREFIX_NAME, PREFIX_INGREDIENT, PREFIX_STEP, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, EditRecipeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor descriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"            descriptor.setName(ParserUtil.parseRecipeName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        if (argMultimap.getValue(PREFIX_INGREDIENT).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"            descriptor.setIngredients(ParserUtil","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"                    .parseIngredients(argMultimap.getAllValues(PREFIX_INGREDIENT)));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        if (argMultimap.getValue(PREFIX_STEP).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"            descriptor.setSteps(ParserUtil.parseSteps(argMultimap.getAllValues(PREFIX_STEP)));","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"            descriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        if (!descriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(EditRecipeCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        return new EditRecipeCommand(index, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"pattan9955":72}},{"path":"src/main/java/fridgy/logic/parser/recipe/FindRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.FindRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":" * Parses input arguments and creates a new FindRecipeCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"public class FindRecipeCommandParser implements RecipeCommandParser\u003cFindRecipeCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    private static final Pattern FIND_RECIPE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"            .compile(FindRecipeCommand.RECIPE_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"     * Parses the given {@code String} of arguments in the context of the FindRecipeCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"     * and returns a FindRecipeCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"    public FindRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"        final Matcher matcher \u003d FIND_RECIPE_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"        final String trimmedArgs \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"        return new FindRecipeCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alissayarmantho":42}},{"path":"src/main/java/fridgy/logic/parser/recipe/ListRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.ListRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":" * Parses input argument and creates a new ListRecipeCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"public class ListRecipeCommandParser implements RecipeCommandParser\u003cListRecipeCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    private static final Pattern RECIPE_LIST_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"            .compile(ListRecipeCommand.RECIPE_KEYWORD);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"     * Parses the given {@code String} of arguments in the context of the ListRecipeCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"     * and returns a ListRecipeCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    public ListRecipeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"        final Matcher matcher \u003d RECIPE_LIST_COMMAND_ARGUMENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"                    ListRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"        return new ListRecipeCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alissayarmantho":33}},{"path":"src/main/java/fridgy/logic/parser/recipe/RecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.RecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public interface RecipeCommandParser\u003cT extends RecipeCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"    public T parse(String userInput) throws ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"pattan9955":8}},{"path":"src/main/java/fridgy/logic/parser/recipe/RecipeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.CookRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.FindRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.ListRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.RecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.recipe.ViewRecipeCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":" * Parses user input.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"public class RecipeParser {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public RecipeCommand parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"        case AddRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"            return new AddRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        case DeleteRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            return new DeleteRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"        case FindRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"            return new FindRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"        case ListRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"            return new ListRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        case ViewRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"            return new ViewRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        case CookRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"            return new CookRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        case EditRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"            return new EditRecipeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alissayarmantho":6,"pattan9955":51,"rootkie":3,"NayLin-H99":3}},{"path":"src/main/java/fridgy/logic/parser/recipe/ViewRecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.recipe.ViewRecipeCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":" * Parses input arguments and creates a new ViewRecipeCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"public class ViewRecipeCommandParser implements RecipeCommandParser\u003cViewRecipeCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    private static final Pattern VIEW_RECIPE_COMMAND_ARGUMENT_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        .compile(ViewRecipeCommand.RECIPE_KEYWORD + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    public ViewRecipeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        final Matcher matcher \u003d VIEW_RECIPE_COMMAND_ARGUMENT_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"                ViewRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        final String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"            return new ViewRecipeCommand(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewRecipeCommand.MESSAGE_USAGE), e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"            );","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rootkie":36,"pattan9955":3}},{"path":"src/main/java/fridgy/model/IngredientModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"public interface IngredientModel {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    Predicate\u003cIngredient\u003e PREDICATE_SHOW_ALL_INGREDIENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    void setInventoryFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    void setInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    /** Returns the Inventory */","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    ReadOnlyDatabase\u003cIngredient\u003e getInventory();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"     * Returns true if n ingredient with the same identity as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    boolean has(Ingredient ingredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"     * Deletes the given ingredient.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"     * The ingredient must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"    void delete(Ingredient target);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"     * Adds the given ingredient.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"     * {@code ingredient} must not already exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"    void add(Ingredient ingredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"     * Sorts the inventory of ingredients using the specified comparator.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"    void sortIngredient(Comparator\u003cIngredient\u003e comparator);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"     * Replaces the given ingredient {@code target} with {@code editedIngredient}.","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"     * The ingredient identity of {@code editedIngredient} must not be the same as another existing ingredient in the","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     * address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"    void set(Ingredient target, Ingredient editedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"    /** Returns an unmodifiable view of the filtered ingredient list */","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"    void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"     * Puts a new Ingredient under an {@code Observable}.","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"     * @param activeIngredient to be placed under an Observable","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"    void setActiveIngredient(Ingredient activeIngredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":86,"NayLin-H99":12}},{"path":"src/main/java/fridgy/model/Inventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.Database;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.UniqueDataList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.IngredientDefaultComparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.exceptions.DuplicateIngredientException;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":" * Wraps all data at the Inventory level","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":" * Duplicates are not allowed (by .isSameIngredient comparison)","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"public class Inventory extends Database\u003cIngredient\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * Creates a default Inventory with default comparator.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public Inventory() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        super(new UniqueDataList\u003c\u003e(new IngredientDefaultComparator()));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"     * Creates an Inventory using the Ingredients in the {@code toBeCopied}","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"     * @param toBeCopied the to be copied","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    public Inventory(ReadOnlyDatabase\u003cIngredient\u003e toBeCopied) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        super(toBeCopied);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    public void setItems(List\u003cIngredient\u003e items) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"            super.setItems(items);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"            // throw a more specific exception","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"            throw new DuplicateIngredientException();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"     * Deduct a set of ingredients from the inventory if possible.","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"     * Returns true if the deduction is successful, false if otherwise.","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"     * @param baseIngredients the set of {@code BaseIngredient} to deduct from inventory","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"     * @return the boolean that indicates the deduction is successful","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"    public boolean deductIngredients(Set\u003cBaseIngredient\u003e baseIngredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(baseIngredients);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"        for (BaseIngredient ingr : baseIngredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"            if (!isDeductible(ingr)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"                return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"        ObservableList\u003cIngredient\u003e inventory \u003d getList();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"        for (BaseIngredient ingrToDeduct : baseIngredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"            for (Ingredient currIngr : inventory) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"                if (currIngr.getExpiryDate().isExpired()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"                    continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"                if (!currIngr.isComparable(ingrToDeduct)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"                    continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"                String units \u003d currIngr.getQuantity().getUnits();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"                Double remainingQty \u003d currIngr.getQuantityDiff(ingrToDeduct);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"                if (remainingQty \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"                    Quantity newQty \u003d new Quantity(remainingQty + units);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"                    Ingredient ingrWithNewQty \u003d new Ingredient(currIngr.getName(), newQty, currIngr.getDescription(),","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"                            currIngr.getTags(), currIngr.getExpiryDate());","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"                    set(currIngr, ingrWithNewQty);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"                } else if (remainingQty \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"                    remove(currIngr);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"                    remove(currIngr);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"                    Quantity newQty \u003d new Quantity(Math.abs(remainingQty) + units);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"                    ingrToDeduct \u003d new BaseIngredient(ingrToDeduct.getName(), newQty);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"     * Checks through the inventory to see if the full quantity of the baseIngredient is deductible.","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"     * Returns true if the full quantity is deductible, false if otherwise.","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"     * @param baseIngredient to deduct from the inventory","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"     * @return boolean that indicates if the full quantity of baseIngredient is deductible from the inventory","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"    private boolean isDeductible(BaseIngredient baseIngredient) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(baseIngredient);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"        ObservableList\u003cIngredient\u003e inventory \u003d getList();","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        List\u003cIngredient\u003e deductibleIngredients \u003d inventory.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"                .filter(x -\u003e !x.getExpiryDate().isExpired() \u0026\u0026 baseIngredient.isComparable(x))","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"        double sum \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"        double minQty \u003d baseIngredient.getQuantity().getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        for (Ingredient currIngr : deductibleIngredients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"            sum +\u003d currIngr.getQuantity().getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"            if (sum \u003e\u003d minQty) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"                return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":19,"rootkie":21,"NayLin-H99":82}},{"path":"src/main/java/fridgy/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.ui.Observable;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"public interface Model extends RecipeModel, IngredientModel {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"    /** Returns an {@code Observable} that observes changes to an active {@code Recipe} or {@code Ingredient} */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    Observable getActiveObservable();","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rebeccacxy":1,"rootkie":1,"NayLin-H99":4,"-":5}},{"path":"src/main/java/fridgy/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.ui.Observable;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    private final Inventory inventory;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    private final RecipeBook recipeBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    private final FilteredList\u003cIngredient\u003e filteredIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    private final FilteredList\u003cRecipe\u003e filteredRecipes;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    private final Observable activeObservable;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"     * Initializes a ModelManager with the given inventory and userPrefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    public ModelManager(ReadOnlyDatabase\u003cIngredient\u003e inventory,","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"                        ReadOnlyDatabase\u003cRecipe\u003e recipeBook,","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"        requireAllNonNull(inventory, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        logger.fine(\"Initializing with address book: \" + inventory","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"                + \" Initializing with recipe book: \" + inventory","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        this.inventory \u003d new Inventory(inventory);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        this.recipeBook \u003d new RecipeBook(recipeBook);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        filteredIngredients \u003d new FilteredList\u003c\u003e(this.inventory.getList());","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"        filteredRecipes \u003d new FilteredList\u003c\u003e(this.recipeBook.getList());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"        // observable that can change to make UI auto update","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"        activeObservable \u003d new Observable();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"        this(new Inventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"        return userPrefs.getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"    public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(inventoryFilePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"        userPrefs.setInventoryFilePath(inventoryFilePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"    public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"        return userPrefs.getRecipeBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"    public void setRecipeBookFilePath(Path recipeBookFilePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"        requireNonNull(recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"        userPrefs.setRecipeBookFilePath(recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Common CRUD \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"    public boolean has(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"rootkie"},"content":"        return inventory.has(ingredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"    public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"        requireNonNull(recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"rootkie"},"content":"        return recipeBook.has(recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"rootkie"},"content":"    public void delete(Ingredient target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"rootkie"},"content":"        inventory.remove(target);","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"rootkie"},"content":"    public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"rootkie"},"content":"        recipeBook.remove(target);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"rootkie"},"content":"    public void add(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"rootkie"},"content":"        inventory.add(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"rebeccacxy"},"content":"        updateFilteredIngredientList(PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"    public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"rootkie"},"content":"        recipeBook.add(recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"rootkie"},"content":"        updateFilteredRecipeList(PREDICATE_SHOW_ALL_RECIPES);","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"rootkie"},"content":"    public void set(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"        inventory.set(target, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"rootkie"},"content":"    public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(target, editedRecipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"rootkie"},"content":"        recipeBook.set(target, editedRecipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Inventory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"rootkie"},"content":"    public void setInventory(ReadOnlyDatabase\u003cIngredient\u003e inventory) {","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"rootkie"},"content":"        this.inventory.resetDatabase(inventory);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"rootkie"},"content":"    public ReadOnlyDatabase\u003cIngredient\u003e getInventory() {","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"rootkie"},"content":"        return inventory;","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"NayLin-H99"},"content":"    /** Changes the active {@code Ingredient} under the {@code Observable}. */","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"NayLin-H99"},"content":"    public void setActiveIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"        if (inventory.has(ingredient)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"            activeObservable.change(ingredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecipeBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"    public void setRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook) {","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"rootkie"},"content":"        this.recipeBook.resetDatabase(recipeBook);","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"    public ReadOnlyDatabase\u003cRecipe\u003e getRecipeBook() {","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"rootkie"},"content":"        return recipeBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"NayLin-H99"},"content":"    /** Changes the active {@code Recipe} under the {@code Observable}. */","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"rootkie"},"content":"    public void setActiveRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"rootkie"},"content":"        requireNonNull(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"rootkie"},"content":"        if (recipeBook.has(recipe)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"NayLin-H99"},"content":"            activeObservable.change(recipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"NayLin-H99"},"content":"    public boolean deductIngredients(Set\u003cBaseIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"NayLin-H99"},"content":"        return inventory.deductIngredients(ingredients);","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"rebeccacxy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Ingredient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":212,"author":{"gitId":"rebeccacxy"},"content":"     * Returns an unmodifiable view of the list of {@code Ingredient} backed by the internal list of","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"rebeccacxy"},"content":"     * {@code versionedInventory}","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":216,"author":{"gitId":"rebeccacxy"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"rebeccacxy"},"content":"        return filteredIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"rebeccacxy"},"content":"    public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"rebeccacxy"},"content":"        filteredIngredients.setPredicate(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Recipe List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"rootkie"},"content":"     * Returns an unmodifiable view of the list of {@code Recipe} backed by the internal list of","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"rootkie"},"content":"     * {@code versionedInventory}","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"rootkie"},"content":"    public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"rootkie"},"content":"        return filteredRecipes;","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"rootkie"},"content":"    public void updateFilteredRecipeList(Predicate\u003cRecipe\u003e predicate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"rootkie"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"rootkie"},"content":"        filteredRecipes.setPredicate(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"alissayarmantho"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorting \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"alissayarmantho"},"content":"    public void sortIngredient(Comparator\u003cIngredient\u003e comparator) {","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"alissayarmantho"},"content":"        this.inventory.sort(comparator);","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"alissayarmantho"},"content":"    public void sortRecipe(Comparator\u003cRecipe\u003e comparator) {","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"alissayarmantho"},"content":"        this.recipeBook.sort(comparator);","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"rebeccacxy"},"content":"        return inventory.equals(other.inventory)","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 recipeBook.equals(other.recipeBook)","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":272,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 filteredIngredients.equals(other.filteredIngredients)","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 filteredRecipes.equals(other.filteredRecipes);","lastModifiedDate":"2021-09-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"NayLin-H99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Observable \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"NayLin-H99"},"content":"    public Observable getActiveObservable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"NayLin-H99"},"content":"        return activeObservable;","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alissayarmantho":9,"rebeccacxy":26,"rootkie":106,"NayLin-H99":34,"-":108}},{"path":"src/main/java/fridgy/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    Path getRecipeBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"rebeccacxy":3,"rootkie":1,"-":12}},{"path":"src/main/java/fridgy/model/RecipeBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.Database;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.base.UniqueDataList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":" * Duplicates are not allowed (by .isSameRecipe comparison)","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"public class RecipeBook extends Database\u003cRecipe\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    // Implement any operations on recipe beyond CRUD here.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    public RecipeBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"        super(new UniqueDataList\u003c\u003e());","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    public RecipeBook(ReadOnlyDatabase\u003cRecipe\u003e roBook) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        super(roBook);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"alissayarmantho":2,"rootkie":19}},{"path":"src/main/java/fridgy/model/RecipeModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"public interface RecipeModel {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    Predicate\u003cRecipe\u003e PREDICATE_SHOW_ALL_RECIPES \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"     * Returns the user prefs\u0027 recipe book file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    Path getRecipeBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * Sets the user prefs\u0027 recipe book file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    void setRecipeBookFilePath(Path recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"     * Replaces recipe book data with the data in {@code recipeBook}.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    void setRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    /** Returns the RecipeBook */","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    ReadOnlyDatabase\u003cRecipe\u003e getRecipeBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * Returns true if a recipe with the same identity as {@code recipe} exists in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    boolean has(Recipe recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"     * Deletes the given recipe.","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"     * The recipe must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    void delete(Recipe target);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"     * Adds the given recipe.","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"     * {@code recipe} must not already exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    void add(Recipe recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"     * Sorts the recipes in the recipe book using the specified comparator.","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"    void sortRecipe(Comparator\u003cRecipe\u003e comparator);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"     * Replaces the given recipe {@code target} with {@code editedRecipe}.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"     * The recipe identity of {@code editedRecipe} must not be the same as another existing recipe in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    void set(Recipe target, Recipe editedRecipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"    /** Returns an unmodifiable view of the filtered recipe list */","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    ObservableList\u003cRecipe\u003e getFilteredRecipeList();","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"    /** Returns an unmodifiable view of the filtered ingredient list */","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"    /** Sets a new recipe as active under an {@code Observable}.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"     * @param activeRecipe to be placed under an Observable","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"    void setActiveRecipe(Recipe activeRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"     * Updates the filter of the filtered recipe list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"    void updateFilteredRecipeList(Predicate\u003cRecipe\u003e predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"    boolean deductIngredients(Set\u003cBaseIngredient\u003e ingrToDeduct);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"alissayarmantho":10,"rootkie":66,"NayLin-H99":8}},{"path":"src/main/java/fridgy/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    private Path recipeBookFilePath \u003d Paths.get(\"data\" , \"recipebook.json\");","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        setInventoryFilePath(newUserPrefs.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        setRecipeBookFilePath(newUserPrefs.getRecipeBookFilePath());","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"        return recipeBookFilePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    public void setInventoryFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public void setRecipeBookFilePath(Path recipeBookFilePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        requireNonNull(recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        this.recipeBookFilePath \u003d recipeBookFilePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 recipeBookFilePath.equals(o.recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"        sb.append(\"\\nLocal address data file location : \" + addressBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        sb.append(\"\\nLocal recipe data file location : \" + recipeBookFilePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":5,"rootkie":15,"-":79}},{"path":"src/main/java/fridgy/model/base/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"public class Database\u003cT extends Eq\u003e implements ReadOnlyDatabase\u003cT\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    private final UniqueDataList\u003cT\u003e items;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    public Database() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        this.items \u003d new UniqueDataList\u003cT\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    public Database(UniqueDataList\u003cT\u003e items) {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        this.items \u003d items;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Creates a database using the data in the {@code toBeCopied}","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public Database(ReadOnlyDatabase\u003cT\u003e toBeCopied) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        this();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        resetDatabase(toBeCopied);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"     * Replaces the contents of the data list with {@code items}.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"     * {@code items} must not contain duplicate data.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        this.items.replace(items);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * Resets the existing data of this {@code Database} with {@code newData}.","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    public void resetDatabase(ReadOnlyDatabase\u003cT\u003e newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        setItems(newData.getList());","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     * Returns true if a data with the same identity as {@code item} exists in the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    public boolean has(T item) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        return items.contains(item);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"     * Adds a item to the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"     * The item must not already exist in the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"    public void add(T p) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        items.add(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"     * Replaces the given item {@code target} in the list with {@code editedT}.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"     * The item identity of {@code editedT} must not be the same as another existing item in the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    public void set(T target, T editedT) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"        requireNonNull(editedT);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        items.set(target, editedT);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"     * Removes {@code key} from this {@code Inventory}.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"     * {@code key} must exist in the database.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    public void remove(T key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        items.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"    //// util methods","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"        return items.asUnmodifiableObservableList().size() + \" items\";","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"     * Sorts the items by given comparator","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"    public void sort(Comparator\u003cT\u003e comparator) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"        items.sort(comparator);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"    public ObservableList\u003cT\u003e getList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"                || (other instanceof Database\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 items.equals(((Database\u003c?\u003e) other).items));","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"        return items.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"rootkie":112}},{"path":"src/main/java/fridgy/model/base/Eq.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Represents a type of objects that has alternate equivalence comparisons than equals.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public interface Eq {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"     * Returns true if a weaker notion of equality hold true for two Eq objects\u0027","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    boolean isSame(Eq other);","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rootkie":11}},{"path":"src/main/java/fridgy/model/base/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"public interface Model\u003cT\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    Predicate\u003c?\u003e PREDICATE_SHOW_ALL_RECIPES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"     * Replaces item book data with the data in {@code itemBook}.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    void setDatabase(ReadOnlyDatabase\u003cT\u003e database);","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    /** Returns the Database */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    ReadOnlyDatabase\u003cT\u003e getDatabase();","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    boolean has(T item);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"     * Deletes the given item.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * The item must exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    void delete(T target);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     * Adds the given item.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * {@code item} must not already exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    void add(T item);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * Replaces the given item {@code target} with {@code editedItem}.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    void set(T target, T editedItem);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    /** Returns an unmodifiable view of the filtered item list */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    ObservableList\u003cT\u003e getFilteredList();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"     * Updates the filter of the filtered item list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    void updateFilteredList(Predicate\u003cT\u003e predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rootkie":53}},{"path":"src/main/java/fridgy/model/base/ReadOnlyDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"public interface ReadOnlyDatabase\u003cT\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"     * Returns an unmodifiable view of the items list.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    ObservableList\u003cT\u003e getList();","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rootkie":12}},{"path":"src/main/java/fridgy/model/base/UniqueDataList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.exceptions.DuplicateRecipeException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.exceptions.RecipeNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":" * Represent a unique data list.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":" * @param \u003cT\u003e Any type that implements {@code Eq}","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"public class UniqueDataList\u003cT extends Eq\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    private Optional\u003cComparator\u003cT\u003e\u003e comparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public UniqueDataList(Comparator\u003cT\u003e comparator) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        this.comparator \u003d Optional.ofNullable(comparator);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    public UniqueDataList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        this.comparator \u003d Optional.empty();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    };","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     * Adds an item to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"            throw new DuplicateRecipeException();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"     * Replaces the recipe {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"     * The recipe identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    public void set(T target, T editedItem) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"            throw new RecipeNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"            throw new DuplicateRecipeException();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"     * Removes the equivalent recipe from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     * The recipe must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"            throw new RecipeNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"    public void replace(UniqueDataList\u003cT\u003e replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"     * Replaces the contents of this list with {@code recipes}.","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"     * {@code recipes} must not contain duplicate recipes.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"    public void replace(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"rootkie"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"rootkie"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"rootkie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"rootkie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"rootkie"},"content":"                || (other instanceof UniqueDataList\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 internalList.equals(((UniqueDataList\u003c?\u003e) other).internalList));","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"rootkie"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"rootkie"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"rootkie"},"content":"     * Sorts the list of items using the current comparator.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"rootkie"},"content":"    public void sort() {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"rootkie"},"content":"        comparator.ifPresent(internalList::sort);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"rootkie"},"content":"     * Sorts the list of items using the specified comparator.","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"rootkie"},"content":"    public void sort(Comparator\u003cT\u003e comparator) {","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"rootkie"},"content":"        this.comparator \u003d Optional.ofNullable(comparator);","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"rootkie"},"content":"        sort();","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"rootkie"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"rootkie"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"rootkie"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"rootkie"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"rootkie"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"rootkie"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"rootkie"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rootkie":162}},{"path":"src/main/java/fridgy/model/base/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.base.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Signals that the operation will result in duplicate items","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" * (items are considered duplicates if they have the same identity).","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rootkie":11}},{"path":"src/main/java/fridgy/model/ingredient/BaseIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.base.Eq;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":" * Represents a Base ingredient to be used by Recipe.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"public class BaseIngredient implements Eq {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        \"Base Ingredient should have the format of \u003cName\u003e \u003cQuantity\u003e\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    public static final String BASE_INGREDIENT_CONSTRAINTS \u003d \"Ingredient field cannot be empty.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    // Identity fields","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    private final Name name;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    private final Quantity quantity;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs a base ingredient reference with the given name and quantity.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    public BaseIngredient(Name name, Quantity quantity) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        requireAllNonNull(name, quantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        return quantity;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if both ingredients have the same name.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"     * This defines a weaker notion of equality between two ingredients.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public boolean isSameIngredient(BaseIngredient otherBaseIngredient) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        if (otherBaseIngredient \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        return otherBaseIngredient !\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherBaseIngredient.getName().equals(getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    public boolean isSame(Eq other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        if (other instanceof BaseIngredient) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"            return isSameIngredient((BaseIngredient) other);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if both ingredients have the same identity and data fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"     * This defines a stronger notion of equality between two ingredients.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        if (!(other instanceof BaseIngredient)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient otherBaseIngredient \u003d (BaseIngredient) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        return otherBaseIngredient.getName().equals(getName())","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherBaseIngredient.getQuantity().equals(getQuantity());","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"        return Objects.hash(name, quantity);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"                .append(getQuantity());","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"     * Naively deducts quantity of otherIngr from this ingredient.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"     * Returns a {@code double}, disregards of units of {@code Quantity} in this calculation.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"     * @param otherIngr","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"     * @return double (quantity of this ingredient - quantity of otherIngr)","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"    public double getQuantityDiff(BaseIngredient otherIngr) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(otherIngr);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qty1 \u003d getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qty2 \u003d otherIngr.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"        return qty1.compareQtyWithSameUnits(qty2);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"     * Matches this ingredient with another {@code BaseIngredient} to see if they match in {@code Name} and","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"     * {@code Quantity} units.{@code Name} is matched ignoring case.","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"     * Returns true if they are matched, false if they do not match.","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"     * @param ingredient to be compared","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"     * @return boolean that indicates if the two ingredients have the same name and quantity units","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"NayLin-H99"},"content":"    public boolean isComparable(BaseIngredient ingredient) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"        // check name of ingredients ignoring case","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"        if (!isSameIngredient(ingredient)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"        // check units of quantity","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"NayLin-H99"},"content":"        String ingr1Units \u003d getQtyUnits();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"NayLin-H99"},"content":"        String ingr2Units \u003d ingredient.getQtyUnits();","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"NayLin-H99"},"content":"        return ingr1Units.equals(ingr2Units);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"    private String getQtyUnits() {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"NayLin-H99"},"content":"        return getQuantity().getUnits();","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rebeccacxy":95,"rootkie":3,"pattan9955":1,"NayLin-H99":39}},{"path":"src/main/java/fridgy/model/ingredient/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.AppUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":" * Represents an ingredient\u0027s description in the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(Optional)}","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"public class Description {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"     * Only accepts ASCII characters.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{ASCII}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    public final Optional\u003cString\u003e value;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public Description(Optional\u003cString\u003e description) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        value \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"     * @param test","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    public static boolean isValidDescription(Optional\u003cString\u003e test) {","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        return test.equals(Optional.empty()) || test.get().matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        return value.orElse(\"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":27,"-":35}},{"path":"src/main/java/fridgy/model/ingredient/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.util.AppUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":" * Represents an Ingredient\u0027s Expiry Date in the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExpiry(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"public class ExpiryDate implements Comparable\u003cExpiryDate\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"            \"Expiry Date should be in the format DD-MM-YYYY\";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([0-2]\\\\d|3[01])-([0]\\\\d|1[0-2])-\\\\d{4}$\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    public final LocalDate expiryDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"     * Constructs a {@code ExpiryDate}.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    public ExpiryDate(String date) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        AppUtil.checkArgument(isValidExpiry(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        expiryDate \u003d LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        return expiryDate.isBefore(LocalDate.now());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"    public static boolean isValidExpiry(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        return expiryDate.format(DATE_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"                || (other instanceof ExpiryDate // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"                \u0026\u0026 expiryDate.equals(((ExpiryDate) other).expiryDate)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"        return expiryDate.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"    public int compareTo(ExpiryDate o) {","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        return expiryDate.compareTo(o.expiryDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"NayLin-H99":65}},{"path":"src/main/java/fridgy/model/ingredient/ExpiryStatusUpdater.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":" * Updates an {@code Ingredient}\u0027s {@code Tag} with expiring status.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"public class ExpiryStatusUpdater {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    private static final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    /** An ingredient has to be 7 days away from expiry date to be considered expiring */","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    private static final Period EXPIRING_PERIOD \u003d Period.of(0, 0, 7);","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"     * Update the ingredient\u0027s tags according to its expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"     * \"expired\" tag will be added if the expiry date is after the system\u0027s date.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"     * \"expiring\" tag will be added if the expiring date is within EXPIRING_PERIOD from the expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"     * Any irrelevant expiry tags will be removed.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"     * @param ingredient the ingredient to update tags of","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"     * @return the same ingredient with updated tags","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"    public static Ingredient updateExpiryTags(Ingredient ingredient) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        Period periodToExpiry \u003d Period.between(currentDate, ingredient.getExpiryDate().expiryDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(ingredient.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        tagSet.remove(Tag.EXPIRED);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        tagSet.remove(Tag.EXPIRING);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        if (periodToExpiry.isNegative()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"            tagSet.add(Tag.EXPIRED);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"            Period periodToExpiring \u003d periodToExpiry.minus(EXPIRING_PERIOD).normalized();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"            /*","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"             If period is still negative after normalisation, it means that","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"             1. it is truly negative","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"             2. it has a few negative days (if month or year \u003e 0, we can be sure the ingredient is fresh)","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"            */","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"            if (periodToExpiring.isNegative()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"                if (periodToExpiring.getMonths() \u003c\u003d 0 \u0026\u0026 periodToExpiring.getYears() \u003c\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"                    tagSet.add(Tag.EXPIRING);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        return new Ingredient(ingredient.getName(), ingredient.getQuantity(),","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                ingredient.getDescription(), tagSet, ingredient.getExpiryDate());","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"NayLin-H99":51}},{"path":"src/main/java/fridgy/model/ingredient/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.Eq;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":" * Represents an ingredient in the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"public class Ingredient extends BaseIngredient {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"    private final ExpiryDate expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    private final Description description;","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs an ingredient reference with an empty description.","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    public Ingredient(Name name, Quantity quantity, Set\u003cTag\u003e tags, ExpiryDate expiryDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        super(name, quantity);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        requireAllNonNull(name, quantity, expiryDate, tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        this.description \u003d new Description(Optional.empty());","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs an ingredient reference where all fields must be present and not null.","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"    public Ingredient(Name name, Quantity quantity, Description description,","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"                      Set\u003cTag\u003e tags, ExpiryDate expiryDate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        super(name, quantity);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        requireAllNonNull(name, quantity, expiryDate, tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        return description;","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        return expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if both ingredients have the same name.","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"     * This defines a weaker notion of equality between two ingredients.","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"    public boolean isSameIngredient(Ingredient otherIngredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        if (otherIngredient \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        return otherIngredient !\u003d null","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherIngredient.getName().equals(getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"    public boolean isSame(Eq other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        if (other instanceof Ingredient) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"            return isSameIngredient((Ingredient) other);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if both ingredients have the same identity and data fields.","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"     * This defines a stronger notion of equality between two ingredients.","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"        return otherIngredient.getName().equals(getName())","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherIngredient.getQuantity().equals(getQuantity())","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"                \u0026\u0026 otherIngredient.getExpiryDate().equals((getExpiryDate()))","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherIngredient.getDescription().equals(getDescription())","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 otherIngredient.getTags().equals(getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"rebeccacxy"},"content":"        return Objects.hash(getName(), getQuantity(), description, tags, expiryDate);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"                .append(getQuantity())","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"                .append(\"; Expiry Date: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"                .append(getExpiryDate());","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"rebeccacxy"},"content":"        Description description \u003d getDescription();","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"rebeccacxy"},"content":"        if (!description.value.equals(Optional.empty())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"rebeccacxy"},"content":"            builder.append(\"; Description: \")","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"                    .append(getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":44,"rootkie":12,"NayLin-H99":13,"-":72}},{"path":"src/main/java/fridgy/model/ingredient/IngredientDefaultComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":" * The default comparator for {@code Ingredient},","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":" * which compares ingredients by their expiry dates.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientDefaultComparator implements Comparator\u003cIngredient\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"     * Compares recipes using expiry dates.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"     * If expiry dates are equal, compare them by name in lexicographical order.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    public int compare(Ingredient i1, Ingredient i2) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"        return i1.getExpiryDate().compareTo(i2.getExpiryDate()) \u003d\u003d 0","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"                ? i1.getName().toString().compareTo(i2.getName().toString())","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"                : i1.getExpiryDate().compareTo(i2.getExpiryDate());","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rebeccacxy":21}},{"path":"src/main/java/fridgy/model/ingredient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.AppUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":" * Represents an ingredient\u0027s name in the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":6,"-":54}},{"path":"src/main/java/fridgy/model/ingredient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.StringUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":" * Tests that a {@code Ingredient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cIngredient\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    public boolean test(Ingredient ingredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(ingredient.getName().fullName, keyword));","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rebeccacxy":6,"-":25}},{"path":"src/main/java/fridgy/model/ingredient/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.AppUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.util.QuantityCalc;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":" * Represents an ingredient\u0027s quantity number in the Inventory.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuantity(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"public class Quantity {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"            \"Quantity should be greater than zero. \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"                    + \"Include units in grams (g) or litres (l) when applicable. \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"                    + \"Do not input units for discrete ingredients (i.e. bottle, pieces, etc.) \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"                    + \"SI prefixes for units: milli (m) and kilo (k) are accepted. \\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[1-9])\\\\d+(\\\\.\\\\d+)?\\\\h*((m|k)?(g|l)){0,1}$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    public final String value;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"     * Constructs a {@code Quantity}. Standard Units are \"kg\", \"l\" or none for discrete.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"     * Accepted prefixes are milli (m) and kilo (k).","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"     * @param quantity A valid quantity of ingredients, converted to standard units.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    public Quantity(String quantity) {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        value \u003d convertToStandardUnit(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"     * Returns true if a given string is a valid quantity number.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    public static boolean isValidQuantity(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        return value;","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"                || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 value.equals(((Quantity) other).value)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    private String convertToStandardUnit(String quantity) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"        return QuantityCalc.convertToStandardUnits(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"     * Gets units of the {@code Quantity}.","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"     * @return String representation of the units","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"    public String getUnits() {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"        String[] valueAndUnit \u003d value.split(\"\\\\h\");","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"        return valueAndUnit.length \u003c\u003d 1 ? \"\" : valueAndUnit[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"     * Gets value of the {@code Quantity}.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"     * @return value as a Double","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"    public Double getValue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        String[] valueAndUnit \u003d value.split(\"\\\\h\");","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"        return Double.parseDouble(valueAndUnit[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"     * Naively deducts quantity of newQuantity from this quantity, with the assumption both have the same units.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"     * Returns a {@code double}, regardless of units of {@code Quantity}.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"     * @param newQuantity to be compared to","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"     * @return double value of (quantity - newQuantity)","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"    public double compareQtyWithSameUnits(Quantity newQuantity) {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(newQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"        assert getUnits().equals(newQuantity.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"        Double qty1 \u003d getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        Double qty2 \u003d newQuantity.getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        return qty1 - qty2;","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rebeccacxy":49,"NayLin-H99":47}},{"path":"src/main/java/fridgy/model/ingredient/exceptions/DuplicateIngredientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":" * Signals that the operation will result in duplicate Ingredients","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":" * (Ingredients are considered duplicates if they have the same identity).","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"public class DuplicateIngredientException extends RuntimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"    public DuplicateIngredientException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"        super(\"Operation would result in duplicate ingredients\");","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":11}},{"path":"src/main/java/fridgy/model/ingredient/exceptions/IngredientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient.exceptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":" * Signals that the operation is unable to find the specified ingredient.","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":6}},{"path":"src/main/java/fridgy/model/recipe/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":" * Represents a Recipe\u0027s name in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"                || (other instanceof fridgy.model.recipe.Name // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 fullName.equals(((fridgy.model.recipe.Name) other).fullName)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rootkie":5,"NayLin-H99":1,"-":54}},{"path":"src/main/java/fridgy/model/recipe/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":" * Tests that a {@code Ingredient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cRecipe\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"     * Constructs a NameContainsKeywordsPredicate with the {@code keywords} given","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    public boolean test(Recipe recipe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(recipe.getName().fullName, keyword));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alissayarmantho":34}},{"path":"src/main/java/fridgy/model/recipe/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.Eq;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":" * Represents a recipe in the recipe book.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"public class Recipe implements Eq {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    // Identity Field","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    private final Name name;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    // Data Fields","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    private final Set\u003cBaseIngredient\u003e baseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    private final List\u003cStep\u003e steps;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    private final Optional\u003cString\u003e description;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    public Recipe(Name name, Set\u003cBaseIngredient\u003e baseIngredients, List\u003cStep\u003e steps, Optional\u003cString\u003e description) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(name, baseIngredients, steps, description);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        this.baseIngredients \u003d baseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        this.steps \u003d steps;","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    public Name getName() {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        return name;","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    public Set\u003cBaseIngredient\u003e getIngredients() {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        return baseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    public List\u003cStep\u003e getSteps() {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        return steps;","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        return description;","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"     * Returns true if both recipes have the same name.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"     * This defines a weaker notion of equality between two recipes.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    public boolean isSameRecipe(Recipe otherRecipe) {","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        if (otherRecipe \u003d\u003d this) {","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"        return otherRecipe !\u003d null","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 otherRecipe.getName().equals(getName());","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"    public boolean isSame(Eq other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        if (other instanceof Recipe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"            return isSameRecipe((Recipe) other);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     * Returns true if both recipes have the same identity and data fields.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"     * This defines a stronger notion of equality between two recipes.","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"        if (!(o instanceof Recipe)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"            return false;","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"        Recipe recipe \u003d (Recipe) o;","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        return name.equals(recipe.name)","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 baseIngredients.equals(recipe.baseIngredients)","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 steps.equals(recipe.steps)","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"                \u0026\u0026 description.equals(recipe.description);","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        return Objects.hash(name, baseIngredients, steps, description);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"        builder.append(getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        Optional\u003cString\u003e description \u003d getDescription();","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"rebeccacxy"},"content":"        if (!description.equals(Optional.of(\"\"))) {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"            builder.append(\"; Description: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"                    .append(description.orElse(\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        builder.append(\"; Ingredients used: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"                .append(getIngredients())","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"                .append(\"; Steps:\");","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        for (Step step : getSteps()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"            builder.append(\" \").append(count++).append(\". \").append(step);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rebeccacxy":3,"rootkie":108,"pattan9955":1,"NayLin-H99":12}},{"path":"src/main/java/fridgy/model/recipe/Step.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Represents a Recipe\u0027s step in the recipe book.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class Step {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    private final String step;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"     * Constructs a {@code Step}.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     * @param step A valid step as String.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public Step(String step) {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        requireAllNonNull(step);","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        this.step \u003d step;","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public String getStep() {","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        return step;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        if (!(o instanceof Step)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"            return false;","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        Step that \u003d (Step) o;","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        return Objects.equals(step, that.step);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"        return Objects.hash(step);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        return step;","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rootkie":49}},{"path":"src/main/java/fridgy/model/recipe/exceptions/DuplicateRecipeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe.exceptions;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Signals that the operation will result in duplicate Recipes (Recipes are considered duplicates if they have the same","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" * identity).","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"public class DuplicateRecipeException extends RuntimeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"    public DuplicateRecipeException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"        super(\"Operation would result in duplicate recipes\");","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rootkie":11}},{"path":"src/main/java/fridgy/model/recipe/exceptions/RecipeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe.exceptions;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":" * Signals that the operation is unable to find the specified recipe.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public class RecipeNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":5,"NayLin-H99":1}},{"path":"src/main/java/fridgy/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.AppUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":" * Represents a Tag in the Inventory.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    public static final Tag EXPIRED \u003d new Tag(\"expired\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    public static final Tag EXPIRING \u003d new Tag(\"expiring\");","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    public String getTag() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        return tagName;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rebeccacxy":9,"NayLin-H99":2,"-":49}},{"path":"src/main/java/fridgy/model/util/QuantityCalc.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model.util;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":" * Handles calculations for quantity.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"public class QuantityCalc {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    private static final String STANDARD_SOLID_UNITS \u003d \"g\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    private static final String STANDARD_LIQUID_UNITS \u003d \"l\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    private static final char GRAMS \u003d \u0027g\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    private static final char LITRES \u003d \u0027l\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    private static final char KILO_PREFIX \u003d \u0027k\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    private static final char MILLI_PREFIX \u003d \u0027m\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    private static final Double KILO_MULTIPLIER \u003d 1000.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    private static final Double MILLI_MULTIPLIER \u003d 0.001;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"     * Convert quantity of ingredients units\u0027 (if any) to standard units.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"     * @param quantity the quantity of ingredients with or without units","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"     * @return the string representation with units converted to standardised units","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"    public static String convertToStandardUnits(String quantity) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        List\u003cString\u003e parsedResults \u003d parseQuantityString(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        if (parsedResults.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"            return quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        Double amount \u003d Double.parseDouble(parsedResults.get(0));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        String units \u003d parsedResults.get(1);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        char[] unitsChar \u003d units.toCharArray();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"        char baseUnit \u003d unitsChar.length \u003d\u003d 1 ? unitsChar[0] : unitsChar[1];","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"        switch (baseUnit) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        case GRAMS:","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"            // conversion to kilograms","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"            if (unitsChar.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"                amount \u003d removeUnitPrefix(unitsChar[0], amount);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"            units \u003d STANDARD_SOLID_UNITS;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        case LITRES:","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"            // conversion to liters","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"            if (unitsChar.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                amount \u003d removeUnitPrefix(unitsChar[0], amount);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"            units \u003d STANDARD_LIQUID_UNITS;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"            // other units are currently not supported","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        // return in quantity standardised to 3 decimal places","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        return String.format(\"%.3f %s\", amount, units);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"    private static List\u003cString\u003e parseQuantityString(String quantity) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"        Matcher match \u003d Pattern.compile(\"(\\\\d+([.]\\\\d*)?|[.]\\\\d+)|[a-z]+\").matcher(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"        List\u003cString\u003e regexMatchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        while (match.find()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"            regexMatchResults.add(match.group());","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"        return regexMatchResults;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"    private static Double removeUnitPrefix(char prefix, Double amount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        case KILO_PREFIX:","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"            amount *\u003d KILO_MULTIPLIER;","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"        case MILLI_PREFIX:","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"            amount *\u003d MILLI_MULTIPLIER;","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"            // no other prefix currently supported","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"        return amount;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"    private static Double addUnitPrefix(char prefix, Double amount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"        case KILO_PREFIX:","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"            amount /\u003d KILO_MULTIPLIER;","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"        case MILLI_PREFIX:","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"            amount /\u003d MILLI_MULTIPLIER;","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"            // no other prefix currently supported","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        return amount;","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"NayLin-H99":96}},{"path":"src/main/java/fridgy/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.ExpiryStatusUpdater;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.IngredientDefaultComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":" * Contains utility methods for populating {@code Inventory} with sample data.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public static Ingredient[] getSampleIngredients() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        return new Ingredient[] {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Almond jelly\"), new Quantity(\"87438807\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"Very nice\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"                getTagSet(\"fruit\"), new ExpiryDate(\"20-08-2010\")),","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Banana leaf\"), new Quantity(\"99272758\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"leafy\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"                getTagSet(\"colleagues\", \"fruit\"), new ExpiryDate(\"20-08-2010\")),","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Cabbage\"), new Quantity(\"93210283\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"From cold storage\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"                getTagSet(\"leafy\"), new ExpiryDate(\"20-08-2010\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Dark chocolate\"), new Quantity(\"91031282\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"Very bitter\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"                getTagSet(\"sweet\"), new ExpiryDate(\"20-08-2010\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Ice cream\"), new Quantity(\"92492021\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"Very nice\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"                getTagSet(\"classmates\"), new ExpiryDate(\"20-08-2010\")),","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"            new Ingredient(new Name(\"Red beans\"), new Quantity(\"92624417\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"                new Description(Optional.of(\"From NTUC\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"                getTagSet(\"bean\"), new ExpiryDate(\"20-08-2010\"))","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public static Recipe[] getSampleRecipes() {","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        return new Recipe[] {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"            new Recipe(","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"                new fridgy.model.recipe.Name(\"Burger\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"                Set.of(new BaseIngredient(new Name(\"Bread\"), new Quantity(\"2\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"                    new BaseIngredient(new Name(\"Patty\"), new Quantity(\"100g\"))","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"                ),","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"                Arrays.asList(new Step(\"B1\"), new Step(\"B2\")),","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"                Optional.of(\"Desc B\")","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"            ),","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"            new Recipe(","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"                    new fridgy.model.recipe.Name(\"Maggie\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"                    Set.of(new BaseIngredient(new Name(\"Maggie\"), new Quantity(\"1\"))),","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"                    Arrays.asList(new Step(\"M1\"), new Step(\"M2\")),","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"                    Optional.of(\"Desc M\")","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"            ),","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"            new Recipe(","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"                    new fridgy.model.recipe.Name(\"Recipe\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"                    Set.of(new BaseIngredient(new Name(\"BaseIngredient 1\"), new Quantity(\"1kg\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"                        new BaseIngredient(new Name(\"BaseIngredient 2\"), new Quantity(\"100ml\"))","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"                    ),","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"                    Arrays.asList(new Step(\"Step 1\"), new Step(\"Step 2\")),","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"                    Optional.empty()","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"            ),","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        };","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"    public static ReadOnlyDatabase\u003cIngredient\u003e getSampleInventory() {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        Inventory sampleAb \u003d new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        for (Ingredient sampleIngredient : getSampleIngredients()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"            sampleIngredient \u003d ExpiryStatusUpdater.updateExpiryTags(sampleIngredient);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"            sampleAb.add(sampleIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        sampleAb.sort(new IngredientDefaultComparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"    public static ReadOnlyDatabase\u003cRecipe\u003e getSampleRecipeBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"        RecipeBook sampleRb \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        for (Recipe sampleRecipe: getSampleRecipes()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"            sampleRb.add(sampleRecipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"        return sampleRb;","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"rebeccacxy":28,"rootkie":47,"NayLin-H99":4,"-":26}},{"path":"src/main/java/fridgy/storage/InventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":" * Represents a storage for {@link Inventory}.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public interface InventoryStorage {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * Returns Inventory data as a {@link ReadOnlyDatabase}.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"     * @see #getInventoryFilePath()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"     * @see #saveInventory(ReadOnlyDatabase)","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":38,"rootkie":10}},{"path":"src/main/java/fridgy/storage/JsonAdaptedIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryStatusUpdater;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":" * Jackson-friendly version of {@link Ingredient}.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"class JsonAdaptedIngredient {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Ingredient\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    private final String quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"    private final String expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    private String description \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs a {@code JsonAdaptedIngredient} with the given ingredient details.","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    public JsonAdaptedIngredient(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") String quantity,","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"            @JsonProperty(\"description\") String description, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"                                 @JsonProperty(\"expiryDate\") String expiryDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"     * Converts a given {@code Ingredient} into this class for Jackson use.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    public JsonAdaptedIngredient(Ingredient source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"        expiryDate \u003d source.getExpiryDate().toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        description \u003d source.getDescription().value.orElse(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"     * Converts this Jackson-friendly adapted ingredient object into the model\u0027s {@code Ingredient} object.","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted ingredient.","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"    public Ingredient toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        final List\u003cTag\u003e ingredientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"            ingredientTags.add(tag.toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"                    Quantity.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        final Optional\u003cString\u003e modelDescription \u003d Optional.ofNullable(description);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"        if (!Description.isValidDescription(modelDescription)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"                    ExpiryDate.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"        if (!ExpiryDate.isValidExpiry(expiryDate)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"            throw new IllegalValueException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"        final ExpiryDate modelExpiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(ingredientTags);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient ingredient \u003d new Ingredient(modelName, modelQuantity, new Description(modelDescription),","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"                modelTags, modelExpiryDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        return ExpiryStatusUpdater.updateExpiryTags(ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":39,"NayLin-H99":25,"-":57}},{"path":"src/main/java/fridgy/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":3,"-":45}},{"path":"src/main/java/fridgy/storage/JsonInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.FileUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.JsonUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":" * A class to access Inventory data stored as a json file on the hard disk.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"public class JsonInventoryStorage implements InventoryStorage {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInventoryStorage.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public JsonInventoryStorage(Path filePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory() throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        return readInventory(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"     * Similar to {@link #readInventory()}.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        Optional\u003cJsonSerializableInventory\u003e jsonInventory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"                filePath, JsonSerializableInventory.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        if (!jsonInventory.isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"            return Optional.of(jsonInventory.get().toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        saveInventory(addressBook, filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"     * Similar to {@link #saveInventory(ReadOnlyDatabase)}.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"    public void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInventory(addressBook), filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":19,"rootkie":7,"-":55}},{"path":"src/main/java/fridgy/storage/JsonRecipeBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.util.FileUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.util.JsonUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":" * A class to access RecipeBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"public class JsonRecipeBookStorage implements RecipeBookStorage {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRecipeBookStorage.class);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    private Path filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    public JsonRecipeBookStorage(Path filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        return filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook() throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        return readRecipeBook(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"     * Similar to {@link #readRecipeBook()}.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        Optional\u003cJsonSerializableRecipeBook\u003e jsonRecipeBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"                filePath, JsonSerializableRecipeBook.class);","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        if (!jsonRecipeBook.isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"            return Optional.of(jsonRecipeBook.get().toModelType());","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e addressBook) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        saveRecipeBook(addressBook, filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"     * Similar to {@link #saveRecipeBook(ReadOnlyDatabase)}.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableRecipeBook(addressBook), filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":81}},{"path":"src/main/java/fridgy/storage/JsonSerializableInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":" * An Immutable Inventory that is serializable to JSON format.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"class JsonSerializableInventory {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"Ingredients list contains duplicate ingredient(s).\";","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    private final List\u003cJsonAdaptedIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"     * Constructs a {@code JsonSerializableInventory} with the given ingredients.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    public JsonSerializableInventory(@JsonProperty(\"ingredients\") List\u003cJsonAdaptedIngredient\u003e ingredients) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        this.ingredients.addAll(ingredients);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     * Converts a given {@code ReadOnlyDatabase\u003cIngredient\u003e} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInventory}.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    public JsonSerializableInventory(ReadOnlyDatabase\u003cIngredient\u003e source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        ingredients.addAll(source.getList().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"                .map(JsonAdaptedIngredient::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"     * Converts this Inventory into the model\u0027s {@code Inventory} object.","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public Inventory toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        Inventory addressBook \u003d new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        for (JsonAdaptedIngredient jsonAdaptedIngredient : ingredients) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"            Ingredient ingredient \u003d jsonAdaptedIngredient.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"            if (addressBook.has(ingredient)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"            addressBook.add(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":19,"rootkie":6,"-":36}},{"path":"src/main/java/fridgy/storage/JsonSerializableRecipeBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.storage.recipe.JsonAdaptedRecipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":" * An Immutable RecipeBook that is serializable to JSON format.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"@JsonRootName(value \u003d \"recipebook\")","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"class JsonSerializableRecipeBook {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"    public static final String MESSAGE_DUPLICATE_RECIPE \u003d \"Recipes list contains duplicate recipe(s).\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    private final List\u003cJsonAdaptedRecipe\u003e recipes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"     * Constructs a {@code JsonSerializableRecipeBook} with the given recipes.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public JsonSerializableRecipeBook(@JsonProperty(\"recipes\") List\u003cJsonAdaptedRecipe\u003e recipes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        this.recipes.addAll(recipes);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     * Converts a given {@code ReadOnlyDatabase\u003cRecipe\u003e} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableRecipeBook}.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    public JsonSerializableRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        recipes.addAll(source.getList().stream().map(JsonAdaptedRecipe::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     * Converts this recipe book into the model\u0027s {@code RecipeBook} object.","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    public RecipeBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        RecipeBook recipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        for (JsonAdaptedRecipe jsonAdaptedRecipe : recipes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"            Recipe recipe \u003d jsonAdaptedRecipe.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"            if (recipeBook.has(recipe)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_RECIPE);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"            recipeBook.add(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        return recipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":59,"NayLin-H99":2}},{"path":"src/main/java/fridgy/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.JsonUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rebeccacxy":5,"-":42}},{"path":"src/main/java/fridgy/storage/RecipeBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":" * Represents a storage for {@link fridgy.model.RecipeBook}.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"public interface RecipeBookStorage {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    Path getRecipeBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * Returns RecipeBook data as a {@link ReadOnlyDatabase}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"     * @see #getRecipeBookFilePath()","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e addressBook) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"     * @see #saveRecipeBook(ReadOnlyDatabase)","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":47}},{"path":"src/main/java/fridgy/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"public interface Storage extends InventoryStorage, RecipeBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rebeccacxy":5,"rootkie":5,"-":23}},{"path":"src/main/java/fridgy/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":" * Manages storage of Inventory data in local storage.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    private InventoryStorage addressBookStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    private RecipeBookStorage recipeBookStorage;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"     * Creates a {@code StorageManager} with the given {@code InventoryStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public StorageManager(InventoryStorage addressBookStorage,","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"                          RecipeBookStorage recipeBookStorage,","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        this.recipeBookStorage \u003d recipeBookStorage;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Inventory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        return addressBookStorage.getInventoryFilePath();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        return readInventory(addressBookStorage.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory(Path filePath)","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        return addressBookStorage.readInventory(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    public void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"        saveInventory(addressBook, addressBookStorage.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"    public void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        addressBookStorage.saveInventory(addressBook, filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecipeBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"    public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"        return recipeBookStorage.getRecipeBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"        return readRecipeBook(recipeBookStorage.getRecipeBookFilePath());","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"    public Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook(Path filePath)","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"        return recipeBookStorage.readRecipeBook(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"        saveRecipeBook(recipeBook, recipeBookStorage.getRecipeBookFilePath());","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"        recipeBookStorage.saveRecipeBook(recipeBook, filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":15,"rootkie":41,"-":58}},{"path":"src/main/java/fridgy/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rebeccacxy":6,"-":30}},{"path":"src/main/java/fridgy/storage/recipe/JsonAdaptedIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":" * Jackson-friendly version of {@link BaseIngredient}","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"public class JsonAdaptedIngredient {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Ingredient\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    private final String name;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    private final String quantity;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Constructs a {@code JsonAdaptedIngredient} with the given {@code ingredient}.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedIngredient(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") String quantity) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"     * Converts a given {@code BaseIngredient} into this class for Jackson use.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedIngredient(BaseIngredient source) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code BaseIngredient} object.","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    public BaseIngredient toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"                Name.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"                Quantity.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        return new BaseIngredient(modelName, modelQuantity);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":63}},{"path":"src/main/java/fridgy/storage/recipe/JsonAdaptedRecipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":" * Jackson-friendly version of {@link Recipe}","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"public class JsonAdaptedRecipe {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Recipe\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    private final String name;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    private final List\u003cJsonAdaptedIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    private final List\u003cJsonAdaptedStep\u003e steps \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    private final String description;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * Constructs a {@code JsonAdaptedRecipe} with the given recipe details.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedRecipe(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"                             @JsonProperty(\"ingredients\") List\u003cJsonAdaptedIngredient\u003e ingredients,","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"                             @JsonProperty(\"steps\") List\u003cJsonAdaptedStep\u003e steps,","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"                             @JsonProperty(\"description\") String description) {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        if (ingredients !\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"            this.ingredients.addAll(ingredients);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        if (steps !\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"            this.steps.addAll(steps);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"     * Converts a given {@code Recipe} into this class for Jackson use.","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedRecipe(Recipe source) {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        ingredients.addAll(source.getIngredients().stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"                .map(JsonAdaptedIngredient::new)","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        steps.addAll(source.getSteps().stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"                .map(JsonAdaptedStep::new)","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"        description \u003d source.getDescription().orElse(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"     * Converts this Jackson-friendly adapted recipe object into the model\u0027s {@code Recipe} object.","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Recipe.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"    public Recipe toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        final Set\u003cBaseIngredient\u003e modelBaseIngredients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"        for (JsonAdaptedIngredient ingredient : ingredients) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"            modelBaseIngredients.add(ingredient.toModelType());","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        final List\u003cStep\u003e modelSteps \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        for (JsonAdaptedStep step : steps) {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"            modelSteps.add(step.toModelType());","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"        if (modelBaseIngredients.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, BaseIngredient.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"        if (modelSteps.isEmpty()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Step.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"        final Optional\u003cString\u003e modelDescription \u003d Optional.ofNullable(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"        return new Recipe(modelName, modelBaseIngredients, modelSteps, modelDescription);","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":99,"pattan9955":2}},{"path":"src/main/java/fridgy/storage/recipe/JsonAdaptedStep.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" * Jackson-friendly version of {@link Step}","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class JsonAdaptedStep {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    private final String step;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"     * Constructs a {@code JsonAdaptedStep} with the given {@code step}.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedStep(String step) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        this.step \u003d step;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * Converts a given {@code Step} into this class for Jackson use.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    public JsonAdaptedStep(Step source) {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        step \u003d source.getStep();","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    @JsonValue","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public String getStepName() {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        return step;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Step} object.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    public Step toModelType() {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        return new Step(step);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":41}},{"path":"src/main/java/fridgy/ui/ActiveItemPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":" * Panel containing an active {@code Ingredient} or {@code Recipe} for display in the main window.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"public class ActiveItemPanel extends UiPart\u003cRegion\u003e implements Observer {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    private static final String FXML \u003d \"ActiveItemPanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    private VBox activeBox;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"     * Instantiates a new Active  Panel.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"     * @param activeObservable the active observable that notifies the observer of changes","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"    public ActiveItemPanel(Observable activeObservable) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"        activeObservable.setObserver(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    public void update(Ingredient newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        activeBox.getChildren().clear();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        IngredientCard ingredientCard \u003d new IngredientCard(newItem, 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        activeBox.getChildren().add(ingredientCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"    public void update(Recipe newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"        activeBox.getChildren().clear();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        RecipeCard recipeCard \u003d new RecipeCard(newItem, 1, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        activeBox.getChildren().add(recipeCard.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":42}},{"path":"src/main/java/fridgy/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.Logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"rebeccacxy":6,"-":80}},{"path":"src/main/java/fridgy/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rebeccacxy":3,"-":99}},{"path":"src/main/java/fridgy/ui/IngredientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":" * An UI component that displays information of a {@code Ingredient}.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    private static final String FXML \u003d \"IngredientListCard.fxml\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"    // Char limits","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"    private static final int DESCRIPTION_CHAR_LIMIT \u003d 90;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    private static final int NAME_CHAR_LIMIT \u003d 25;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    private static final int QUANTITY_CHAR_LIMIT \u003d 50;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    private static final int TAG_CHAR_LIMIT \u003d 55;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Inventory level 4\u003c/a\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public final Ingredient ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    private Label quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    private Label description;","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"    private Label expiryDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"     * Creates a {@code IngredientCode} with the given {@code Ingredient} and index to display.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientCard(Ingredient ingredient, int displayedIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"        String ingredientName \u003d UiUtil.truncateText(ingredient.getName().fullName, NAME_CHAR_LIMIT);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"        String ingredientDescription \u003d UiUtil.truncateText(ingredient.getDescription().value.orElse(\"\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"                DESCRIPTION_CHAR_LIMIT);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"        String ingredientQuantity \u003d UiUtil.truncateText(ingredient.getQuantity().value, QUANTITY_CHAR_LIMIT);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"        name.setText(ingredientName);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"        quantity.setText(ingredientQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"        description.setText(ingredientDescription);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"        expiryDate.setText(\"Expiry Date: \" + ingredient.getExpiryDate().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        ingredient.getTags().stream()","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"                .sorted(Comparator.comparing(tag -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"                        tag.tagName.equals(\"expired\") || tag.tagName.equals(\"expiring\")","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"                                ? \"\" // comes first in ordering","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"                                : tag.tagName)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"                )","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"                    String name \u003d tag.tagName;","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"                    Label tagLabel \u003d new Label(UiUtil.truncateText(name, TAG_CHAR_LIMIT));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"                    tagLabel.setWrapText(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"                    if (name \u003d\u003d \"expired\") {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"                        tagLabel.setStyle(\"-fx-background-color: #CF1259;\");","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"                    } else if (name \u003d\u003d \"expiring\") {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"                        tagLabel.setStyle(\"-fx-background-color: #767676;\");","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"                    }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"                    tags.getChildren().add(tagLabel);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":"                });","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"        if (!(other instanceof IngredientCard)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"        IngredientCard card \u003d (IngredientCard) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"                \u0026\u0026 ingredient.equals(card.ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alissayarmantho":24,"rebeccacxy":24,"NayLin-H99":1,"-":54}},{"path":"src/main/java/fridgy/ui/IngredientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":" * Panel containing the list of ingredients.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    private static final String FXML \u003d \"IngredientListPanel.fxml\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(IngredientListPanel.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    private ListView\u003cIngredient\u003e ingredientListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"     * Creates a {@code IngredientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientListPanel(ObservableList\u003cIngredient\u003e ingredientList) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        super(FXML);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        ingredientListView.setItems(ingredientList);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        ingredientListView.setCellFactory(listView -\u003e new IngredientListViewCell());","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BaseIngredient} using a {@code IngredientCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    class IngredientListViewCell extends ListCell\u003cIngredient\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        protected void updateItem(Ingredient ingredient, boolean empty) {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"            super.updateItem(ingredient, empty);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"            if (empty || ingredient \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"                setText(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"                setGraphic(new IngredientCard(ingredient, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":48,"rootkie":1}},{"path":"src/main/java/fridgy/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.Logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    private IngredientListPanel ingredientListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"    private RecipeListPanel recipeListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    private StackPane ingredientListPanelPlaceholder;","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"    private StackPane recipeListPanelPlaceholder;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    private VBox displayWindowPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"        ingredientListPanel \u003d new IngredientListPanel(logic.getFilteredIngredientList());","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"        ingredientListPanelPlaceholder.getChildren().add(ingredientListPanel.getRoot());","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"rootkie"},"content":"        recipeListPanel \u003d new RecipeListPanel(logic.getFilteredRecipeList(), false);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"alissayarmantho"},"content":"        recipeListPanelPlaceholder.getChildren().add(recipeListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"        ActiveItemPanel activeItemPanel \u003d new ActiveItemPanel(logic.getActiveObservable());","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"        displayWindowPlaceholder.getChildren().add(activeItemPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"rebeccacxy"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientListPanel getIngredientListPanel() {","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"rebeccacxy"},"content":"        return ingredientListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"rebeccacxy"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"alissayarmantho":5,"rebeccacxy":15,"rootkie":5,"NayLin-H99":2,"-":183}},{"path":"src/main/java/fridgy/ui/Observable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":" * The type Observable that reports changes to an active {@code Ingredient} or {@code Recipe} to an {@code Observer}.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"public class Observable {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    private Observer observer;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    public void setObserver(Observer observer) {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(observer);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"        this.observer \u003d observer;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"     * Change the item being observed by the observer.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"     * @param newItem new Ingredient to be observed by the observer","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    public void change (Ingredient newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"        observer.update(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"     * Change the item being observed by the observer.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"     * @param newItem new Recipe to be observed by the observer","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    public void change (Recipe newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"        requireNonNull(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"        observer.update(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":39}},{"path":"src/main/java/fridgy/ui/Observer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":" * Observes an active {@active Ingredient} or {@active Recipe}.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"public interface Observer {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    void update(Ingredient newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"    void update(Recipe newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":12}},{"path":"src/main/java/fridgy/ui/RecipeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":" * An UI component that displays information of a {@code Recipe}.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"public class RecipeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    private static final String FXML \u003d \"RecipeListCard.fxml\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"    // Char limits","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"    private static final int DESCRIPTION_CHAR_LIMIT \u003d 155;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    private static final int INGREDIENT_CHAR_LIMIT \u003d 55;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    private static final int NAME_CHAR_LIMIT \u003d 25;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Inventory level 4\u003c/a\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"    public final Recipe recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"    private Label name;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    private Label id;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"    private FlowPane ingredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    private Label steps;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"    private Label description;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"     * Creates a {@code RecipeCode} with the given {@code Recipe} and index to display.","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public RecipeCard(Recipe recipe, int displayedIndex, boolean isStepsVisible) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"        super(FXML);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"        this.recipe \u003d recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"        String recipeName \u003d UiUtil.truncateText(recipe.getName().fullName, NAME_CHAR_LIMIT);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"        String recipeDescription \u003d UiUtil.truncateText(recipe.getDescription().orElse(\"\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"                DESCRIPTION_CHAR_LIMIT);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"        name.setText(recipeName);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"        // sort and iterate through the ingredients in recipe and add it to ingredients FlowPane as tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"        recipe.getIngredients().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"                .sorted(Comparator.comparing(ingredient -\u003e ingredient.getName().toString()))","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"                .forEach(ingredient -\u003e ingredients.getChildren().add(","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"                        new Label(UiUtil.truncateText(","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"                            ingredient.getName().toString()","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"                            + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"                            + ingredient.getQuantity().toString(),","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"                            INGREDIENT_CHAR_LIMIT)","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"                        )));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        description.setText(!recipeDescription.equals(\"\")","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"                ? \"Description: \" + recipeDescription","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"                : recipeDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        // This will automatically show / hide steps label","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"        steps.setText(\"Steps:\\n\" + UiUtil.numberedList(recipe.getSteps()));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        steps.setVisible(isStepsVisible);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"        steps.managedProperty().bind(steps.visibleProperty());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"alissayarmantho"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"alissayarmantho"},"content":"        if (!(other instanceof RecipeCard)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"alissayarmantho"},"content":"        // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"alissayarmantho"},"content":"        RecipeCard card \u003d (RecipeCard) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"alissayarmantho"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"alissayarmantho"},"content":"                \u0026\u0026 recipe.equals(card.recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":79,"rebeccacxy":3,"rootkie":14,"NayLin-H99":1}},{"path":"src/main/java/fridgy/ui/RecipeListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":" * Panel containing the list of recipes.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"public class RecipeListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    private static final String FXML \u003d \"RecipeListPanel.fxml\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RecipeListPanel.class);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    private final boolean isDetailed;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    private ListView\u003cRecipe\u003e recipeListView;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"     * Creates a {@code RecipeListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * isDetailed flag determines if the recipe card will show the steps. This is added to allow component reuse.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public RecipeListPanel(ObservableList\u003cRecipe\u003e recipeList, boolean isDetailed) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"        super(FXML);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        this.isDetailed \u003d isDetailed;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"        recipeListView.setItems(recipeList);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"        recipeListView.setCellFactory(listView -\u003e new RecipeListViewCell());","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BaseIngredient} using a {@code RecipeCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    class RecipeListViewCell extends ListCell\u003cRecipe\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"        protected void updateItem(Recipe recipe, boolean empty) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"            super.updateItem(recipe, empty);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"            if (empty || recipe \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"                setText(null);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"                setGraphic(new RecipeCard(recipe, getIndex() + 1, isDetailed).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":46,"rootkie":7}},{"path":"src/main/java/fridgy/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rebeccacxy":1,"-":27}},{"path":"src/main/java/fridgy/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":27}},{"path":"src/main/java/fridgy/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rebeccacxy":1,"-":12}},{"path":"src/main/java/fridgy/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.MainApp;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.StringUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.Logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/cute_fridge.png\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/Main.css\");","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"alissayarmantho":2,"rebeccacxy":5,"-":82}},{"path":"src/main/java/fridgy/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.MainApp;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rebeccacxy":2,"-":86}},{"path":"src/main/java/fridgy/ui/UiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":" * A utility class for UI components.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"public class UiUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"     * Truncates text according to the {@code limit} specified","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"    public static String truncateText(String textToBeTruncated, int limit) {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"        String truncatedText \u003d textToBeTruncated;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"        if (textToBeTruncated.length() \u003e limit) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"            truncatedText \u003d truncatedText.substring(0, limit) + \"...\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"        return truncatedText;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Transform a list of objects into a pretty print numbered output using","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * their toString methods.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public static \u003cT\u003e String numberedList(List\u003cT\u003e list) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        for (int i \u003d 1; i \u003c list.size() + 1; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"            sb.append(i + \". \")","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"                .append(list.get(i - 1).toString())","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"                .append(\"\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alissayarmantho":18,"rootkie":16}},{"path":"src/main/resources/view/ActiveItemPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"    \u003cVBox fx:id\u003d\"activeBox\" styleClass\u003d\"list-view\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":1,"-":7}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background: white;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alissayarmantho":1,"-":19}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat\";","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Regular.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-SemiBold.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Light.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Bold Italic\";","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-BoldItalic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Extra Bold\";","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-ExtraBold.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Extra Bold Italic\";","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Italic\";","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Italic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat Light Italic\";","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-LightItalic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"alissayarmantho"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":"    font-family: \"Montserrat SemiBold Italic\";","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"alissayarmantho"},"content":"    src: url(\"/fonts/montserrat/Montserrat-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"alissayarmantho":45,"-":44}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"alissayarmantho":1,"-":2}},{"path":"src/main/resources/view/IngredientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"                \u003cLabel fx:id\u003d\"name\" wrapText\u003d\"true\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"            \u003cLabel fx:id\u003d\"quantity\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$quantity\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"            \u003cLabel fx:id\u003d\"expiryDate\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"            \u003cLabel fx:id\u003d\"description\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alissayarmantho":4,"-":32}},{"path":"src/main/resources/view/IngredientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"    \u003cListView fx:id\u003d\"ingredientListView\" styleClass\u003d\"list-view\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alissayarmantho":1,"-":7}},{"path":"src/main/resources/view/Main.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":".main-window {","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":".root {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"    -fx-faint-focus-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":".vbox {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":".hbox {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"/*Menu bar*/","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":".menu-bar {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #0046fe;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":".menu-item .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"/*Status bar*/","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":".status-bar {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #0046fe;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":".status-bar .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-weight: normal;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"/*Text area (result display)*/","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":".text-area {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #EBECF0;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":".text-area .scroll-pane {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":".text-area .scroll-pane .viewport{","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":".text-area .scroll-pane .content{","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"/* Make split pane divider transparent*/","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":".split-pane:horizontal \u003e .split-pane-divider {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":".split-pane:vertical \u003e .split-pane-divider {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":".split-pane {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"/* tab pane*/","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab-header-background {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab-header-area .tab-down-button {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: WHITE;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"    -fx-min-width: 0.8em;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"alissayarmantho"},"content":"    -fx-max-width: 0.8em;","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"alissayarmantho"},"content":"    -fx-min-height: 1.3em;","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"alissayarmantho"},"content":"    -fx-max-height: 1.3em;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"alissayarmantho"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"alissayarmantho"},"content":".tab-pane","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"alissayarmantho"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"alissayarmantho"},"content":"    -fx-tab-min-width:90px;","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":104,"author":{"gitId":"alissayarmantho"},"content":".tab{","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-insets: 0 1 0 1,0,0;","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":108,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"alissayarmantho"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"alissayarmantho"},"content":"/*Change tab header color on hover*/","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab:hover","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"alissayarmantho"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #EBF2FA;","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"alissayarmantho"},"content":"/*Underline and bold tab header when selected*/","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"alissayarmantho"},"content":".tab-pane .tab:selected","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"alissayarmantho"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-color: transparent transparent #0046fe transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-width: 0 0 2 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"alissayarmantho"},"content":"/*Color tab header label when selected*/","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"alissayarmantho"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"    -fx-text-fill: #0046fe;","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"/*Text field*/","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"alissayarmantho"},"content":".text-field {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"alissayarmantho"},"content":"    -fx-focus-color: #4059A9;","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 0.333333em 0 0.333333em 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent, transparent, transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-color: transparent transparent #EBF2FA transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"alissayarmantho"},"content":"    -fx-prompt-text-fill: #C5C5C5;","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"alissayarmantho"},"content":".text-field \u003e .input-line {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: -jfx-unfocus-color;","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"alissayarmantho"},"content":"    -fx-pref-height: 1px;","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"alissayarmantho"},"content":"    -fx-translate-y: 1px;","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"alissayarmantho"},"content":".text-field \u003e .input-focused-line {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: -jfx-focus-color;","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"alissayarmantho"},"content":"    -fx-pref-height: 2px;","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"alissayarmantho"},"content":".text-field:focused {","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent, transparent, transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-color: transparent transparent #1C5D99 transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"alissayarmantho"},"content":"    -fx-prompt-text-fill: #C5C5C5;","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"alissayarmantho"},"content":"/*List view*/","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"alissayarmantho"},"content":".list-view {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"alissayarmantho"},"content":".list-cell {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"alissayarmantho"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"alissayarmantho"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 10 10 10 10;","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"alissayarmantho"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"alissayarmantho"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: #EBF2FA;","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"alissayarmantho"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: derive(#1C5D99, 100%);","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"alissayarmantho"},"content":".list-cell .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"alissayarmantho"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"alissayarmantho"},"content":".cell_big_label {","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat Semibold\";","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"alissayarmantho"},"content":".cell_small_label {","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"alissayarmantho"},"content":"#tags {","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"alissayarmantho"},"content":"    -fx-hgap: 9;","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"alissayarmantho"},"content":"    -fx-vgap: 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"alissayarmantho"},"content":"#tags .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color:  #0046fe;","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"alissayarmantho"},"content":"#ingredients {","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"alissayarmantho"},"content":"    -fx-hgap: 9;","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"alissayarmantho"},"content":"    -fx-vgap: 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"alissayarmantho"},"content":"#ingredients .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"alissayarmantho"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color:  #0046fe;","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"alissayarmantho"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"alissayarmantho"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"alissayarmantho"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"alissayarmantho"},"content":"/*Scroll Bar*/","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":231,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"alissayarmantho"},"content":"    -fx-background-color: derive(#d8d8d8, 0%);","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":254,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":161,"-":93}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"\u003cfx:root minHeight\u003d\"750\" minWidth\u003d\"850\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Fridgy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"        \u003cImage url\u003d\"@/images/cute_fridge.png\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"                \u003cURL value\u003d\"@Main.css\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"            \u003cAnchorPane styleClass\u003d\"main-window\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"                        AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"                    \u003cMenuBar fx:id\u003d\"menuBar\" prefWidth\u003d\"449.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"                             AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"                    \u003cHBox AnchorPane.bottomAnchor\u003d\"25.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"                          AnchorPane.topAnchor\u003d\"30.0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"                            \u003cTabPane minWidth\u003d\"400.0\" prefWidth\u003d\"500.0\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"                                \u003ctabs\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003cTab text\u003d\"Ingredient\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"                                        \u003ccontent\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003cVBox fx:id\u003d\"ingredientList\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"                                                  styleClass\u003d\"main-window\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"                                                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                                                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"                                                \u003cStackPane  styleClass\u003d\"main-window\" fx:id\u003d\"ingredientListPanelPlaceholder\"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"                                                            VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003c/VBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"                                        \u003c/content\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003c/Tab\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003cTab text\u003d\"Recipe\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"                                        \u003ccontent\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003cVBox fx:id\u003d\"recipeList\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"                                                \u003cpadding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"                                                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"                                                \u003c/padding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"                                                \u003cStackPane fx:id\u003d\"recipeListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003c/VBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"                                        \u003c/content\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003c/Tab\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"                                \u003c/tabs\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"                            \u003c/TabPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"                            \u003cVBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"                                    \u003cVBox fx:id\u003d\"displayWindowPlaceholder\"  prefHeight\u003d\"1000\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefWidth\u003d\"1500\"  prefHeight\u003d\"48.0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"                                               minHeight\u003d\"150\" prefWidth\u003d\"1500\" prefHeight\u003d\"150\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"                                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"alissayarmantho"},"content":"                                    \u003c/StackPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"alissayarmantho"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"alissayarmantho"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" prefHeight\u003d\"20.0\" prefWidth\u003d\"781.0\"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"alissayarmantho"},"content":"                               AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"alissayarmantho"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"alissayarmantho"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"alissayarmantho":58,"rootkie":1,"-":38}},{"path":"src/main/resources/view/RecipeListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"                \u003cLabel fx:id\u003d\"name\" wrapText\u003d\"true\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"            \u003cLabel fx:id\u003d\"description\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"            \u003cFlowPane fx:id\u003d\"ingredients\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"            \u003cLabel fx:id\u003d\"steps\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$steps\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":33,"rootkie":1,"NayLin-H99":1}},{"path":"src/main/resources/view/RecipeListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"    \u003cListView fx:id\u003d\"recipeListView\" styleClass\u003d\"list-view\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"    \u003cTextArea wrapText\u003d\"true\" fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"alissayarmantho":1,"-":8}},{"path":"src/test/data/JsonInventoryStorageTest/invalidAndValidIngredientInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"    \"name\": \"Valid Ingredient\",","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\": \"9482424\",","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"4th street\"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"    \"name\": \"Ingredient With Invalid Quantity Field\",","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\": \"948asdf2424\",","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\",","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"4th street\"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":7,"NayLin-H99":3,"-":4}},{"path":"src/test/data/JsonInventoryStorageTest/invalidIngredientInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"    \"name\": \"Ingredient with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\": \"9482424\",","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"4th street\"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":4,"NayLin-H99":1,"-":3}},{"path":"src/test/data/JsonRecipeBookStorageTest/invalidAndValidRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"{","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"  \"recipes\": [ {","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"    \"name\": \"Valid Recipe\",","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    \"steps\": [\"C\", \"D\"],","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    \"description\": \"desc\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"  }, {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    \"name\": \"Recipe with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    \"steps\": [\"C\", \"D\"],","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    \"description\": \"desc\"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"  } ]","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":25}},{"path":"src/test/data/JsonRecipeBookStorageTest/invalidRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"{","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"  \"recipes\": [ {","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"    \"name\": \"Recipe with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    \"steps\": [\"C\", \"D\"],","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    \"description\": \"desc\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"  } ]","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":14}},{"path":"src/test/data/JsonRecipeBookStorageTest/notJsonFormatRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"not json format!","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":1}},{"path":"src/test/data/JsonSerializableInventoryTest/duplicateIngredientInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"    \"name\": \"Apple\",","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\": \"94351253\",","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"    \"tagged\": [ \"snacks\" ],","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"    \"type\" : \"solid\",","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    \"name\": \"Apple\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\": \"94351253\",","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"    \"description\" : \"4th street\",","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    \"type\" : \"solid\",","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":5,"NayLin-H99":8,"-":4}},{"path":"src/test/data/JsonSerializableInventoryTest/invalidIngredientInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"    \"quantity\": \"ooga9482424\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"    \"description\" : \"4th street\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":1,"NayLin-H99":3,"-":4}},{"path":"src/test/data/JsonSerializableInventoryTest/typicalIngredientsInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"  \"_comment\": \"Inventory save file which contains the same Ingredient values as in TypicalIngredients#getTypicalInventory()\",","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"  \"ingredients\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"    \"name\" : \"Apple\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"94351253\",","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"    \"tagged\" : [ \"snacks\" ],","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    \"name\" : \"Banana\",","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"98765432\",","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    \"tagged\" : [ \"fruit\", \"snacks\" ],","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    \"name\" : \"Carrot Slices\",","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"95352563\",","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"wall street\",","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    \"name\" : \"Duck breast\",","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"87652533\",","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"10th street\",","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    \"tagged\" : [ \"snacks\" ],","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    \"name\" : \"Egg mayo\",","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"9482224\",","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"michegan ave\",","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"    \"name\" : \"Fig jam\",","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"9482427\",","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"little tokyo\",","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"    \"name\" : \"Grape\",","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    \"quantity\" : \"9482442\",","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    \"description\" : \"4th street\",","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"    \"expiryDate\" : \"20-08-2010\"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rebeccacxy":24,"NayLin-H99":13,"-":9}},{"path":"src/test/data/JsonSerializableRecipeBookTest/duplicateRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"{","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"  \"recipes\": [ {","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"    \"name\" : \"Burger\",","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    \"steps\" : [ \"Burger STEP 1\", \"Burger STEP 2\" ],","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    \"description\" : \"Very Nice\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"  }, {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    \"name\" : \"Burger\",","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    \"steps\" : [ \"Maggie STEP 1\", \"Maggie STEP 2\" ],","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    \"description\" : \"Very Nice\"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"  } ]","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":25}},{"path":"src/test/data/JsonSerializableRecipeBookTest/invalidRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"{","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"  \"recipes\": [ {","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"    \"name\": \"Recipe with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Patty\",","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"100.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Bread\",","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"2\"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    \"steps\": [\"C\", \"D\"],","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    \"description\": \"desc\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"  } ]","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":14}},{"path":"src/test/data/JsonSerializableRecipeBookTest/typicalRecipeBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"{","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"  \"_comment\": \"RecipeBook save file which contains the same Recipe values as in TypicalRecipes#getTypicalRecipeBook()\",","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"  \"recipes\" : [ {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"    \"name\" : \"Burger\",","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"ingr1\",","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"1000.000 g\"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"ingr2\",","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"0.001 l\"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    \"steps\" : [ \"Burger STEP 1\", \"Burger STEP 2\" ],","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    \"description\" : \"Very Nice\"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"  }, {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    \"name\" : \"Maggie\",","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Apple\",","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"94351253\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Grape\",","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"9482442\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    \"steps\" : [ \"Maggie STEP 1\", \"Maggie STEP 2\" ],","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    \"description\" : \"Easy to make\"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"  }, {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    \"name\" : \"Fries\",","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    \"ingredients\" : [ {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Carrot Slices\",","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"95352563\"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    }, {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"      \"name\" : \"Banana\",","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"      \"quantity\" : \"98765432\"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    } ],","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    \"steps\" : [ \"Fries STEP 1\", \"Fries STEP 2\" ],","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    \"description\" : \"More SALT!\"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"  } ]","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":37}},{"path":"src/test/java/fridgy/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"rebeccacxy":1,"-":57}},{"path":"src/test/java/fridgy/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"rebeccacxy":1,"-":26}},{"path":"src/test/java/fridgy/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":2,"NayLin-H99":2,"-":132}},{"path":"src/test/java/fridgy/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.core.index;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        final Index fifthIngredientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fifthIngredientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fifthIngredientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fifthIngredientIndex.equals(fifthIngredientIndex));","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(fifthIngredientIndex.equals(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(fifthIngredientIndex.equals(5.0f));","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(fifthIngredientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"rebeccacxy":10,"NayLin-H99":2,"-":49}},{"path":"src/test/java/fridgy/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"        assertNotNull(AppUtil.getImage(\"/images/cute_fridge.png\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"                AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"alissayarmantho":1,"rebeccacxy":3,"NayLin-H99":4,"-":30}},{"path":"src/test/java/fridgy/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"rebeccacxy":5,"NayLin-H99":2,"-":101}},{"path":"src/test/java/fridgy/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Config;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"                read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rebeccacxy":7,"NayLin-H99":2,"-":108}},{"path":"src/test/java/fridgy/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":2,"NayLin-H99":2,"-":20}},{"path":"src/test/java/fridgy/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.SerializableTestClass;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TestUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":3,"-":42}},{"path":"src/test/java/fridgy/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.commons.util;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"                StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"rebeccacxy":5,"NayLin-H99":4,"-":136}},{"path":"src/test/java/fridgy/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.JsonInventoryStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"import fridgy.storage.JsonRecipeBookStorage;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.storage.StorageManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        JsonInventoryStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"                new JsonInventoryStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        JsonRecipeBookStorage recipeBookStorage \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"                new JsonRecipeBookStorage(temporaryFolder.resolve(\"recipeBook.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, recipeBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        String deleteCommand \u003d \"delete ingredient 9\";","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + ListCommand.INGREDIENT_KEYWORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        // Setup LogicManager with JsonInventoryIoExceptionThrowingStub","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        JsonInventoryStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"                new JsonInventoryIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionInventory.json\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        JsonRecipeBookStorage recipeBookStorage \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"                new JsonRecipeBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionRecipeBook.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, recipeBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \" \" + AddCommand.INGREDIENT_KEYWORD + \" \"","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_ALMOND + CommandTestUtil.QUANTITY_DESC_ALMOND","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_ALMOND","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.EXPIRY_DATE_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(TypicalIngredients.ALMOND).withTags().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        expectedModel.add(expectedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    public void getFilteredIngredientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredIngredientList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"alissayarmantho"},"content":"    public void getFilteredRecipeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"alissayarmantho"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredRecipeList().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), model.getRecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"rebeccacxy"},"content":"    private static class JsonInventoryIoExceptionThrowingStub extends JsonInventoryStorage {","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"rebeccacxy"},"content":"        private JsonInventoryIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"rootkie"},"content":"        public void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"rootkie"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"rootkie"},"content":"    private static class JsonRecipeBookIoExceptionThrowingStub extends JsonRecipeBookStorage {","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"rootkie"},"content":"        private JsonRecipeBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"rootkie"},"content":"        public void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alissayarmantho":3,"rebeccacxy":33,"rootkie":20,"NayLin-H99":4,"-":127}},{"path":"src/test/java/fridgy/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    private Model model;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_newIngredient_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        expectedModel.add(validIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new AddCommand(validIngredient), model,","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validIngredient), expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_duplicateIngredient_throwsCommandException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        Ingredient ingredientInList \u003d model.getInventory().getList().get(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(ingredientInList), model,","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"                AddCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":35,"rootkie":5,"NayLin-H99":4}},{"path":"src/test/java/fridgy/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public void constructor_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_ingredientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        ModelStubAcceptingIngredientAdded modelStub \u003d new ModelStubAcceptingIngredientAdded();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        CommandResult commandResult \u003d new AddCommand(validIngredient).execute(modelStub);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validIngredient), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(Arrays.asList(validIngredient), modelStub.ingredientsAdded);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_duplicateIngredient_throwsCommandException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        AddCommand addCommand \u003d new AddCommand(validIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        ModelStub modelStub \u003d new ModelStubWithIngredient(validIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_INGREDIENT, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient almond \u003d new IngredientBuilder().withName(\"Almond\").build();","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient basil \u003d new IngredientBuilder().withName(\"Basil\").build();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        AddCommand addAlmondCommand \u003d new AddCommand(almond);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        AddCommand addBasilCommand \u003d new AddCommand(basil);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(addAlmondCommand.equals(addAlmondCommand));","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        AddCommand addAlmondCommandCopy \u003d new AddCommand(almond);","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(addAlmondCommand.equals(addAlmondCommandCopy));","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(addAlmondCommand.equals(1));","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(addAlmondCommand.equals(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        // different Ingredient -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(addAlmondCommand.equals(addBasilCommand));","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"    private class ModelStub implements IngredientModel {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        public Path getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"        public void setInventoryFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"        public void add(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"rebeccacxy"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"        public void sortIngredient(Comparator\u003cIngredient\u003e comparator) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"rootkie"},"content":"        public void setInventory(ReadOnlyDatabase\u003cIngredient\u003e newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"rootkie"},"content":"        public ReadOnlyDatabase\u003cIngredient\u003e getInventory() {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"        public boolean has(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"rootkie"},"content":"        public void delete(Ingredient target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"rootkie"},"content":"        public void set(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"rebeccacxy"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"rebeccacxy"},"content":"        public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"        public void setActiveIngredient(Ingredient activeIngredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"rootkie"},"content":"     * A Model stub that contains a single ingredient.","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"rebeccacxy"},"content":"    private class ModelStubWithIngredient extends ModelStub {","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"NayLin-H99"},"content":"        private final Ingredient ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"        ModelStubWithIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"NayLin-H99"},"content":"            requireNonNull(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"            this.ingredient \u003d ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"rootkie"},"content":"        public boolean has(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"rebeccacxy"},"content":"            requireNonNull(ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"            return this.ingredient.isSameIngredient(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"     * A Model stub that always accept the ingredient being added.","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"rebeccacxy"},"content":"    private class ModelStubAcceptingIngredientAdded extends ModelStub {","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"NayLin-H99"},"content":"        final ArrayList\u003cIngredient\u003e ingredientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"rootkie"},"content":"        public boolean has(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"rebeccacxy"},"content":"            requireNonNull(ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"NayLin-H99"},"content":"            return ingredientsAdded.stream().anyMatch(ingredient::isSameIngredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"rootkie"},"content":"        public void add(Ingredient ingredient) {","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"rebeccacxy"},"content":"            requireNonNull(ingredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"NayLin-H99"},"content":"            ingredientsAdded.add(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"rootkie"},"content":"        public ReadOnlyDatabase\u003cIngredient\u003e getInventory() {","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"rebeccacxy"},"content":"            return new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"rebeccacxy":45,"rootkie":16,"NayLin-H99":19,"-":129}},{"path":"src/test/java/fridgy/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_emptyInventory_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_nonEmptyInventory_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        Model model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"        Model expectedModel \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(),","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        expectedModel.setInventory(new Inventory());","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":27,"rootkie":2,"NayLin-H99":3}},{"path":"src/test/java/fridgy/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"rebeccacxy":1,"-":53}},{"path":"src/test/java/fridgy/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.CliSyntax;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.EditIngredientDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_INGREDIENT_ARGUMENT_FORMAT \u003d \"ingredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_NAME_ALMOND \u003d \"Almond Bee\";","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_NAME_BASIL \u003d \"Basil Choo\";","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_NAME_FISH \u003d \"Fish Choo\";","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_QUANTITY_ALMOND \u003d \"11111111\";","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_QUANTITY_BASIL \u003d \"22222222\";","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_QUANTITY_FISH \u003d \"22222222\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_DESCRIPTION_ALMOND \u003d \"Block 312, Almond Street 1\";","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_DESCRIPTION_BASIL \u003d \"Block 123, Basilby Street 3\";","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_DESCRIPTION_FISH \u003d \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_TAG_VEGETABLE \u003d \"vegetable\";","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    public static final String VALID_TAG_SNACK \u003d \"snack\";","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    public static final String VALID_EXPIRY_DATE \u003d \"20-08-2010\";","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    public static final String NAME_DESC_ALMOND \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    public static final String NAME_DESC_BASIL \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    public static final String NAME_DESC_FISH \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    public static final String QUANTITY_DESC_ALMOND \u003d \" \" + CliSyntax.PREFIX_QUANTITY + VALID_QUANTITY_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    public static final String QUANTITY_DESC_BASIL \u003d \" \" + CliSyntax.PREFIX_QUANTITY + VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public static final String QUANTITY_DESC_FISH \u003d \" \" + CliSyntax.PREFIX_QUANTITY + VALID_QUANTITY_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DESCRIPTION_DESC_ALMOND \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION + VALID_DESCRIPTION_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DESCRIPTION_DESC_BASIL \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION + VALID_DESCRIPTION_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DESCRIPTION_DESC_FISH \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION + VALID_DESCRIPTION_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"    public static final String EXPIRY_DATE_DESC \u003d \" \" + CliSyntax.PREFIX_EXPIRY + VALID_EXPIRY_DATE;","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    public static final String TAG_DESC_SNACK \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_SNACK;","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"    public static final String TAG_DESC_VEGETABLE \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INVALID_INGREDIENT_ARGUMENT_FORMAT \u003d \"monkegredient\";","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"            + CliSyntax.PREFIX_QUANTITY + \"911a\"; // \u0027a\u0027 not allowed in quantities","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"            + CliSyntax.PREFIX_DESCRIPTION; // empty string not allowed for description","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INVALID_DESCRIPTION_DESC_TWO \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"            + \"ƗØƀĐǤ \"; // non-ascii characters not allowed for description","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    public static final EditCommand.EditIngredientDescriptor DESC_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"    public static final EditCommand.EditIngredientDescriptor DESC_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"    public static final EditCommand.EditIngredientDescriptor DESC_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        DESC_ALMOND \u003d new EditIngredientDescriptorBuilder().withName(VALID_NAME_ALMOND)","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(VALID_QUANTITY_ALMOND)","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"                .withDescription(VALID_DESCRIPTION_ALMOND).withTags(VALID_TAG_SNACK)","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"                .withExpiry(VALID_EXPIRY_DATE).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        DESC_BASIL \u003d new EditIngredientDescriptorBuilder().withName(VALID_NAME_BASIL)","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"                .withDescription(VALID_DESCRIPTION_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"                .withExpiry(VALID_EXPIRY_DATE)","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"                .withTags(VALID_TAG_VEGETABLE, VALID_TAG_SNACK).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        DESC_FISH \u003d new EditIngredientDescriptorBuilder().withName(VALID_NAME_FISH)","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(VALID_QUANTITY_FISH)","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"                .withDescription(VALID_DESCRIPTION_FISH)","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"                .withExpiry(VALID_EXPIRY_DATE).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"rebeccacxy"},"content":"     * - the address book, filtered ingredient list and selected ingredient in {@code actualModel} remain unchanged","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"        Inventory expectedInventory \u003d new Inventory(actualModel.getInventory());","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"        List\u003cIngredient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredIngredientList());","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedInventory, actualModel.getInventory());","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredIngredientList());","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"     * Updates {@code model}\u0027s filtered list to show only the ingredient at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"     * {@code model}\u0027s inventory.","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"rebeccacxy"},"content":"    public static void showIngredientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredIngredientList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredient \u003d model.getFilteredIngredientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"rebeccacxy"},"content":"        final String[] splitName \u003d ingredient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"rebeccacxy"},"content":"        model.updateFilteredIngredientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(1, model.getFilteredIngredientList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alissayarmantho":2,"rebeccacxy":60,"NayLin-H99":15,"-":65}},{"path":"src/test/java/fridgy/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    private Model model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient ingredientToDelete \u003d model.getFilteredIngredientList()","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_FIRST_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        expectedModel.delete(ingredientToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredIngredientList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient ingredientToDelete \u003d model.getFilteredIngredientList()","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_FIRST_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        expectedModel.delete(ingredientToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        showNoIngredient(expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInventory().getList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"    public void equals() {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"        // different Ingredient -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"rebeccacxy"},"content":"    private void showNoIngredient(Model model) {","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"        model.updateFilteredIngredientList(p -\u003e false);","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(model.getFilteredIngredientList().isEmpty());","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":93,"rootkie":7,"NayLin-H99":8}},{"path":"src/test/java/fridgy/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.EditIngredientDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    private Model model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient editedIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder(editedIngredient).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        expectedModel.set(model.getFilteredIngredientList().get(0), editedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        Index indexLastIngredient \u003d Index.fromOneBased(model.getFilteredIngredientList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient lastIngredient \u003d model.getFilteredIngredientList().get(indexLastIngredient.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        IngredientBuilder ingredientInList \u003d new IngredientBuilder(lastIngredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedIngredient \u003d ingredientInList","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                .withName(CommandTestUtil.VALID_NAME_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"                .withTags(CommandTestUtil.VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"                .withName(CommandTestUtil.VALID_NAME_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"                .withTags(CommandTestUtil.VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastIngredient, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"        expectedModel.set(lastIngredient, editedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT,","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"                new EditCommand.EditIngredientDescriptor());","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedIngredient \u003d model","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"                .getFilteredIngredientList()","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_FIRST_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient ingredientInFilteredList \u003d model.getFilteredIngredientList()","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_FIRST_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedIngredient \u003d new IngredientBuilder(ingredientInFilteredList)","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"                .withName(CommandTestUtil.VALID_NAME_BASIL).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT,","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"                new EditIngredientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BASIL).build());","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"        expectedModel.set(model.getFilteredIngredientList().get(0), editedIngredient);","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_duplicateIngredientUnfilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient firstIngredient \u003d model.getFilteredIngredientList()","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_FIRST_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder(firstIngredient).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_INGREDIENT, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_duplicateIngredientFilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"rebeccacxy"},"content":"        // edit Ingredient in filtered list into a duplicate in address book","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"        Ingredient ingredientInList \u003d model.getInventory().getList()","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"                .get(TypicalIndexes.INDEX_SECOND_INGREDIENT.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT,","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder(ingredientInList).build());","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_invalidIngredientIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"rebeccacxy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredIngredientList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"                .withName(CommandTestUtil.VALID_NAME_BASIL).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"rebeccacxy"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"rebeccacxy"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_invalidIngredientIndexFilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"rebeccacxy"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"rebeccacxy"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInventory().getList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"rebeccacxy"},"content":"                new EditIngredientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BASIL).build());","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"rebeccacxy"},"content":"    public void equals() {","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"NayLin-H99"},"content":"                new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT, CommandTestUtil.DESC_ALMOND);","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"rebeccacxy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor copyDescriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"NayLin-H99"},"content":"                new EditCommand.EditIngredientDescriptor(CommandTestUtil.DESC_ALMOND);","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"                new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT, copyDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"rebeccacxy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"rebeccacxy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_SECOND_INGREDIENT,","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"NayLin-H99"},"content":"                CommandTestUtil.DESC_ALMOND)));","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"rebeccacxy"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT,","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"                CommandTestUtil.DESC_BASIL)));","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":136,"rootkie":11,"NayLin-H99":34}},{"path":"src/test/java/fridgy/logic/commands/EditIngredientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.DESC_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.DESC_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_TAG_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand.EditIngredientDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.EditIngredientDescriptorBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"public class EditIngredientDescriptorTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    public void equals() {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"        EditIngredientDescriptor descriptorWithSameValues \u003d new EditIngredientDescriptor(DESC_ALMOND);","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(DESC_ALMOND.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(DESC_ALMOND.equals(DESC_ALMOND));","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(5));","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(DESC_BASIL));","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"        EditIngredientDescriptor editedAlmond \u003d new EditIngredientDescriptorBuilder(DESC_ALMOND)","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"                .withName(VALID_NAME_BASIL).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new EditIngredientDescriptorBuilder(DESC_ALMOND).withQuantity(VALID_QUANTITY_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        editedAlmond \u003d new EditIngredientDescriptorBuilder(DESC_ALMOND)","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                .withDescription(VALID_DESCRIPTION_BASIL).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new EditIngredientDescriptorBuilder(DESC_ALMOND).withTags(VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(DESC_ALMOND.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":51,"NayLin-H99":5}},{"path":"src/test/java/fridgy/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"rebeccacxy":4,"NayLin-H99":1,"-":14}},{"path":"src/test/java/fridgy/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    private Model model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(),","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"            new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_zeroKeywords_noIngredientFound() {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW, 0, \"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        expectedModel.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredIngredientList());","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_multipleKeywords_oneIngredientFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW, 1, \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carrot Strawberry Dragon Fruit\");","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"        expectedModel.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(Arrays.asList(TypicalIngredients.CARROT), model.getFilteredIngredientList());","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_multipleKeywords_multipleIngredientsFound() {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW, 3, \"s\");","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carrot Slices Egg mayo Fig jam\");","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        expectedModel.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(Arrays.asList(TypicalIngredients.CARROT, TypicalIngredients.EGG, TypicalIngredients.FIGS),","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"                model.getFilteredIngredientList());","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"alissayarmantho":12,"rebeccacxy":16,"rootkie":2,"NayLin-H99":6,"-":56}},{"path":"src/test/java/fridgy/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":16,"NayLin-H99":1}},{"path":"src/test/java/fridgy/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    private Model model;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        model \u003d new ModelManager(TypicalIngredients.getTypicalInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        expectedModel \u003d new ModelManager(model.getInventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.showIngredientAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":32,"rootkie":3,"NayLin-H99":2}},{"path":"src/test/java/fridgy/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.BANANA;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.IngredientModel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ViewCommand(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_differentCommand_returnsFalse() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand targetCommand \u003d new ViewCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_equalCommand_returnsTrue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand targetCommand \u003d new ViewCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand targetCommand2 \u003d new ViewCommand(Index.fromOneBased(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(testCommand.equals(targetCommand2));","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(2));","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        Object targetObj \u003d new String(\"2\");","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(testCommand.equals(targetObj));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(NullPointerException.class, () -\u003e testCommand.execute(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_targetIndexLargerThanList_throwsCommandException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommandTest.IngredientModelStubWithIngredient testModel \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"                new ViewCommandTest.IngredientModelStubWithIngredient();","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(testModel));","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_validTargetIndex_changesSpecifiedActiveRecipe() {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommand testCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"        ViewCommandTest.IngredientModelStubWithIngredient testModel \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"                new IngredientModelStubWithIngredient();","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"        testModel.add(BANANA);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"        CommandResult expected \u003d new CommandResult(","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"                String.format(ViewCommand.MESSAGE_SUCCESS, APPLE));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"            CommandResult result \u003d testCommand.execute(testModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"            assertTrue(result.equals(expected));","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"            assertTrue(testModel.getActive().equals(APPLE));","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"            assertFalse(testModel.getActive().equals(BANANA));","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"    private class IngredientModelStub implements IngredientModel {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"NayLin-H99"},"content":"        public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"        public void setInventory(ReadOnlyDatabase\u003cIngredient\u003e inventory) {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"        public ReadOnlyDatabase\u003cIngredient\u003e getInventory() {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"NayLin-H99"},"content":"        public boolean has(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"NayLin-H99"},"content":"        public void delete(Ingredient target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"NayLin-H99"},"content":"        public void add(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"        public void sortIngredient(Comparator\u003cIngredient\u003e comparator) {","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"NayLin-H99"},"content":"        public void set(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"NayLin-H99"},"content":"        public void setActiveIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"        public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"    private class IngredientModelStubNoIngredient extends IngredientModelStub {","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"        private Inventory inventory \u003d new Inventory();","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"        private Ingredient active;","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"NayLin-H99"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"NayLin-H99"},"content":"            return inventory.getList();","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"NayLin-H99"},"content":"        public boolean has(Ingredient target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"NayLin-H99"},"content":"            return inventory.has(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"NayLin-H99"},"content":"        public void delete(Ingredient target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"NayLin-H99"},"content":"            this.inventory.remove(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"NayLin-H99"},"content":"        public void add(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"NayLin-H99"},"content":"            this.inventory.add(ingredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"NayLin-H99"},"content":"        public void set(Ingredient ingredient, Ingredient editedIngredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"NayLin-H99"},"content":"            this.inventory.set(ingredient, editedIngredient);","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"NayLin-H99"},"content":"        public void setActiveIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"NayLin-H99"},"content":"            this.active \u003d ingredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"NayLin-H99"},"content":"        public Ingredient getActive() {","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"NayLin-H99"},"content":"            return this.active;","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"NayLin-H99"},"content":"    private class IngredientModelStubWithIngredient extends IngredientModelStubNoIngredient {","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"NayLin-H99"},"content":"        public IngredientModelStubWithIngredient() {","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"NayLin-H99"},"content":"            super.inventory.add(APPLE);","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":222}},{"path":"src/test/java/fridgy/logic/commands/recipe/AddRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.commands.recipe.AddRecipeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.testutil.TypicalRecipes.MAGGIE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"public class AddRecipeCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public void constructor_nullRecipe_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRecipeCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        RecipeModel nullModel \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"                new AddRecipeCommand(BURGER).execute(nullModel));","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    public void equals_sameCommand_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(MAGGIE);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentCommandSameValue_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand targetCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentCommandDifferentValue_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand targetCommand \u003d new AddRecipeCommand(MAGGIE);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"    public void equals_targetObjectNotCommand_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        Object targetObject \u003d new String(\"Burger\");","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testCommand.equals(targetObject));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    public void equals_targetObjectNull_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"    public void execute_duplicateRecipeProvided_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(BURGER);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"                testCommand.execute(testModel));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    public void execute_validRecipeProvided_returnsCommandResult() {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand testCommand \u003d new AddRecipeCommand(MAGGIE);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"        CommandResult expected \u003d new CommandResult(String.format(MESSAGE_SUCCESS, MAGGIE));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"            assertTrue(testCommand.execute(testModel).equals(expected));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"Exception thrown!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStub implements RecipeModel {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"        public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        public void setRecipeBookFilePath(Path recipeBookFilePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"        public void setRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"        public ReadOnlyDatabase\u003cRecipe\u003e getRecipeBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"alissayarmantho"},"content":"        public void sortRecipe(Comparator\u003cRecipe\u003e comparator) {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"        public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"alissayarmantho"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"        public void setActiveRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"        public void updateFilteredRecipeList(Predicate\u003cRecipe\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"        public boolean deductIngredients(Set\u003cBaseIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStubNoRecipe extends RecipeModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"NayLin-H99"},"content":"        private RecipeBook recipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"rootkie"},"content":"            return recipeBook.has(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.remove(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.add(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.set(target, editedRecipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStubWithRecipe extends RecipeModelStubNoRecipe {","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"        public RecipeModelStubWithRecipe() {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"rootkie"},"content":"            super.recipeBook.add(BURGER);","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alissayarmantho":12,"pattan9955":144,"rootkie":20,"NayLin-H99":20}},{"path":"src/test/java/fridgy/logic/commands/recipe/CookRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.commands.recipe.CookRecipeCommand.NOT_ENOUGH_INGR;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.CHICKEN;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.FLOUR;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalRecipes.RICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"public class CookRecipeCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    private ModelManager modelManager \u003d new ModelManager(new Inventory(), new RecipeBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    public void constructor_nullRecipe_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CookRecipeCommand(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"        RecipeModel nullModel \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"                new CookRecipeCommand(Index.fromOneBased(1)).execute(nullModel));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_sameCommand_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand testCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_differentCommandSameValue_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand testCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand targetCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_differentCommandDifferentValue_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand testCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand targetCommand \u003d new CookRecipeCommand(Index.fromOneBased(2));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_targetObjectNotCommand_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand testCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"        Object targetObject \u003d new String(\"Random\");","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(testCommand.equals(targetObject));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"    public void equals_targetObjectNull_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand testCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(testCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_zeroOfRequiredIngredient_commandExceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"        // Adding ingredients","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(CHICKEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(FLOUR);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"        // Adding a recipe that doesn\u0027t use any of the ingredients","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(RICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand cookRecipeCommand \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"        CommandException e \u003d assertThrows(CommandException.class, () -\u003e cookRecipeCommand.execute(modelManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(String.format(NOT_ENOUGH_INGR, modelManager.getRecipeBook().getList().get(0)), e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), modelManager.getInventory().getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), modelManager.getInventory().getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_notEnoughRequiredIngredient_commandExceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"        // Adding ingredients","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(CHICKEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(FLOUR);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        // insufficient quantity","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(new IngredientBuilder().withName(\"rice\")","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(\"200g\").withExpiryDate(\"20-02-2090\").build());","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"        // Adding a recipe that uses rice","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(RICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand cookRecipeCommand \u003d new CookRecipeCommand((Index.fromOneBased(1)));","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"        CommandException e \u003d assertThrows(CommandException.class, () -\u003e cookRecipeCommand.execute(modelManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(String.format(NOT_ENOUGH_INGR, modelManager.getRecipeBook().getList().get(0)), e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), modelManager.getInventory().getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), modelManager.getInventory().getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(new Quantity(\"200g\"), modelManager.getInventory().getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_expiredRequiredIngredient_commandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"        // Adding an expired ingredient with appropriate quantity and name, but expired","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(new IngredientBuilder().withName(\"rice\").withQuantity(\"500g\").build());","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        // Others ingredients","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(CHICKEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(FLOUR);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"        // Adding a recipe that uses the expired ingredient (insufficient)","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(RICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand cookRecipeCommand \u003d new CookRecipeCommand((Index.fromOneBased(1)));","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        CommandException e \u003d assertThrows(CommandException.class, () -\u003e cookRecipeCommand.execute(modelManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(String.format(NOT_ENOUGH_INGR, modelManager.getRecipeBook().getList().get(0)), e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"        // expired ingredient should be first","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(new Quantity(\"500g\"), modelManager.getInventory().getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), modelManager.getInventory().getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), modelManager.getInventory().getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_noIngredientsInInventory_commandExceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(RICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand cookRecipeCommand \u003d new CookRecipeCommand((Index.fromOneBased(1)));","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"NayLin-H99"},"content":"        CommandException e \u003d assertThrows(CommandException.class, () -\u003e cookRecipeCommand.execute(modelManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(String.format(NOT_ENOUGH_INGR, modelManager.getRecipeBook().getList().get(0)), e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"NayLin-H99"},"content":"    public void execute_successfulDeduction_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(new IngredientBuilder().withName(\"Rice\")","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(\"500g\").withExpiryDate(\"24-10-2090\").build());","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(CHICKEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(FLOUR);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"NayLin-H99"},"content":"        modelManager.add(RICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand cookRecipeCommand \u003d new CookRecipeCommand((Index.fromOneBased(1)));","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"NayLin-H99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"NayLin-H99"},"content":"            assertEquals(String.format(CookRecipeCommand.MESSAGE_SUCCESS, RICE),","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"NayLin-H99"},"content":"                    cookRecipeCommand.execute(modelManager).getFeedbackToUser());","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"NayLin-H99"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"NayLin-H99"},"content":"        // Rice should be completely used up and removed","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(2, modelManager.getInventory().getList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"NayLin-H99"},"content":"        // Chicken and Flour should remain unused","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), modelManager.getInventory().getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), modelManager.getInventory().getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NayLin-H99":155}},{"path":"src/test/java/fridgy/logic/commands/recipe/DeleteRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.testutil.TypicalRecipes.MAGGIE;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"public class DeleteRecipeCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteRecipeCommand(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentCommand_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand targetCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    public void equals_equalCommand_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand targetCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand targetCommand2 \u003d new DeleteRecipeCommand(Index.fromOneBased(4));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testCommand.equals(targetCommand2));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(2));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        Object targetObj \u003d new String(\"2\");","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testCommand.equals(targetObj));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, () -\u003e testCommand.execute(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"    public void execute_targetIndexLargerThanList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(testModel));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"    public void execute_validTargetIndex_deletesSpecifiedRecipe() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand testCommand \u003d new DeleteRecipeCommand(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        testModel.add(MAGGIE);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        CommandResult expected \u003d new CommandResult(","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"                String.format(DeleteRecipeCommand.MESSAGE_SUCCESS, BURGER));","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"            CommandResult result \u003d testCommand.execute(testModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"            assertTrue(result.equals(expected));","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"            assertFalse(testModel.has(BURGER));","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"            assertTrue(testModel.has(MAGGIE));","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStub implements RecipeModel {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"        public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"        public void setRecipeBookFilePath(Path recipeBookFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"        public void setRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"        public ReadOnlyDatabase\u003cRecipe\u003e getRecipeBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"        public void sortRecipe(Comparator\u003cRecipe\u003e comparator) {","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"        public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"alissayarmantho"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"rootkie"},"content":"        public void setActiveRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"        public void updateFilteredRecipeList(Predicate\u003cRecipe\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"        public boolean deductIngredients(Set\u003cBaseIngredient\u003e ingrToDeduct) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStubNoRecipe extends RecipeModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"NayLin-H99"},"content":"        private RecipeBook recipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"        public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"rootkie"},"content":"            return recipeBook.getList();","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"rootkie"},"content":"            return recipeBook.has(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.remove(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.add(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.set(target, editedRecipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"pattan9955"},"content":"    private class RecipeModelStubWithRecipe extends RecipeModelStubNoRecipe {","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"pattan9955"},"content":"        public RecipeModelStubWithRecipe() {","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"rootkie"},"content":"            super.recipeBook.add(BURGER);","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alissayarmantho":12,"pattan9955":155,"rootkie":25,"NayLin-H99":8}},{"path":"src/test/java/fridgy/logic/commands/recipe/EditRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.commands.recipe.EditRecipeCommand.MESSAGE_EDIT_RECIPE_SUCCESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.EditRecipeDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    private final BaseIngredient ingr1 \u003d new BaseIngredient(new fridgy.model.ingredient.Name(\"ingr1\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"            new Quantity(\"100mg\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    private final BaseIngredient ingr2 \u003d new BaseIngredient(new fridgy.model.ingredient.Name(\"ingr2\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            new Quantity(\"200mg\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void constructor_nullIndexOrDescriptor_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"            -\u003e new EditRecipeCommand(null, new EditRecipeDescriptor()));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"            -\u003e new EditRecipeCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"            -\u003e new EditRecipeCommand(null, null));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public void execute_nullModelProvided_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"            -\u003e new EditRecipeCommand(Index.fromZeroBased(1), new EditRecipeDescriptor()).execute(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    public void execute_invalidIndexProvided_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        Index invalidIndexTooBig \u003d Index.fromZeroBased(5);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        Index invalidIndexTooSmall \u003d Index.fromZeroBased(0);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(invalidIndexTooBig, testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand2 \u003d new EditRecipeCommand(invalidIndexTooSmall, testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(testModel));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand2.execute(testModel));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    public void execute_targetRecipeAlreadyExists_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        Recipe testRecipe1 \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name 1\")","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(Arrays.asList(ingr1, ingr2))","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"Step 1\", \"Step 2\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"        Recipe testRecipe2 \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(Arrays.asList(ingr1, ingr2))","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"Step 1\", \"Step 2\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        testModel.add(testRecipe1);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"        testModel.add(testRecipe2);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        testDescriptor.setName(new Name(\"Test Name 2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(testModel));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"    public void execute_validEditRecipeCommand_returnsCorrectResult() {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"        Recipe testRecipe1 \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name 1\")","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(Arrays.asList(ingr1, ingr2))","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"Step 1\", \"Step 2\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"        Recipe testRecipe2 \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(Arrays.asList(ingr1, ingr2))","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"Step 1\", \"Step 2\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"        testModel.add(testRecipe1);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"        testModel.add(testRecipe2);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        testDescriptor.setName(new Name(\"Test Name 3\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"        testDescriptor.setSteps(Arrays.asList(","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"                new Step(\"Step 1\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"                new Step(\"Step 2\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"                new Step(\"Step 3\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        Recipe targetRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name 3\")","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(Arrays.asList(ingr1, ingr2))","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"Step 1\", \"Step 2\", \"Step 3\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        expectedModel.add(targetRecipe);","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"        expectedModel.add(testRecipe2);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"        CommandResult expectedResult \u003d new CommandResult(String","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"                .format(MESSAGE_EDIT_RECIPE_SUCCESS, targetRecipe));","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testCommand.execute(testModel), expectedResult);","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testModel, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"    public void equals_sameEditRecipeCommandObject_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), new EditRecipeDescriptor());","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"        assertEquals(testCommand, testCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), new EditRecipeDescriptor());","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testCommand, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"    public void equals_otherEditRecipeCommandSameValues_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test 1\")","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\", \"Step 3\")","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"ingr1 100mg\", \"ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand testCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test 1\")","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\", \"Step 3\")","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"ingr1 100mg\", \"ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand targetCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"        assertEquals(testCommand, targetCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"pattan9955":168}},{"path":"src/test/java/fridgy/logic/commands/recipe/EditRecipeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.EditRecipeDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeDescriptorTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    private final String ingr1 \u003d \"ingr1 100mg\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private final String ingr2 \u003d \"ingr2 200mg\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        assertEquals(testDescriptor, testDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        assertEquals(testDescriptor, targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    public void equals_nullValue_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentTypes_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, 8);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentName_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder(testDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Different Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentSteps_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder(testDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"New Step 1\", \"New Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentIngredients_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder(testDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"New ingr1 100mg\", \"New ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"    public void equals_differentDescription_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Test Name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(ingr1, ingr2)","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"Step 1\", \"Step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor targetDescriptor \u003d new EditRecipeDescriptorBuilder(testDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"New Test Description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"        assertNotEquals(testDescriptor, targetDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"    public void isAnyFieldEdited_noFieldEdited_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        assertFalse(testDescriptor.isAnyFieldEdited());","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"    public void isAnyFieldEdited_fieldEdited_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor testDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"                .withName(\"Edited name\")","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"        assertTrue(testDescriptor.isAnyFieldEdited());","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"pattan9955":143}},{"path":"src/test/java/fridgy/logic/commands/recipe/FindRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.commons.core.Messages.MESSAGE_RECIPES_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.testutil.TypicalRecipes.FRIES;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.testutil.TypicalRecipes.MAGGIE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.testutil.TypicalRecipes;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"public class FindRecipeCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_FIND_COMMAND_THREE_PLURAL_MESSAGE \u003d String.format(MESSAGE_RECIPES_LISTED_OVERVIEW,","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"            3, \"s\");","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_FIND_COMMAND_ONE_SINGULAR_MESSAGE \u003d String.format(MESSAGE_RECIPES_LISTED_OVERVIEW,","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"            1, \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_FIND_COMMAND_ZERO_MESSAGE \u003d String.format(MESSAGE_RECIPES_LISTED_OVERVIEW,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"            0, \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"    private Model model \u003d new ModelManager(new Inventory(), TypicalRecipes.getTypicalRecipeBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"    private Model expectedModel \u003d new ModelManager(new Inventory(), TypicalRecipes.getTypicalRecipeBook(),","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"            new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    public void constructor_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindRecipeCommand(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"        RecipeModel nullModel \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"                new FindRecipeCommand(predicate).execute(nullModel));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_sameCommand_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand testCommand \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_differentCommandSameValue_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate firstCopyPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand testCommand \u003d new FindRecipeCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand targetCommand \u003d new FindRecipeCommand(firstCopyPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_differentCommandDifferentValue_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand testCommand \u003d new FindRecipeCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand targetCommand \u003d new FindRecipeCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_targetObjectNotCommand_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand testCommand \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"alissayarmantho"},"content":"        Object targetObject \u003d \"first\";","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(testCommand.equals(targetObject));","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_targetObjectNull_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand testCommand \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(testCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_zeroKeywords_noRecipeFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand command \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"alissayarmantho"},"content":"        expectedModel.updateFilteredRecipeList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"alissayarmantho"},"content":"        CommandResult expected \u003d new CommandResult(VALID_FIND_COMMAND_ZERO_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(command.execute(model).equals(expected));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredRecipeList());","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_multipleKeywords_multipleRecipesFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Burger Maggie Fries Churros Toast Waffles\");","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand command \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"alissayarmantho"},"content":"        CommandResult expected \u003d new CommandResult(VALID_FIND_COMMAND_THREE_PLURAL_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"alissayarmantho"},"content":"        expectedModel.updateFilteredRecipeList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"alissayarmantho"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(command.execute(model).equals(expected));","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(Arrays.asList(BURGER, MAGGIE, FRIES),","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"alissayarmantho"},"content":"                model.getFilteredRecipeList());","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_multipleKeywords_oneRecipesFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Burger Steak Pizza Churros Toast Waffles\");","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand command \u003d new FindRecipeCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"alissayarmantho"},"content":"        CommandResult expected \u003d new CommandResult(VALID_FIND_COMMAND_ONE_SINGULAR_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"alissayarmantho"},"content":"        expectedModel.updateFilteredRecipeList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(command.execute(model).equals(expected));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(Arrays.asList(BURGER),","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"alissayarmantho"},"content":"                model.getFilteredRecipeList());","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"alissayarmantho"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"alissayarmantho"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"alissayarmantho"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":135}},{"path":"src/test/java/fridgy/logic/commands/recipe/ListRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.commands.recipe.ListRecipeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.testutil.TypicalRecipes;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"public class ListRecipeCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"    private Model model;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"        model \u003d new ModelManager(new Inventory(), TypicalRecipes.getTypicalRecipeBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"        expectedModel \u003d new ModelManager(new Inventory(), model.getRecipeBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_differentCommandObject_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand targetCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"        Object targetObj \u003d \"2\";","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(testCommand.equals(targetObj));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(NullPointerException.class, () -\u003e testCommand.execute(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"        CommandResult expected \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.execute(model).equals(expected));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand testCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"        CommandResult expected \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"        RecipeCommandTestUtil.showRecipeAtIndex(model, TypicalIndexes.INDEX_FIRST_INGREDIENT);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(testCommand.execute(model).equals(expected));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":77}},{"path":"src/test/java/fridgy/logic/commands/recipe/RecipeCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"public class RecipeCommandTestUtil {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"     * Updates {@code model}\u0027s filtered list to show only the recipe at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"     * {@code model}\u0027s recipe book.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    public static void showRecipeAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredRecipeList().size());","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"        Recipe recipe \u003d model.getFilteredRecipeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"        final String[] splitName \u003d recipe.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"        model.updateFilteredRecipeList((item) -\u003e item.getName().fullName.contains(splitName[0]));","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(1, model.getFilteredRecipeList().size());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":24}},{"path":"src/test/java/fridgy/logic/commands/recipe/ViewRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.logic.commands.recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.MAGGIE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeModel;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"public class ViewRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ViewRecipeCommand(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    public void equals_differentCommand_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand targetCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(4));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        assertFalse(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    public void equals_equalCommand_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand targetCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand targetCommand2 \u003d new ViewRecipeCommand(Index.fromOneBased(4));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        assertTrue(testCommand.equals(targetCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        assertTrue(testCommand.equals(targetCommand2));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(2));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        Object targetObj \u003d new String(\"2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        assertFalse(testCommand.equals(targetObj));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e testCommand.execute(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"    public void execute_targetIndexLargerThanList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(testModel));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    public void execute_validTargetIndex_changesSpecifiedActiveRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        ViewRecipeCommand testCommand \u003d new ViewRecipeCommand(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"        RecipeModelStubWithRecipe testModel \u003d new RecipeModelStubWithRecipe();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        testModel.add(MAGGIE);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"        CommandResult expected \u003d new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"                String.format(ViewRecipeCommand.MESSAGE_SUCCESS, BURGER));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"            CommandResult result \u003d testCommand.execute(testModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"            assertTrue(result.equals(expected));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"            assertTrue(testModel.getActive().equals(BURGER));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"            assertFalse(testModel.getActive().equals(MAGGIE));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"    private class RecipeModelStub implements RecipeModel {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"        public Path getRecipeBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"        public void setRecipeBookFilePath(Path recipeBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"        public void setRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e recipeBook) {","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"        public ReadOnlyDatabase\u003cRecipe\u003e getRecipeBook() {","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"        public void sortRecipe(Comparator\u003cRecipe\u003e comparator) {","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rootkie"},"content":"        public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"alissayarmantho"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"alissayarmantho"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"alissayarmantho"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"rootkie"},"content":"        public void setActiveRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"rootkie"},"content":"        public void updateFilteredRecipeList(Predicate\u003cRecipe\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"        public boolean deductIngredients(Set\u003cBaseIngredient\u003e ingrToDeduct) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"            throw new AssertionError(\"Should not be used!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"rootkie"},"content":"    private class RecipeModelStubNoRecipe extends RecipeModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"rootkie"},"content":"        private RecipeBook recipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"rootkie"},"content":"        private Recipe active;","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"rootkie"},"content":"        public ObservableList\u003cRecipe\u003e getFilteredRecipeList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"rootkie"},"content":"            return recipeBook.getList();","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"rootkie"},"content":"        public boolean has(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"rootkie"},"content":"            return recipeBook.has(recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"rootkie"},"content":"        public void delete(Recipe target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.remove(target);","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"        public void add(Recipe recipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.add(recipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"        public void set(Recipe target, Recipe editedRecipe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"rootkie"},"content":"            this.recipeBook.set(target, editedRecipe);","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"rootkie"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"rootkie"},"content":"        public void setActiveRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"rootkie"},"content":"            this.active \u003d recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"rootkie"},"content":"        public Recipe getActive() {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"rootkie"},"content":"            return this.active;","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"rootkie"},"content":"    private class RecipeModelStubWithRecipe extends RecipeModelStubNoRecipe {","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"rootkie"},"content":"        public RecipeModelStubWithRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"rootkie"},"content":"            super.recipeBook.add(BURGER);","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alissayarmantho":12,"rootkie":193,"NayLin-H99":7}},{"path":"src/test/java/fridgy/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(TypicalIngredients.BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"                .withTags(CommandTestUtil.VALID_TAG_SNACK).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.TAG_DESC_SNACK","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.EXPIRY_DATE_DESC, new AddCommand(expectedIngredient));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_ALMOND + CommandTestUtil.NAME_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.TAG_DESC_SNACK","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.EXPIRY_DATE_DESC, new AddCommand(expectedIngredient));","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        // multiple quantities - last quantity accepted","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_ALMOND","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL + CommandTestUtil.DESCRIPTION_DESC_BASIL","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"                new AddCommand(expectedIngredient));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_ALMOND + CommandTestUtil.DESCRIPTION_DESC_BASIL","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                new AddCommand(expectedIngredient));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient expectedIngredientMultipleTags \u003d new IngredientBuilder(TypicalIngredients.BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"                .withTags(CommandTestUtil.VALID_TAG_SNACK, CommandTestUtil.VALID_TAG_VEGETABLE)","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"                .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"                new AddCommand(expectedIngredientMultipleTags));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        // zero tags","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(TypicalIngredients.ALMOND).withTags().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_ALMOND + CommandTestUtil.QUANTITY_DESC_ALMOND","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_ALMOND + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"                new AddCommand(expectedIngredient));","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        // missing name prefix","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"                    + CommandTestUtil.VALID_NAME_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"                    + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.VALID_EXPIRY_DATE, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"                        + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.VALID_QUANTITY_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"                        + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.VALID_EXPIRY_DATE, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"        // all prefixes missing","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"                        + CommandTestUtil.VALID_NAME_BASIL + CommandTestUtil.VALID_QUANTITY_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"                        + CommandTestUtil.VALID_DESCRIPTION_BASIL + CommandTestUtil.VALID_EXPIRY_DATE, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"        // invalid name\u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        // invalid quantity","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.INVALID_QUANTITY_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"        // invalid description","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.INVALID_DESCRIPTION_DESC + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"        // invalid description","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.INVALID_DESCRIPTION_DESC_TWO + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"rebeccacxy"},"content":"        // invalid tag","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.INVALID_TAG_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.VALID_TAG_SNACK + CommandTestUtil.EXPIRY_DATE_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"rebeccacxy"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.QUANTITY_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.INVALID_DESCRIPTION_DESC + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"rebeccacxy"},"content":"        // non-empty preamble","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.NAME_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL + CommandTestUtil.DESCRIPTION_DESC_BASIL","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"rebeccacxy"},"content":"                        + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.EXPIRY_DATE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"rebeccacxy"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":93,"NayLin-H99":47}},{"path":"src/test/java/fridgy/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"rebeccacxy":1,"-":149}},{"path":"src/test/java/fridgy/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"rebeccacxy":3,"-":35}},{"path":"src/test/java/fridgy/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + \"1\",","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"                new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + \"a\",","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"rebeccacxy":5,"NayLin-H99":4,"-":23}},{"path":"src/test/java/fridgy/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.EditIngredientDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        // no index specified","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.VALID_NAME_ALMOND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        // no field specified","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        // no index and no field specified","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"                + \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        // negative index","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"                + \"-5\" + CommandTestUtil.NAME_DESC_ALMOND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        // zero index","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"                + \"0\" + CommandTestUtil.NAME_DESC_ALMOND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"                + \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"                + \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.INVALID_QUANTITY_DESC, Quantity.MESSAGE_CONSTRAINTS); // invalid quantity","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"        // invalid quantity followed by valid email","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        // valid quantity followed by invalid quantity. The test case for invalid quantity followed by valid quantity","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"                + \"1\" + CommandTestUtil.QUANTITY_DESC_BASIL + CommandTestUtil.INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Ingredient} being edited,","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"                + \"1\" + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.TAG_DESC_VEGETABLE + TAG_EMPTY,","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"                + \"1\" + CommandTestUtil.TAG_DESC_SNACK + TAG_EMPTY + CommandTestUtil.TAG_DESC_VEGETABLE,","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"                + \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_SNACK + CommandTestUtil.TAG_DESC_VEGETABLE,","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"                        + \"1\" + CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"                        + CommandTestUtil.VALID_DESCRIPTION_ALMOND + CommandTestUtil.VALID_QUANTITY_ALMOND,","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL + CommandTestUtil.TAG_DESC_VEGETABLE","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_ALMOND","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.NAME_DESC_ALMOND + CommandTestUtil.TAG_DESC_SNACK;","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_ALMOND)","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"                        .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"                        .withDescription(CommandTestUtil.VALID_DESCRIPTION_ALMOND)","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_VEGETABLE, CommandTestUtil.VALID_TAG_SNACK).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL;","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"                        .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"                        .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"rebeccacxy"},"content":"        // name","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"NayLin-H99"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.NAME_DESC_ALMOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_ALMOND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"rebeccacxy"},"content":"        // quantity","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"NayLin-H99"},"content":"        userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_ALMOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"rebeccacxy"},"content":"        descriptor \u003d new EditIngredientDescriptorBuilder().withQuantity(CommandTestUtil.VALID_QUANTITY_ALMOND).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"rebeccacxy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"rebeccacxy"},"content":"        // description","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"NayLin-H99"},"content":"        userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_ALMOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"NayLin-H99"},"content":"        descriptor \u003d new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"NayLin-H99"},"content":"                .withDescription(CommandTestUtil.VALID_DESCRIPTION_ALMOND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"rebeccacxy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"rebeccacxy"},"content":"        // tags","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK;","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"rebeccacxy"},"content":"        descriptor \u003d new EditIngredientDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_SNACK).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"rebeccacxy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"NayLin-H99"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_ALMOND + CommandTestUtil.DESCRIPTION_DESC_ALMOND","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_ALMOND + CommandTestUtil.DESCRIPTION_DESC_ALMOND","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_SNACK","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.QUANTITY_DESC_BASIL + CommandTestUtil.DESCRIPTION_DESC_BASIL","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"rebeccacxy"},"content":"                + CommandTestUtil.TAG_DESC_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"                        .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"                        .withDescription(CommandTestUtil.VALID_DESCRIPTION_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"rebeccacxy"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_SNACK,","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"rebeccacxy"},"content":"                                CommandTestUtil.VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"rebeccacxy"},"content":"        // no other valid values specified","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"NayLin-H99"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.INVALID_QUANTITY_DESC + CommandTestUtil.QUANTITY_DESC_BASIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"NayLin-H99"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"NayLin-H99"},"content":"                new EditIngredientDescriptorBuilder().withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"rebeccacxy"},"content":"        // other valid values specified","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"NayLin-H99"},"content":"        userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.INVALID_QUANTITY_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"NayLin-H99"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BASIL + CommandTestUtil.QUANTITY_DESC_BASIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"NayLin-H99"},"content":"        descriptor \u003d new EditIngredientDescriptorBuilder()","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(CommandTestUtil.VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"rebeccacxy"},"content":"                .withDescription(CommandTestUtil.VALID_DESCRIPTION_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":207,"author":{"gitId":"rebeccacxy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"rebeccacxy"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_INGREDIENT;","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"rebeccacxy"},"content":"        String userInput \u003d CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-04"},{"lineNumber":215,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand.EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"rebeccacxy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":140,"NayLin-H99":81}},{"path":"src/test/java/fridgy/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.FindCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"        // empty command","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"        // empty keyword find ingredient command","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"        // empty keyword (whitespaces) find ingredient command","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"                        + \"     \", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Almond\", \"Basil\")));","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"                + \"Almond Basil\", expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"        // multiple whitespaces (excluding \\n) between keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.VALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"                + \" Almond \\t Basil  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"alissayarmantho":15,"rebeccacxy":24,"NayLin-H99":4}},{"path":"src/test/java/fridgy/logic/parser/FridgyParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_ALL_PREFIX_PRESENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_DEL_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_VIEW_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.ViewRecipeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.TypicalBaseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.ui.Observer;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"public class FridgyParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    private static final String EMPTY_COMMAND \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_SINGLE_WORD_COMMAND \u003d \"kekw\";","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    private static final String VALID_SINGLE_WORD_HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    private static final String VALID_SINGLE_WORD_EXIT_COMMAND \u003d \"exit\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_DOUBLE_WORD_RECIPE_COMMAND \u003d \"add recipe\";","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_DOUBLE_WORD_INGREDIENT_COMMAND \u003d \"delete ingredient\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_DOUBLE_WORD_GENERAL_COMMAND \u003d \"why tho\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    private static final String VALID_DOUBLE_WORD_CLEAR_COMMAND \u003d \"clear ingredient\";","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_TRIPLE_WORD_RECIPE_COMMAND \u003d \"kek recipe why\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_TRIPLE_WORD_INGREDIENT_COMMAND \u003d \"oh ingredient hello\";","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    private static final String INVALID_TRIPLE_WORD_GENERAL_COMMAND \u003d \"ooga la booga\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    private static final String VALID_TRIPLE_WORD_ADD_INGREDIENT_COMMAND \u003d \"add ingredient -n ingr1 -q 20g\"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"            + \" -t tag -e 20-10-2021\";","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    private static final String VALID_TRIPLE_WORD_DEL_INGREDIENT_COMMAND \u003d \"delete ingredient 1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"    private static final FridgyParser testParser \u003d new FridgyParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_emptyInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(EMPTY_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_invalidSingleTokenCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_SINGLE_WORD_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_validSingleTokenGeneralCommand_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"        CommandResult expected1 \u003d new ExitCommand().execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"        CommandResult expected2 \u003d new HelpCommand().execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"            CommandResult result1 \u003d testParser.parseCommand(VALID_SINGLE_WORD_EXIT_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"            CommandResult result2 \u003d testParser.parseCommand(VALID_SINGLE_WORD_HELP_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"            assertEquals(expected1, result1);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"            assertEquals(expected2, result2);","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"Exception thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_invalidDoubleTokenCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DOUBLE_WORD_RECIPE_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DOUBLE_WORD_INGREDIENT_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DOUBLE_WORD_GENERAL_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_validDoubleTokenCommand_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"        CommandResult expected \u003d new ClearCommand().execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"            CommandResult result \u003d testParser.parseCommand(VALID_DOUBLE_WORD_CLEAR_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"            assertEquals(expected, result);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_invalidTripleTokenCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_TRIPLE_WORD_GENERAL_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_TRIPLE_WORD_INGREDIENT_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_TRIPLE_WORD_RECIPE_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_validTripleTokenRecipeCommand_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        Recipe testRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\"))","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"        ObserverStub observerStub \u003d new ObserverStub();","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"        testModel.getActiveObservable().setObserver(observerStub);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"        testModel.setActiveRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"            CommandResult expectedAdd \u003d new AddRecipeCommand(testRecipe).execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"            CommandResult expectedView \u003d new ViewRecipeCommand(Index.fromZeroBased(0)).execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"            CommandResult expectedDelete \u003d new DeleteRecipeCommand(Index.fromZeroBased(0)).execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"            // Reinitialize testModel","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"            testModel.setRecipeBook(new RecipeBook());","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"            CommandResult resultAdd \u003d testParser.parseCommand(VALID_ADD_COMMAND_ALL_PREFIX_PRESENT).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"            CommandResult resultView \u003d testParser.parseCommand(VALID_VIEW_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"            CommandResult resultDelete \u003d testParser.parseCommand(VALID_DEL_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"            assertTrue(resultAdd.equals(expectedAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 resultDelete.equals(expectedDelete)","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 resultView.equals(expectedView));","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"    public void parseCommand_validTripleTokenIngredientCommand_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"        Model testModel \u003d new ModelManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"        Ingredient testIngredient \u003d new Ingredient(new Name(\"ingr1\"), new Quantity(\"20g\"),","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"                Set.of(new Tag(\"tag\")), new ExpiryDate(\"20-10-2021\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"            CommandResult expectedAdd \u003d new AddCommand(testIngredient).execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"            CommandResult expectedDelete \u003d new DeleteCommand(Index.fromZeroBased(0)).execute(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"pattan9955"},"content":"            // Reinitialize testModel","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"            testModel.setInventory(new Inventory());","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"pattan9955"},"content":"            CommandResult resultAdd \u003d testParser","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"                    .parseCommand(VALID_TRIPLE_WORD_ADD_INGREDIENT_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"            CommandResult resultDelete \u003d testParser","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"                    .parseCommand(VALID_TRIPLE_WORD_DEL_INGREDIENT_COMMAND).apply(testModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"            assertTrue(resultAdd.equals(expectedAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"                    \u0026\u0026 resultDelete.equals(expectedDelete));","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"CommandException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"    private class ObserverStub implements Observer {","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"        public void update(Ingredient newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"            requireNonNull(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"NayLin-H99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"NayLin-H99"},"content":"        public void update(Recipe newItem) {","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"NayLin-H99"},"content":"            requireNonNull(newItem);","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"NayLin-H99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"pattan9955":169,"rootkie":2,"NayLin-H99":18}},{"path":"src/test/java/fridgy/logic/parser/InventoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand.EditIngredientDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.FindCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.EditIngredientDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"public class InventoryParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_ADD_INGREDIENT_ARGUMENT \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"            AddCommand.INGREDIENT_KEYWORD + \" -n Ingredient -q 5 -e 20-08-2010\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_ADD_INGREDIENT_ARGUMENT \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"            CommandTestUtil.INVALID_INGREDIENT_ARGUMENT_FORMAT","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"                    + \" -n Ingredient -q 5 -e 20-08-2010\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    private static final Ingredient VALID_INGREDIENT \u003d new Ingredient(new Name(\"Ingredient\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"            new Quantity(\"5\"), new HashSet\u003c\u003e(), new ExpiryDate(\"20-08-2010\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    private final InventoryParser parser \u003d new InventoryParser();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        AddCommandParser c \u003d new AddCommandParser();","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(c.parse(VALID_ADD_INGREDIENT_ARGUMENT), new AddCommand(VALID_INGREDIENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    public void parseCommand_addCommand() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        AddCommandParser c \u003d new AddCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(c.parse(VALID_ADD_INGREDIENT_ARGUMENT), new AddCommand(VALID_INGREDIENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"                        parser.parseCommand(AddCommand.COMMAND_WORD + \" \" + INVALID_ADD_INGREDIENT_ARGUMENT));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + DeleteCommand.INGREDIENT_KEYWORD + \" \"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"                        + TypicalIndexes.INDEX_FIRST_INGREDIENT.getOneBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT), command);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        EditIngredientDescriptor descriptor \u003d new EditIngredientDescriptorBuilder(ingredient).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"                + EditCommand.INGREDIENT_KEYWORD + \" \" + TypicalIndexes.INDEX_FIRST_INGREDIENT.getOneBased()","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"                + \" \" + IngredientUtil.getEditIngredientDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(new EditCommand(TypicalIndexes.INDEX_FIRST_INGREDIENT, descriptor), command);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"                        parser.parseCommand(EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"                        + \" \" + EditCommand.INGREDIENT_KEYWORD + \" -oogabooga\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"alissayarmantho"},"content":"                FindCommand.COMMAND_WORD + \" \" + FindCommand.INGREDIENT_KEYWORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"alissayarmantho"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"rebeccacxy"},"content":"                + \" \" + ListCommand.INGREDIENT_KEYWORD) instanceof ListCommand);","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"                        parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"                        + \" \" + ListCommand.INGREDIENT_KEYWORD + \" 3\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"                parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"alissayarmantho":2,"rebeccacxy":44,"NayLin-H99":23,"-":53}},{"path":"src/test/java/fridgy/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.ListCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    public void parse_wrongOrEmptyArg_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"ooga\",","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rebeccacxy":19,"NayLin-H99":2}},{"path":"src/test/java/fridgy/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIndexes;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_QUANTITY \u003d \"+651234\";","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_TAG \u003d \"#snack\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_QUANTITY \u003d \"123456\";","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_DESCRIPTION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_TAG_1 \u003d \"snack\";","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    private static final String VALID_INGREDIENT \u003d \"ingredient 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    private static final String VALID_INGREDIENT_UNIT \u003d \"ingredient2 1kg\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    private static final String INVALID_INGREDIENT \u003d \"ingredient\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_INGREDIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_INGREDIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"    public void parseQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantity((String) null));","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    public void parseQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuantity(INVALID_QUANTITY));","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"    public void parseQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(VALID_QUANTITY));","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"    public void parseQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY + WHITESPACE;","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(quantityWithWhitespace));","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"    public void parseDescription_null_returnsEmptyDescription() {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(Optional.of(\"\")));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(Optional.of(\" \")));","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"rebeccacxy"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(Optional.of(INVALID_DESCRIPTION)));","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"        Description expectedDescription \u003d new Description(Optional.of(VALID_DESCRIPTION));","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(Optional.of(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"rebeccacxy"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"rebeccacxy"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"rebeccacxy"},"content":"        Description expectedDescription \u003d new Description(Optional.of(VALID_DESCRIPTION));","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(Optional.of(addressWithWhitespace)));","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"rootkie"},"content":"    public void parseBaseIngredient_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBaseIngredient(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"rootkie"},"content":"    public void parseBaseIngredient_missingQuantity_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseBaseIngredient(INVALID_INGREDIENT));","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseBaseIngredient(INVALID_INGREDIENT + \" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"rootkie"},"content":"    public void parseBaseIngredient_validIngredient_success() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"rootkie"},"content":"        BaseIngredient expected \u003d new BaseIngredient(new Name(\"ingredient\"), new Quantity(\"1\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"rootkie"},"content":"        assertEquals(expected, ParserUtil.parseBaseIngredient(VALID_INGREDIENT));","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"rootkie"},"content":"        expected \u003d new BaseIngredient(new Name(\"ingredient2\"), new Quantity(\"1kg\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"rootkie"},"content":"        assertEquals(expected, ParserUtil.parseBaseIngredient(VALID_INGREDIENT_UNIT));","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"rootkie"},"content":"    public void parseIngredients_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIngredients(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"rootkie"},"content":"    public void parseIngredients_invalidIngredient_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"rootkie"},"content":"        List\u003cString\u003e toParse \u003d Arrays.asList(VALID_INGREDIENT, INVALID_INGREDIENT);","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIngredients(toParse));","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"rootkie"},"content":"    public void parseIngredients_validIngredients_success() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"rootkie"},"content":"        List\u003cString\u003e toParse \u003d Arrays.asList(VALID_INGREDIENT, VALID_INGREDIENT_UNIT);","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"rootkie"},"content":"        Set\u003cBaseIngredient\u003e expected \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"rootkie"},"content":"            new BaseIngredient(new Name(\"ingredient\"), new Quantity(\"1\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"rootkie"},"content":"            new BaseIngredient(new Name(\"ingredient2\"), new Quantity(\"1kg\"))","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"rootkie"},"content":"            ));","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"rootkie"},"content":"        assertEquals(expected, ParserUtil.parseIngredients(toParse));","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"rebeccacxy":47,"rootkie":49,"NayLin-H99":4,"-":122}},{"path":"src/test/java/fridgy/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_wrongOrEmptyArg_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"ooga\",","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":21}},{"path":"src/test/java/fridgy/logic/parser/recipe/AddRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_MISSING_INGREDIENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_MISSING_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_MISSING_STEPS;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_WRONG_KEYWORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_ALL_PREFIX_PRESENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MISSING_DESCRIPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MULTIPLE_INGREDIENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MULTIPLE_STEPS;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_REPEATED_INGREDIENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.TypicalBaseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"public class AddRecipeCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public void parse_invalidKeyword_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        String userInput \u003d INVALID_ADD_COMMAND_WRONG_KEYWORD.replace(\"add \", \"\");","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        String expectedMsg \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"                AddRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"                userInput, expectedMsg);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    public void parse_missingRequiredPrefixes_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"                INVALID_ADD_COMMAND_MISSING_NAME.replace(\"add \", \"\"), INVALID_ADD_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"                INVALID_ADD_COMMAND_MISSING_INGREDIENT.replace(\"add \", \"\"), INVALID_ADD_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"                INVALID_ADD_COMMAND_MISSING_STEPS.replace(\"add \", \"\"), INVALID_ADD_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    public void parse_singlePrefixesOnlyValidCommands_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        Recipe noDescRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"                .withDescription(null)","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand expectedNoDescRecipe \u003d new AddRecipeCommand(noDescRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseSuccess(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                VALID_ADD_COMMAND_MISSING_DESCRIPTION.replace(\"add \", \"\"), expectedNoDescRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        Recipe allPrefixRecipe \u003d new RecipeBuilder(noDescRecipe)","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand expectedAllPrefixRecipe \u003d new AddRecipeCommand(allPrefixRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseSuccess(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                VALID_ADD_COMMAND_ALL_PREFIX_PRESENT.replace(\"add \", \"\"), expectedAllPrefixRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    public void parse_multipleSteps_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"        Recipe multipleStepsRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\", \"but why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand expected \u003d new AddRecipeCommand(multipleStepsRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseSuccess(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                VALID_ADD_COMMAND_MULTIPLE_STEPS.replace(\"add \", \"\"), expected);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"    public void parse_multipleIngredients_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        Recipe multipleIngrRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"                    TypicalBaseIngredients.INGR1,","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"                    TypicalBaseIngredients.INGR2","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"                ))","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand expected \u003d new AddRecipeCommand(multipleIngrRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseSuccess(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                VALID_ADD_COMMAND_MULTIPLE_INGREDIENTS.replace(\"add \", \"\"), expected);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"    public void parse_repeatedIngredients_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommandParser testParser \u003d new AddRecipeCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"        Recipe repeatedIngrRecipe \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1, TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand expected \u003d new AddRecipeCommand(repeatedIngrRecipe);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        RecipeCommandParserTestUtil.assertParseSuccess(testParser,","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                VALID_ADD_COMMAND_REPEATED_INGREDIENTS.replace(\"add \", \"\"), expected);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"pattan9955":104,"rootkie":8,"NayLin-H99":9}},{"path":"src/test/java/fridgy/logic/parser/recipe/CookRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_COOK_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_COOK_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_COOK_COMMAND_WRONG_KEYWORD;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_COOK_COMMAND;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.CookRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"public class CookRecipeCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    private CookRecipeCommandParser testParser \u003d new CookRecipeCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_invalidKeywordProvided_fails() {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"        String testString \u003d INVALID_COOK_COMMAND_WRONG_KEYWORD.replace(\"cook \", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"        assertParseFailure(testParser, testString, INVALID_COOK_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_invalidTargetIndexProvided_fails() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"        String testString \u003d INVALID_COOK_COMMAND_INVALID_INDEX.replace(\"cook \", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        assertParseFailure(testParser, testString, INVALID_COOK_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_validCommandProvided_passes() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        String testString \u003d VALID_COOK_COMMAND.replace(\"cook \", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        CookRecipeCommand expected \u003d new CookRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        assertParseSuccess(testParser, testString, expected);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NayLin-H99":37}},{"path":"src/test/java/fridgy/logic/parser/recipe/DeleteRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_WRONG_KEYWORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_DEL_COMMAND;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"public class DeleteRecipeCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    private DeleteRecipeCommandParser testParser \u003d new DeleteRecipeCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public void parse_invalidKeywordProvided_fails() {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        String testString \u003d INVALID_DEL_COMMAND_WRONG_KEYWORD.replace(\"delete \", \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, testString, INVALID_DEL_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    public void parse_invalidTargetIndexProvided_fails() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        String testString \u003d INVALID_DEL_COMMAND_INVALID_INDEX.replace(\"delete \", \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, testString, INVALID_DEL_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    public void parse_validCommandProvided_passes() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        String testString \u003d VALID_DEL_COMMAND.replace(\"delete \", \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand expected \u003d new DeleteRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, testString, expected);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"pattan9955":34,"NayLin-H99":3}},{"path":"src/test/java/fridgy/logic/parser/recipe/EditRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_BLANK_FIELDS_EDIT_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_EDIT_TYPE_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_INDEX_EDIT_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_ALL_FIELDS_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_DESC_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_DESC_STEPS_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_INGR_NAME_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_INGR_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_NAME_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_STEPS_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.EditRecipeDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    private EditRecipeCommandParser testParser \u003d new EditRecipeCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    private static String removeEditCommandWord(String fullCommand) {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        return fullCommand.replace(\"edit \", \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    public void parse_nullUserInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        assertThrows(NullPointerException.class, () -\u003e testParser.parse(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    public void parse_invalidFormatCommand_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        String expectedMsg \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"                EditRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        // Empty input","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, \"\", expectedMsg);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        // Not a recipe command","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, removeEditCommandWord(INVALID_EDIT_TYPE_COMMAND), expectedMsg);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        String expectedMsg \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"                EditRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, removeEditCommandWord(INVALID_INDEX_EDIT_COMMAND), expectedMsg);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    public void parse_noFieldsEdited_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        String expectedMsg \u003d EditRecipeCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"        assertParseFailure(testParser, removeEditCommandWord(INVALID_BLANK_FIELDS_EDIT_COMMAND), expectedMsg);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor expectedDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                .withName(\"new Test\")","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"new optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"new step 1\", \"new step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"new ingr1 100mg\", \"new ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand expectedCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), expectedDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser,","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                removeEditCommandWord(VALID_EDIT_COMMAND_ALL_FIELDS_PRESENT),","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"    public void parse_oneFieldPresent_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor baseDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        // Name present","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor nameDescriptor \u003d new EditRecipeDescriptorBuilder(baseDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                .withName(\"new Test\")","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand nameCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), nameDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_NAME_PRESENT), nameCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        // Ingredient present","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor ingrDescriptor \u003d new EditRecipeDescriptorBuilder(baseDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"new ingr1 100mg\", \"new ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand ingrCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), ingrDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_INGR_PRESENT), ingrCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"        // Steps present","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor stepDescriptor \u003d new EditRecipeDescriptorBuilder(baseDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"new step 1\", \"new step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand stepCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), stepDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_STEPS_PRESENT), stepCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"        // Description present","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor descDescriptor \u003d new EditRecipeDescriptorBuilder(baseDescriptor)","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"new optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand descCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), descDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_DESC_PRESENT), descCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"    public void parse_multipleFieldsPresent_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor baseDescriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        // Description + Steps present","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor descStepsDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"new optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"new step 1\", \"new step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand descStepsCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), descStepsDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_DESC_STEPS_PRESENT),","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"                descStepsCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        // Ingredients + Name present","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor ingrNameDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"new ingr1 100mg\", \"new ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"                .withName(\"new Test\")","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand ingrNameCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), ingrNameDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"        assertParseSuccess(testParser, removeEditCommandWord(VALID_EDIT_COMMAND_INGR_NAME_PRESENT),","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"                ingrNameCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"pattan9955":135}},{"path":"src/test/java/fridgy/logic/parser/recipe/FindRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_EMPTY_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_WHITESPACE_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_WRONG_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_FIND_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_FIND_COMMAND_WHITESPACES;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.FindRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"public class FindRecipeCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    private FindRecipeCommandParser testParser \u003d new FindRecipeCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_missingKeyword_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        assertParseFailure(testParser,","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"                INVALID_FIND_COMMAND_EMPTY_KEYWORD.replace(\"find \", \"\"), INVALID_FIND_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"        assertParseFailure(testParser,","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"                INVALID_FIND_COMMAND_WHITESPACE_KEYWORD.replace(\"find \", \"\"), INVALID_FIND_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"        assertParseFailure(testParser,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"                INVALID_FIND_COMMAND_WRONG_FORMAT.replace(\"find \", \"\"), INVALID_FIND_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_validCommandWithoutEmptySpaces_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"        String testString \u003d VALID_FIND_COMMAND.replace(\"find \", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand expected \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"                new FindRecipeCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"chicken\", \"burger\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"        assertParseSuccess(testParser, testString, expected);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_validCommandWithEmptySpaces_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"        String testString \u003d VALID_FIND_COMMAND_WHITESPACES.replace(\"find \", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand expected \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"                new FindRecipeCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"chicken\", \"burger\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"        assertParseSuccess(testParser, testString, expected);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":53}},{"path":"src/test/java/fridgy/logic/parser/recipe/ListRecipeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_LIST_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_LIST_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_LIST_TYPE_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_LIST_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.ListRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"public class ListRecipeParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"    private ListRecipeCommandParser parser \u003d new ListRecipeCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_missingRecipeKeyword_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"        String testString \u003d INVALID_LIST_COMMAND.replace(\"list \", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"        assertParseFailure(parser, testString, INVALID_LIST_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_wrongKeywordType_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"        String testString \u003d INVALID_LIST_TYPE_COMMAND.replace(\"list \", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        assertParseFailure(parser, testString, INVALID_LIST_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_validCommand_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"        String testString \u003d VALID_LIST_COMMAND.replace(\"list \", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand expected \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"        assertParseSuccess(parser, testString, expected);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":34}},{"path":"src/test/java/fridgy/logic/parser/recipe/RecipeCommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.CookRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.FindRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.ListRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.RecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"public class RecipeCommandParserTestUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * Collection of user commands for testing purposes.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    //---------------------------------INVALID ADD RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_WRONG_KEYWORD \u003d \"add kekw -n monke -i ingr1 -s why tho -d optional\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_MISSING_NAME \u003d \"add recipe -i ingr1 -s why tho -d optional\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_MISSING_INGREDIENT \u003d \"add recipe -n monke -s why tho -d optional\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_MISSING_STEPS \u003d \"add recipe -n monke -i ingr1 -d optional\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_WRONG_FORMAT \u003d \"-n monke add recipe -i ingr1 -s why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_NO_KEYWORD \u003d \"add -n monke -i ingr1 -s why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    //-----------------------------------VALID ADD RECIPE COMMANDS----------------------------------------------------","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    public static final String VALID_ADD_COMMAND_MISSING_DESCRIPTION \u003d \"add recipe -n monke -i ingr1 1kg -s why tho\";","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    public static final String VALID_ADD_COMMAND_ALL_PREFIX_PRESENT \u003d \"add recipe -n monke -i ingr1 1kg \"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"            + \"-s why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    public static final String VALID_ADD_COMMAND_MULTIPLE_STEPS \u003d \"add recipe -n monke -i ingr1 1kg -s why tho \"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"            + \"-s but why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    public static final String VALID_ADD_COMMAND_MULTIPLE_INGREDIENTS \u003d \"add recipe -n monke -i ingr1 1kg -i ingr2 1ml \"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"            + \"-s why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    public static final String VALID_ADD_COMMAND_REPEATED_INGREDIENTS \u003d \"add recipe -n monke -i ingr1 1kg -i ingr1 1kg \"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"            + \"-s why tho -d optional\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    //--------------------------------INVALID DELETE RECIPE COMMANDS-------------------------------------------------","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_DEL_COMMAND_WRONG_KEYWORD \u003d \"delete kekw 2\";","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_DEL_COMMAND_INVALID_INDEX \u003d \"delete recipe -3\";","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_DEL_COMMAND_WRONG_FORMAT \u003d \"recipe delete 0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_DEL_COMMAND_NO_KEYWORD \u003d \"delete 0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    //---------------------------------VALID DELETE RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_DEL_COMMAND \u003d \"delete recipe 1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_ADD_COMMAND_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"            AddRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_DEL_COMMAND_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"            DeleteRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    //------------------------------------VALID VIEW RECIPE COMMANDS-------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_VIEW_COMMAND \u003d \"view recipe 1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"    //---------------------------------VALID FIND RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_FIND_COMMAND \u003d \"find recipe chicken burger\";","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_FIND_COMMAND_WHITESPACES \u003d \"find recipe    chicken       \\t burger\";","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_FIND_COMMAND_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"            FindRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"    //--------------------------------INVALID FIND RECIPE COMMANDS-------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_FIND_COMMAND_EMPTY_KEYWORD \u003d \"find recipe\";","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_FIND_COMMAND_WHITESPACE_KEYWORD \u003d \"find recipe   \\t\";","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_FIND_COMMAND_WRONG_FORMAT \u003d \"find chicken burger\";","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"    //---------------------------------VALID LIST RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"    public static final String VALID_LIST_COMMAND \u003d \"list recipe\";","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_LIST_COMMAND_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"            ListRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"alissayarmantho"},"content":"    //---------------------------------INVALID LIST RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"alissayarmantho"},"content":"    public static final String INVALID_LIST_TYPE_COMMAND \u003d \"list ingredient\";","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"    //---------------------------------VALID COOK RECIPE COMMANDS-----------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"    public static final String VALID_COOK_COMMAND \u003d \"cook recipe 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"    //---------------------------------INVALID COOK RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND \u003d \"cook recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND_WRONG_KEYWORD \u003d \"cook kekw 2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND_INVALID_INDEX \u003d \"cook recipe -3\";","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND_WRONG_FORMAT \u003d \"recipe cook 0\";","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND_NO_KEYWORD \u003d \"cook 0\";","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"    public static final String INVALID_COOK_COMMAND_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"            CookRecipeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"    //---------------------------------INVALID EDIT RECIPE COMMANDS---------------------------------------------------","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_EDIT_COMMAND \u003d \"edit\";","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_BLANK_FIELDS_EDIT_COMMAND \u003d \"edit recipe 1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_EDIT_TYPE_COMMAND \u003d \"edit kekw -i ingr1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"    public static final String INVALID_INDEX_EDIT_COMMAND \u003d \"edit recipe -1 -i ingr1 -n test name\";","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"    //-----------------------------------VALID EDIT RECIPE COMMAND----------------------------------------------------","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_ALL_FIELDS_PRESENT \u003d \"edit recipe 1 -n new Test -i new ingr1 100mg \"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"            + \"-i new ingr2 200mg -s new step 1 -s new step 2 -d new optional description\";","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_NAME_PRESENT \u003d \"edit recipe 1 -n new Test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_INGR_PRESENT \u003d \"edit recipe 1 -i new ingr1 100mg -i new ingr2 200mg\";","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_DESC_PRESENT \u003d \"edit recipe 1 -d new optional description\";","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_STEPS_PRESENT \u003d \"edit recipe 1 -s new step 1 -s new step 2\";","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_DESC_STEPS_PRESENT \u003d \"edit recipe 1 -d new optional description \"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"            + \"-s new step 1 -s new step 2\";","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"    public static final String VALID_EDIT_COMMAND_INGR_NAME_PRESENT \u003d \"edit recipe 1 -n new Test -i new ingr1 100mg\"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"            + \" -i new ingr2 200mg\";","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"    public static void assertParseSuccess(RecipeCommandParser parser, String userInput, RecipeCommand expectedCommand) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"            RecipeCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"    public static void assertParseFailure(RecipeCommandParser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"            parser.parse(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alissayarmantho":23,"pattan9955":90,"rootkie":5,"NayLin-H99":18}},{"path":"src/test/java/fridgy/logic/parser/recipe/RecipeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_NO_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_ADD_COMMAND_WRONG_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_NO_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_WRONG_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_DEL_COMMAND_WRONG_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_EDIT_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_EDIT_TYPE_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_EMPTY_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_WHITESPACE_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_FIND_COMMAND_WRONG_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_LIST_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.INVALID_LIST_TYPE_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_ALL_PREFIX_PRESENT;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MISSING_DESCRIPTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MULTIPLE_INGREDIENTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_MULTIPLE_STEPS;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_ADD_COMMAND_REPEATED_INGREDIENTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_DEL_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_EDIT_COMMAND_ALL_FIELDS_PRESENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_FIND_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_FIND_COMMAND_WHITESPACES;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"import static fridgy.logic.parser.recipe.RecipeCommandParserTestUtil.VALID_LIST_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.AddRecipeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.DeleteRecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.FindRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.logic.commands.recipe.ListRecipeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.commands.recipe.RecipeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.model.recipe.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.EditRecipeDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.TypicalBaseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"public class RecipeParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    private RecipeParser testParser \u003d new RecipeParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_addRecipeInvalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_ADD_COMMAND_WRONG_FORMAT));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_addRecipeNoKeywordSpecified_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_ADD_COMMAND_NO_KEYWORD));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_addRecipeCommandValid_returnsRecipeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        Recipe base \u003d new RecipeBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"                .withName(\"monke\")","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"optional\")","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"        Recipe allPrefPresent \u003d base;","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        Recipe missingDesc \u003d new RecipeBuilder(base).withDescription(null).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"        Recipe multipleSteps \u003d new RecipeBuilder(base)","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                .withSteps(Arrays.asList(\"why tho\", \"but why tho\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        Recipe repeatedIngr \u003d new RecipeBuilder(base)","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1, TypicalBaseIngredients.INGR1))","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        Recipe multipleIngr \u003d new RecipeBuilder(base)","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1, TypicalBaseIngredients.INGR2))","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand allPrefPresentCommand \u003d new AddRecipeCommand(allPrefPresent);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand multipleIngrCommand \u003d new AddRecipeCommand(multipleIngr);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand repeatedIngrCommand \u003d new AddRecipeCommand(repeatedIngr);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand multipleStepsCommand \u003d new AddRecipeCommand(multipleSteps);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"        AddRecipeCommand missingDescCommand \u003d new AddRecipeCommand(missingDesc);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testParser.parseCommand(VALID_ADD_COMMAND_ALL_PREFIX_PRESENT), allPrefPresentCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testParser.parseCommand(VALID_ADD_COMMAND_MISSING_DESCRIPTION), missingDescCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testParser.parseCommand(VALID_ADD_COMMAND_MULTIPLE_INGREDIENTS), multipleIngrCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testParser.parseCommand(VALID_ADD_COMMAND_MULTIPLE_STEPS), multipleStepsCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"            assertEquals(testParser.parseCommand(VALID_ADD_COMMAND_REPEATED_INGREDIENTS), repeatedIngrCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_deleteRecipeCommandInvalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DEL_COMMAND_WRONG_FORMAT));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_deleteRecipeNoKeywordSpecified_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DEL_COMMAND_NO_KEYWORD));","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_deleteRecipeWrongKeywordSpecified_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_DEL_COMMAND_WRONG_KEYWORD));","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_deleteRecipeValidCommand_returnsRecipeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"        DeleteRecipeCommand expected \u003d new DeleteRecipeCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"            RecipeCommand result \u003d testParser.parseCommand(VALID_DEL_COMMAND);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"            assertTrue(result.equals(expected));","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_findRecipeEmptyKeyword_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_FIND_COMMAND_EMPTY_KEYWORD));","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_FIND_COMMAND_WHITESPACE_KEYWORD));","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_findRecipeInvalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_FIND_COMMAND_WRONG_FORMAT));","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_findRecipeValidCommand_returnsRecipeCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"alissayarmantho"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"chicken\", \"burger\");","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"alissayarmantho"},"content":"        FindRecipeCommand expectedCommand \u003d new FindRecipeCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"alissayarmantho"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"alissayarmantho"},"content":"            assertEquals(expectedCommand, testParser.parseCommand(VALID_FIND_COMMAND));","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"alissayarmantho"},"content":"            assertEquals(expectedCommand, testParser.parseCommand(VALID_FIND_COMMAND_WHITESPACES));","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"alissayarmantho"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"alissayarmantho"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_listRecipeInvalidCommand_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_LIST_COMMAND));","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"alissayarmantho"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_LIST_TYPE_COMMAND));","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"alissayarmantho"},"content":"    public void parse_listRecipeValidCommand_returnsRecipeCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"alissayarmantho"},"content":"        ListRecipeCommand expectedCommand \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"alissayarmantho"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"alissayarmantho"},"content":"            RecipeCommand result \u003d testParser.parseCommand(VALID_LIST_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"alissayarmantho"},"content":"            assertEquals(expectedCommand, result);","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"alissayarmantho"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"alissayarmantho"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"alissayarmantho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"    public void parse_editRecipeInvalidCommand_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_EDIT_COMMAND));","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"        assertThrows(ParseException.class, () -\u003e testParser.parseCommand(INVALID_EDIT_TYPE_COMMAND));","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"    public void parse_editRecipeValidCommand_returnsRecipeCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"        EditRecipeDescriptor expectedDescriptor \u003d new EditRecipeDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"                .withName(\"new Test\")","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"pattan9955"},"content":"                .withDescription(\"new optional description\")","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"                .withIngredients(\"new ingr1 100mg\", \"new ingr2 200mg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"                .withSteps(\"new step 1\", \"new step 2\")","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"        EditRecipeCommand expectedCommand \u003d new EditRecipeCommand(Index.fromOneBased(1), expectedDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"            RecipeCommand result \u003d testParser.parseCommand(VALID_EDIT_COMMAND_ALL_FIELDS_PRESENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"            assertEquals(result, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"            Assertions.fail(\"ParseException thrown!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alissayarmantho":63,"pattan9955":119,"rootkie":4,"NayLin-H99":7}},{"path":"src/test/java/fridgy/logic/parser/recipe/ViewRecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.logic.parser.recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.recipe.ViewRecipeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"public class ViewRecipeCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"    private ViewRecipeCommandParser parser \u003d new ViewRecipeCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    public void parse_wrongOrEmptyArg_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"        RecipeCommandParserTestUtil.assertParseFailure(parser, \"ooga\",","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"NayLin-H99":21}},{"path":"src/test/java/fridgy/model/InventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BASIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_TAG_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.ALMOND;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.CHICKEN;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.FLOUR;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.base.Database;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.exceptions.DuplicateIngredientException;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"public class InventoryTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"    private final Inventory ingrInventory \u003d new Inventory();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"    private List\u003cIngredient\u003e inventoryIngrList \u003d Arrays.asList(CHICKEN, FLOUR, APPLE, ALMOND);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    public void constructor() {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(Collections.emptyList(), ingrInventory.getList());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ingrInventory.resetDatabase(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public void resetData_withValidReadOnlyDatabase_replacesData() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        Inventory newData \u003d TypicalIngredients.getTypicalInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.resetDatabase(newData);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(newData, ingrInventory);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    public void resetData_withDuplicateIngredients_throwsDuplicateIngredientException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        // Two ingredients with the same identity fields","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE)","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"                .withDescription(VALID_DESCRIPTION_BASIL).withTags(VALID_TAG_VEGETABLE)","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"                .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        List\u003cIngredient\u003e newIngredients \u003d Arrays.asList(TypicalIngredients.APPLE, editedAlmond);","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        InventoryStub newData \u003d new InventoryStub(newIngredients);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DuplicateIngredientException.class, () -\u003e ingrInventory.resetDatabase(newData));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ingrInventory.has(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_ingredientNotInInventory_returnsFalse() {","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ingrInventory.has(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_ingredientInInventory_returnsTrue() {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.add(TypicalIngredients.APPLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ingrInventory.has(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_ingredientWithSameIdentityFieldsInInventory_returnsTrue() {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.add(TypicalIngredients.APPLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE)","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"                .withDescription(VALID_DESCRIPTION_BASIL).withTags(VALID_TAG_VEGETABLE)","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"                .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ingrInventory.has(editedAlmond));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    public void getIngredientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e ingrInventory.getList().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"     * A stub ReadOnlyDatabase whose ingredients list can violate interface constraints.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"    private static class InventoryStub extends Database\u003cIngredient\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        private final ObservableList\u003cIngredient\u003e ingredients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"        InventoryStub(Collection\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"            this.ingredients.setAll(ingredients);","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"        public ObservableList\u003cIngredient\u003e getList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"rebeccacxy"},"content":"            return ingredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Testing Quantity Deduction \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"    public void deductIngredients_matchingInventoryIngr_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.setItems(inventoryIngrList);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e friedChickenIngr \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"chicken\"), CHICKEN.getQuantity()));","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"flour\"), FLOUR.getQuantity()));","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ingrInventory.deductIngredients(friedChickenIngr));","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"NayLin-H99"},"content":"        // chicken and flour should be used up and removed, only apple and almond will be left","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(ALMOND.getQuantity(), ingrInventory.getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(APPLE.getQuantity(), ingrInventory.getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"NayLin-H99"},"content":"    public void deductIngredients_differentCaseNameofIngr_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.setItems(inventoryIngrList);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e friedChickenIngr \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"NayLin-H99"},"content":"        // names are case-sensitive","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"cHiCKen\"), new Quantity(\"500g\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"FlOuR\"), new Quantity(\"500g\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ingrInventory.deductIngredients(friedChickenIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"NayLin-H99"},"content":"        // chicken and flour should be used up and removed, only apple and almond will be left","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(ALMOND.getQuantity(), ingrInventory.getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(APPLE.getQuantity(), ingrInventory.getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), ingrInventory.getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), ingrInventory.getList().get(3).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"NayLin-H99"},"content":"    public void deductIngredients_excessInventoryIngr_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.setItems(inventoryIngrList);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e friedChickenIngr \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"chicken\"), new Quantity(\"20g\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"flour\"), new Quantity(\"20g\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ingrInventory.deductIngredients(friedChickenIngr));","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"NayLin-H99"},"content":"        // almond, apple, chicken and flour should be left","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(ALMOND.getQuantity(), ingrInventory.getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(APPLE.getQuantity(), ingrInventory.getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"NayLin-H99"},"content":"        // chicken should be left with 2kg - 20g \u003d 1980g","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"NayLin-H99"},"content":"        // flour should be left with 500g - 20g \u003d 480g","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(new Quantity(\"1980 g\"), ingrInventory.getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(new Quantity(\"480 g\"), ingrInventory.getList().get(3).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"NayLin-H99"},"content":"    public void deductIngredients_insufficientQuantityofIngr_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.setItems(inventoryIngrList);","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e friedChickenIngr \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"chicken\"), new Quantity(\"300kg\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"NayLin-H99"},"content":"        friedChickenIngr.add(new BaseIngredient(new Name(\"flour\"), new Quantity(\"300kg\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ingrInventory.deductIngredients(friedChickenIngr));","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"NayLin-H99"},"content":"        // nothing should be deducted, since there is insufficient quantities in inventory","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(ALMOND.getQuantity(), ingrInventory.getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(APPLE.getQuantity(), ingrInventory.getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), ingrInventory.getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), ingrInventory.getList().get(3).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"NayLin-H99"},"content":"    public void deductIngredients_expiredIngr_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"NayLin-H99"},"content":"        ingrInventory.setItems(inventoryIngrList);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cBaseIngredient\u003e fruitAndNutsIngr \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"NayLin-H99"},"content":"        fruitAndNutsIngr.add(new BaseIngredient(new Name(\"apple\"), new Quantity(\"1\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"NayLin-H99"},"content":"        fruitAndNutsIngr.add(new BaseIngredient(new Name(\"almond\"), new Quantity(\"1\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ingrInventory.deductIngredients(fruitAndNutsIngr));","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"NayLin-H99"},"content":"        // deductIngredients does not allow deduction of expired ingredients, so nothing should be deducted","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(ALMOND.getQuantity(), ingrInventory.getList().get(0).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(APPLE.getQuantity(), ingrInventory.getList().get(1).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(CHICKEN.getQuantity(), ingrInventory.getList().get(2).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(FLOUR.getQuantity(), ingrInventory.getList().get(3).getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":81,"rootkie":3,"NayLin-H99":101}},{"path":"src/test/java/fridgy/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.model.RecipeModel.PREDICATE_SHOW_ALL_RECIPES;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.MAGGIE;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.IngredientDefaultComparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.InventoryBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.RecipeBookBuilder;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(new Inventory(), new Inventory(modelManager.getInventory()));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        assertEquals(new RecipeBook(), new RecipeBook(modelManager.getRecipeBook()));","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        userPrefs.setRecipeBookFilePath(Paths.get(\"recipe/book/file/path\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        userPrefs.setRecipeBookFilePath(Paths.get(\"new/book/file/path\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dAddress Book Section\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setInventoryFilePath(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"    public void setInventoryFilePath_validPath_setsInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        modelManager.setInventoryFilePath(path);","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(path, modelManager.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.has((Ingredient) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_ingredientNotInInventory_returnsFalse() {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.has(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"    public void hasIngredient_ingredientInInventory_returnsTrue() {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        modelManager.add(TypicalIngredients.APPLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"        assertTrue(modelManager.has(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"    public void getFilteredIngredientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"                modelManager.getFilteredIngredientList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dRecipe Book Section\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"    public void setRecipeBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setRecipeBookFilePath(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"rootkie"},"content":"    public void setRecipeBookFilePath_validPath_setsRecipeBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"rootkie"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"rootkie"},"content":"        modelManager.setRecipeBookFilePath(path);","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"rootkie"},"content":"        assertEquals(path, modelManager.getRecipeBookFilePath());","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"rootkie"},"content":"    public void hasRecipe_nullRecipe_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.has((Recipe) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"rootkie"},"content":"    public void hasRecipe_ingredientNotInRecipeBook_returnsFalse() {","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.has(BURGER));","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"rootkie"},"content":"    public void hasRecipe_ingredientInRecipeBook_returnsTrue() {","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"rootkie"},"content":"        modelManager.add(BURGER);","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"rootkie"},"content":"        assertTrue(modelManager.has(BURGER));","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"rootkie"},"content":"    public void getFilteredRecipeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"rootkie"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredRecipeList().remove(0));","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"NayLin-H99"},"content":"        Inventory addressBook \u003d new InventoryBuilder().withIngredient(TypicalIngredients.APPLE)","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"NayLin-H99"},"content":"                .withIngredient(TypicalIngredients.BANANA).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"rebeccacxy"},"content":"        Inventory differentInventory \u003d new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"rootkie"},"content":"        RecipeBook recipeBook \u003d new RecipeBookBuilder().withRecipe(BURGER).withRecipe(MAGGIE).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"rootkie"},"content":"        RecipeBook differentRecipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"rootkie"},"content":"        modelManager \u003d new ModelManager(addressBook, recipeBook, userPrefs);","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"rootkie"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, recipeBook, userPrefs);","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"rebeccacxy"},"content":"        // sorts object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"rebeccacxy"},"content":"        modelManager.sortIngredient(new IngredientDefaultComparator());","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInventory, recipeBook, userPrefs)));","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"rootkie"},"content":"        // different recipeBook -\u003e return false","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentRecipeBook, userPrefs)));","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"rebeccacxy"},"content":"        String[] keywords \u003d TypicalIngredients.APPLE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-04"},{"lineNumber":181,"author":{"gitId":"rebeccacxy"},"content":"        modelManager.updateFilteredIngredientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, recipeBook, userPrefs)));","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":185,"author":{"gitId":"rebeccacxy"},"content":"        modelManager.updateFilteredIngredientList(Model.PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"rootkie"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"rootkie"},"content":"        modelManager.updateFilteredRecipeList(x -\u003e x.getName().equals(BURGER.getName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, recipeBook, userPrefs)));","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"rootkie"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"rootkie"},"content":"        modelManager.updateFilteredRecipeList(PREDICATE_SHOW_ALL_RECIPES);","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"rebeccacxy"},"content":"        differentUserPrefs.setInventoryFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"rootkie"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, recipeBook, differentUserPrefs)));","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"rebeccacxy":32,"rootkie":70,"NayLin-H99":8,"-":90}},{"path":"src/test/java/fridgy/model/QuantityCalcTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.util.QuantityCalc;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"public class QuantityCalcTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"    public void convertToStandardUnits() {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"        // converting differently prefixed grams to grams","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"        Assertions.assertEquals(\"69000.000 g\", QuantityCalc.convertToStandardUnits(\"69 kg\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"127.069 g\", QuantityCalc.convertToStandardUnits(\"127069mg\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"        // converting differently prefixed litres to litres","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"69000.000 l\", QuantityCalc.convertToStandardUnits(\"69 kl\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"0.069 l\", QuantityCalc.convertToStandardUnits(\"69 ml\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"        // no units should just return","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"126\", QuantityCalc.convertToStandardUnits(\"126\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"126.29\", QuantityCalc.convertToStandardUnits(\"126.29\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"NayLin-H99":26}},{"path":"src/test/java/fridgy/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setInventoryFilePath(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"rebeccacxy":5,"NayLin-H99":1,"-":15}},{"path":"src/test/java/fridgy/model/ingredient/BaseIngredientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_BASIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalBaseIngredients;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"public class BaseIngredientTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    public void isSameIngredient() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.isSameIngredient(TypicalBaseIngredients.APPLE));","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.isSame(TypicalBaseIngredients.APPLE));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.isSameIngredient(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient editedAlmond \u003d new IngredientBuilder(TypicalBaseIngredients.APPLE)","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"                .withQuantity(VALID_QUANTITY_BASIL).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.isSameIngredient(editedAlmond));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalBaseIngredients.APPLE)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"                .withName(VALID_NAME_BASIL).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.isSameIngredient(editedAlmond));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient editedBasil \u003d new IngredientBuilder(TypicalBaseIngredients.BASIL)","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"                .withName(VALID_NAME_BASIL.toLowerCase()).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.BASIL.isSameIngredient(editedBasil));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BASIL + \" \";","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        editedBasil \u003d new IngredientBuilder(TypicalBaseIngredients.BASIL)","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"                .withName(nameWithTrailingSpaces).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.BASIL.isSameIngredient(editedBasil));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient almondCopy \u003d new IngredientBuilder(TypicalBaseIngredients.APPLE).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.equals(almondCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.toString().equals(almondCopy.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(TypicalBaseIngredients.APPLE.equals(TypicalBaseIngredients.APPLE));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.equals(5));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        // different base ingredient -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.equals(TypicalBaseIngredients.BASIL));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient editedAlmond \u003d new IngredientBuilder(TypicalBaseIngredients.APPLE)","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"                .withName(VALID_NAME_BASIL).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalBaseIngredients.APPLE)","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"                .withQuantity(VALID_QUANTITY_BASIL).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(TypicalBaseIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient ingredient \u003d new BaseIngredient(new Name(\"A\"), new Quantity(\"90\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient ingredientSame \u003d new BaseIngredient(new Name(\"A\"), new Quantity(\"90\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        BaseIngredient ingredientDiff \u003d new BaseIngredient(new Name(\"B\"), new Quantity(\"45\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(ingredient.hashCode(), ingredient.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(ingredient.hashCode(), ingredientSame.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        assertNotEquals(ingredient.hashCode(), ingredientDiff.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"    public void getQuantityDiffTest() {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyMassUnit \u003d new Quantity(\"0.009kg\"); // should be 9g","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyLiquidUnit \u003d new Quantity(\"9l\"); // 9l","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        Quantity noUnit \u003d new Quantity(\"9\"); // 9","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient massIngr \u003d new BaseIngredient(new Name(\"A\"), qtyMassUnit);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient liquidIngr \u003d new BaseIngredient(new Name(\"B\"), qtyLiquidUnit);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient noUnitIngr \u003d new BaseIngredient(new Name(\"C\"), noUnit);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, massIngr.getQuantityDiff(massIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, liquidIngr.getQuantityDiff(liquidIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, noUnitIngr.getQuantityDiff(noUnitIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"    public void isComparableTest() {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient noUnitIngr \u003d new BaseIngredient(new Name(\"A\"), new Quantity(\"90\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient noUnitIngrSameName \u003d new BaseIngredient(new Name(\"A\"), new Quantity(\"88\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient massUnitIngr \u003d new BaseIngredient(new Name(\"B\"), new Quantity(\"42g\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient massUnitIngrSameName \u003d new BaseIngredient(new Name(\"B\"), new Quantity(\"69kg\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient liquidUnitIngr \u003d new BaseIngredient(new Name(\"C\"), new Quantity(\"45l\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"        BaseIngredient liquidUnitIngrSameName \u003d new BaseIngredient(new Name(\"C\"), new Quantity(\"45ml\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        // No units","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(noUnitIngr.isComparable(noUnitIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(noUnitIngr.isComparable(noUnitIngrSameName));","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(massUnitIngr.isComparable(massUnitIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(massUnitIngr.isComparable(massUnitIngrSameName));","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(liquidUnitIngr.isComparable(liquidUnitIngr));","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(liquidUnitIngr.isComparable(liquidUnitIngrSameName));","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rebeccacxy":71,"NayLin-H99":50}},{"path":"src/test/java/fridgy/model/ingredient/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Description(Optional.of(invalidDescription)));","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        // null description","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Description.isValidDescription(Optional.empty()));","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        // invalid description","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Description.isValidDescription(Optional.of(\"\"))); // empty string","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Description.isValidDescription(Optional.of(\"ø∂çß\"))); // non-ascii character","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        // valid descriptions","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Description.isValidDescription(Optional.of(\" \"))); // spaces only, trimmed to empty string","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Description.isValidDescription(Optional.of(\"From NTUC supermarket\")));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Description.isValidDescription(Optional.of(\"-\"))); // one character","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(Description.isValidDescription(","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"                Optional.of(\"Nestle dark choco bar with 90 percent chocolate\"))); // long description","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        Description desc \u003d new Description(Optional.of(\"A\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        Description descSame \u003d new Description(Optional.of(\"A\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        Description descDiff \u003d new Description(Optional.of(\"B\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(desc.hashCode(), desc.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(desc.hashCode(), descSame.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        assertNotEquals(desc.hashCode(), descDiff.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rebeccacxy":33,"NayLin-H99":4,"-":17}},{"path":"src/test/java/fridgy/model/ingredient/ExpiryDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"public class ExpiryDateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new ExpiryDate(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new ExpiryDate(invalidDate));","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    public void isValidExpiryDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"        // null expiry date","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ExpiryDate.isValidExpiry(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        // invalid expiry date","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\"^.][\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\"24/10/2021\")); // Wrong format, using \"/\" instead of \"-\"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\"99-05-2021\")); // excessive number of days","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(ExpiryDate.isValidExpiry(\"05-99-2021\")); // excessive number of months","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        // valid expiry date","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ExpiryDate.isValidExpiry(\"24-10-2021\")); // correct date format","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(ExpiryDate.isValidExpiry(\"25-10-2090\")); // numbers only","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        ExpiryDate expDate \u003d new ExpiryDate(\"24-10-2021\");","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"        ExpiryDate expDateSame \u003d new ExpiryDate(\"24-10-2021\");","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        ExpiryDate expDateDiff \u003d new ExpiryDate(\"26-10-2021\");","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(expDate.hashCode(), expDate.hashCode());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(expDateSame.hashCode(), expDate.hashCode());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(expDate.hashCode(), expDateDiff.hashCode());","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"    public void expiredTest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(new ExpiryDate(\"24-10-1979\").isExpired()); // expired","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"        assertFalse(new ExpiryDate(\"25-10-2090\").isExpired()); // not expired","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NayLin-H99":60}},{"path":"src/test/java/fridgy/model/ingredient/ExpiryStatusUpdaterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NayLin-H99"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"public class ExpiryStatusUpdaterTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"    public void updateExpiryTags_updateCorrectly() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"        // by default, it is expired","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient expiredIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cTag\u003e setWithDefaultExpired \u003d Set.of(Tag.EXPIRED);","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(setWithDefaultExpired, ExpiryStatusUpdater.updateExpiryTags(expiredIngredient).getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"NayLin-H99"},"content":"        // ingredient expiring today","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"NayLin-H99"},"content":"        String currentDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient expiringIngredient \u003d new IngredientBuilder().withExpiryDate(currentDate).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cTag\u003e setWithExpiring \u003d Set.of(Tag.EXPIRING);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(setWithExpiring, ExpiryStatusUpdater.updateExpiryTags(expiringIngredient).getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"        // ingredient expiring long in the future","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"        Period decade \u003d Period.of(10, 0, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"        String newDate \u003d LocalDate.now().plus(decade).format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient freshIngredient \u003d new IngredientBuilder().withExpiryDate(newDate).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"        Set\u003cTag\u003e emptyTagSet \u003d Set.of();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(emptyTagSet, ExpiryStatusUpdater.updateExpiryTags(freshIngredient).getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"NayLin-H99":37}},{"path":"src/test/java/fridgy/model/ingredient/IngredientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_TAG_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e ingredient.getTags().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    public void isSameIngredient() {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertTrue(TypicalIngredients.APPLE.isSameIngredient(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.isSameIngredient(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE)","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"                .withQuantity(VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"                .withDescription(VALID_DESCRIPTION_BASIL).withTags(VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertTrue(TypicalIngredients.APPLE.isSameIngredient(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE).withName(VALID_NAME_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.isSameIngredient(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        Ingredient editedBasil \u003d new IngredientBuilder(TypicalIngredients.BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"                .withName(VALID_NAME_BASIL.toLowerCase()).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.BASIL.isSameIngredient(editedBasil));","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BASIL + \" \";","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        editedBasil \u003d new IngredientBuilder(TypicalIngredients.BASIL).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.BASIL.isSameIngredient(editedBasil));","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    public void equals() {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient almondCopy \u003d new IngredientBuilder(TypicalIngredients.APPLE).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertTrue(TypicalIngredients.APPLE.equals(almondCopy));","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertTrue(TypicalIngredients.APPLE.equals(TypicalIngredients.APPLE));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(5));","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(TypicalIngredients.BASIL));","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE).withName(VALID_NAME_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE).withQuantity(VALID_QUANTITY_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE).withDescription(VALID_DESCRIPTION_BASIL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"        editedAlmond \u003d new IngredientBuilder(TypicalIngredients.APPLE).withTags(VALID_TAG_VEGETABLE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        Assertions.assertFalse(TypicalIngredients.APPLE.equals(editedAlmond));","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredient \u003d TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredientSame \u003d TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"        Ingredient ingredientDiff \u003d TypicalIngredients.BASIL;","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(ingredient.hashCode(), ingredient.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(ingredient.hashCode(), ingredientSame.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"        assertNotEquals(ingredient.hashCode(), ingredientDiff.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":93,"NayLin-H99":6}},{"path":"src/test/java/fridgy/model/ingredient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Almond\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(predicate.test(new IngredientBuilder().withName(\"Almond Basil\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Almond\", \"Basil\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(predicate.test(new IngredientBuilder().withName(\"Almond Basil\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Basil\", \"Carrot\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(predicate.test(new IngredientBuilder().withName(\"Almond Carrot\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLMond\", \"bASIl\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(predicate.test(new IngredientBuilder().withName(\"Almond Basil\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(predicate.test(new IngredientBuilder().withName(\"Almond\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carrot\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(predicate.test(new IngredientBuilder().withName(\"Almond Basil\").build()));","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        // Keywords match quantity, email and address, but does not match name","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(predicate.test(new IngredientBuilder().withName(\"Almond\").withQuantity(\"12345\")","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"                .withDescription(\"Main Street\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rebeccacxy":14,"NayLin-H99":5,"-":57}},{"path":"src/test/java/fridgy/model/ingredient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Name.isValidName(\"pear*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Name.isValidName(\"pear compote\")); // alphabets only","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Name.isValidName(\"pear the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Name.isValidName(\"Chocolate Bar\")); // with capital letters","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Name.isValidName(\"Nestle dark choco bar with 90 percent chocolate\")); // long names","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        Name name \u003d new Name(\"A\");","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        Name nameSame \u003d new Name(\"A\");","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        Name nameDiff \u003d new Name(\"B\");","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(name.hashCode(), name.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(name.hashCode(), nameSame.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        assertNotEquals(name.hashCode(), nameDiff.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rebeccacxy":22,"NayLin-H99":2,"-":30}},{"path":"src/test/java/fridgy/model/ingredient/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"public class QuantityTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Quantity(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"        String invalidQuantity \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(invalidQuantity));","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    public void isValidQuantity() {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        // null quantity number","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Quantity.isValidQuantity(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        // invalid quantity numbers","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"\")); // empty string","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\" \")); // spaces only","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"0\")); // zero number","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"-23423\")); // negative number","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"0000000\")); // string of zeros","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"quantity\")); // non-numeric","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(Quantity.isValidQuantity(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        // valid quantity numbers","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Quantity.isValidQuantity(\"9\")); // exactly 1 number","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Quantity.isValidQuantity(\"9312\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Quantity.isValidQuantity(\"0009312\")); // leading zeros","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Quantity.isValidQuantity(\"124293899\")); // 9 quantity numbers","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"        assertTrue(Quantity.isValidQuantity(\"1.2979\")); // fractions","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        Quantity qty \u003d new Quantity(\"90kg\");","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        Quantity qtySame \u003d new Quantity(\"90kg\");","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        Quantity qtyDiff \u003d new Quantity(\"0.2g\");","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(qty.hashCode(), qty.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(qty.hashCode(), qtySame.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        assertNotEquals(qty.hashCode(), qtyDiff.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"    public void getUnitTest() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyMassUnit1 \u003d new Quantity(\"90kg\");","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyMassUnit2 \u003d new Quantity(\"9kg\");","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyLiquidUnit1 \u003d new Quantity(\"0.2l\");","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyLiquidUnit2 \u003d new Quantity(\"2ml\");","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"NayLin-H99"},"content":"        Quantity noUnit1 \u003d new Quantity(\"5\");","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"NayLin-H99"},"content":"        Quantity noUnit2 \u003d new Quantity(\"10\");","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"        // All mass units should be standardised to grams","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(qtyMassUnit1.getUnits(), qtyMassUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(qtyMassUnit1.getUnits(), qtyMassUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"g\", qtyMassUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"g\", qtyMassUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"        // Mass and liquid units should differ","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit1.getUnits(), qtyLiquidUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit1.getUnits(), qtyLiquidUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit2.getUnits(), qtyLiquidUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"NayLin-H99"},"content":"        // Mass and no units should differ","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit1.getUnits(), noUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit1.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyMassUnit2.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"NayLin-H99"},"content":"        // All liquid units should be standardised to litres","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(qtyLiquidUnit1.getUnits(), qtyLiquidUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(qtyLiquidUnit1.getUnits(), qtyLiquidUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(qtyLiquidUnit2.getUnits(), qtyLiquidUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"l\", qtyLiquidUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"l\", qtyLiquidUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"NayLin-H99"},"content":"        // All no units should have empty unit string","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(noUnit1.getUnits(), noUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(noUnit1.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(noUnit2.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"\", noUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(\"\", noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"NayLin-H99"},"content":"        // Liquid and no units should differ","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyLiquidUnit1.getUnits(), noUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyLiquidUnit2.getUnits(), noUnit1.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyLiquidUnit1.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"        assertNotEquals(qtyLiquidUnit2.getUnits(), noUnit2.getUnits());","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"    public void getValueTest() {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyMassUnit \u003d new Quantity(\"9kg\"); // 9000g","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyLiquidUnit \u003d new Quantity(\"9l\"); // 9l","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"        Quantity noUnit1 \u003d new Quantity(\"9\"); // 9","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(9000, qtyMassUnit.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(9, qtyLiquidUnit.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(9, noUnit1.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"NayLin-H99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"    public void compareQtyWithSameUnitsTest() {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyMassUnit \u003d new Quantity(\"0.009kg\"); // should be 9g","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"NayLin-H99"},"content":"        Quantity qtyLiquidUnit \u003d new Quantity(\"9l\"); // 9l","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"NayLin-H99"},"content":"        Quantity noUnit \u003d new Quantity(\"9\"); // 9","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, qtyMassUnit.compareQtyWithSameUnits(qtyMassUnit));","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, qtyLiquidUnit.compareQtyWithSameUnits(qtyLiquidUnit));","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"NayLin-H99"},"content":"        assertEquals(0, noUnit.compareQtyWithSameUnits(noUnit));","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rebeccacxy":38,"NayLin-H99":67,"-":17}},{"path":"src/test/java/fridgy/model/recipe/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"alissayarmantho"},"content":"        // different recipe -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"alissayarmantho"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"alissayarmantho"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"alissayarmantho"},"content":"        fridgy.model.recipe.NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Burger\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(predicate.test(new RecipeBuilder().withName(\"Chicken Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"alissayarmantho"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"alissayarmantho"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Chicken\", \"Burger\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(predicate.test(new RecipeBuilder().withName(\"Chicken Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"alissayarmantho"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"alissayarmantho"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Burger\", \"Mushroom\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(predicate.test(new RecipeBuilder().withName(\"Chicken Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"burGer\", \"cHicKen\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"        assertTrue(predicate.test(new RecipeBuilder().withName(\"Chicken Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"alissayarmantho"},"content":"                new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(predicate.test(new RecipeBuilder().withName(\"Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"alissayarmantho"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"alissayarmantho"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Fries\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(predicate.test(new RecipeBuilder().withName(\"Chicken Burger\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"alissayarmantho"},"content":"        // Keywords match ingredients, steps and description, but does not match name","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"alissayarmantho"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Mushroom\", \"Chicken\", \"Cheese\", \"Toast\", \"the\",","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"alissayarmantho"},"content":"                \"bun\", \"Cook\", \"Good\", \"Stuff\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"alissayarmantho"},"content":"        assertFalse(predicate.test(new RecipeBuilder().withName(\"Burger\")","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"                .withIngredients(Arrays.asList(","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"                    new IngredientBuilder().withName(\"Mushroom\").withQuantity(\"15\").buildBaseIngredient(),","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"                    new IngredientBuilder().withName(\"Chicken\").withQuantity(\"300g\").buildBaseIngredient(),","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"                    new IngredientBuilder().withName(\"Cheese\").withQuantity(\"50g\").buildBaseIngredient()","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"                ))","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"alissayarmantho"},"content":"                .withSteps(Arrays.asList(\"Toast the bun\", \"Cook the chicken\"))","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"alissayarmantho"},"content":"                .withDescription(\"Good stuff\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"alissayarmantho":78,"rootkie":6}},{"path":"src/test/java/fridgy/model/recipe/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"public class NameTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new fridgy.model.recipe.Name(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new fridgy.model.recipe.Name(invalidName));","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    public void isValidName() {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        // null name","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e fridgy.model.recipe.Name.isValidName(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        // invalid name","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        assertFalse(fridgy.model.recipe.Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        assertFalse(fridgy.model.recipe.Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        assertFalse(fridgy.model.recipe.Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(fridgy.model.recipe.Name.isValidName(\"pear*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        // valid name","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fridgy.model.recipe.Name.isValidName(\"pear compote\")); // alphabets only","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        assertTrue(fridgy.model.recipe.Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fridgy.model.recipe.Name.isValidName(\"pear the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(fridgy.model.recipe.Name.isValidName(\"Chocolate Bar\")); // with capital letters","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        assertTrue(Name.isValidName(\"Nestle dark choco bar with 90 percent chocolate\")); // long names","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rebeccacxy":5,"rootkie":34,"NayLin-H99":1}},{"path":"src/test/java/fridgy/model/recipe/RecipeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.RecipeBuilder;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.TypicalBaseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"class RecipeTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    private static Recipe burger;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    private static Recipe maggie;","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cBaseIngredient\u003e BURGER_INGREDIENTS \u003d Arrays.asList(","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        TypicalBaseIngredients.APPLE,","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        TypicalBaseIngredients.BANANA,","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        TypicalBaseIngredients.ALMOND","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    );","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cString\u003e BURGER_STEPS \u003d Arrays.asList(\"Put patty in bread\", \"Add sauce\");","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    private static final String BURGER_NAME \u003d \"Burger\";","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    private static final String BURGER_DESCRIPTION \u003d \"Healthier choice\";","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cBaseIngredient\u003e MAGGIE_INGREDIENTS \u003d Arrays.asList(TypicalBaseIngredients.INGR1);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cString\u003e MAGGIE_STEPS \u003d Arrays.asList(\"Boil water\", \"add maggie\");","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    private static final String MAGGIE_NAME \u003d \"Maggie\";","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    private static final String MAGGIE_DESCRIPTION \u003d \"Easy\";","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    @BeforeAll","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    public static void setup() {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        burger \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"                .withName(BURGER_NAME)","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"                .withIngredients(BURGER_INGREDIENTS)","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"                .withSteps(BURGER_STEPS)","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"                .withDescription(BURGER_DESCRIPTION)","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"                .build();","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        maggie \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"                .withName(MAGGIE_NAME)","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"                .withIngredients(MAGGIE_INGREDIENTS)","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"                .withSteps(MAGGIE_STEPS)","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"                .withDescription(MAGGIE_DESCRIPTION)","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"                .build();","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    public void isSameRecipe() {","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"        assertTrue(burger.isSameRecipe(burger));","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        assertFalse(burger.isSameRecipe(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        Recipe editedBurger \u003d new RecipeBuilder(burger)","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"                .withName(burger.getName().toString())","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"                .withSteps(MAGGIE_STEPS)","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"                .withIngredients(MAGGIE_INGREDIENTS)","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"                .withDescription(MAGGIE_DESCRIPTION)","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"                .build();","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        assertTrue(burger.isSameRecipe(editedBurger));","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"        editedBurger \u003d new RecipeBuilder(burger).withName(MAGGIE_NAME).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        assertFalse(burger.isSameRecipe(editedBurger));","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        Recipe editedMaggie \u003d new RecipeBuilder(maggie).withName(BURGER_NAME).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        assertFalse(maggie.isSameRecipe(editedMaggie));","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"        String nameWithTrailingSpaces \u003d MAGGIE_NAME + \" \";","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        editedMaggie \u003d new RecipeBuilder(maggie).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"        assertFalse(maggie.isSameRecipe(editedMaggie));","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"    public void equals() {","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"        Recipe burgerCopy \u003d new RecipeBuilder(burger).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        assertEquals(burger, burgerCopy);","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"        assertEquals(burger, burger);","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        assertNotEquals(null, burger);","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"        assertNotEquals(5, burger);","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"        assertNotEquals(burger, maggie);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"        Recipe editedBurger \u003d new RecipeBuilder(burger).withName(MAGGIE_NAME).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"        assertNotEquals(burger, editedBurger);","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"        // different ingredients -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        editedBurger \u003d new RecipeBuilder(burger).withIngredients(MAGGIE_INGREDIENTS).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"        assertFalse(burger.equals(editedBurger));","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"        // different steps -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"        editedBurger \u003d new RecipeBuilder(burger).withSteps(MAGGIE_STEPS).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"        assertFalse(burger.equals(editedBurger));","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"        // different descriptions -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"rootkie"},"content":"        editedBurger \u003d new RecipeBuilder(burger).withDescription(MAGGIE_DESCRIPTION).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"rootkie"},"content":"        assertFalse(burger.equals(editedBurger));","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rootkie":116}},{"path":"src/test/java/fridgy/model/recipe/StepTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.model.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"class StepTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Step(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        Step step \u003d new Step(\"A\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        Step stepSame \u003d new Step(\"A\");","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        Step stepDiff \u003d new Step(\"B\");","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        assertEquals(step.hashCode(), step.hashCode());","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"        assertEquals(step.hashCode(), stepSame.hashCode());","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        assertNotEquals(step.hashCode(), stepDiff.hashCode());","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rootkie":24,"NayLin-H99":1}},{"path":"src/test/java/fridgy/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.model.tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":6,"-":20}},{"path":"src/test/java/fridgy/storage/JsonAdaptedIngredientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.TypicalIngredients.BANANA;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"public class JsonAdaptedIngredientTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_QUANTITY \u003d \"+651234\";","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"˚¬˙µ\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    private static final String INVALID_TAG \u003d \"#snack\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_NAME \u003d BANANA.getName().toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_QUANTITY \u003d BANANA.getQuantity().toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    private static final String VALID_DESCRIPTION \u003d BANANA.getDescription().toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BANANA.getTags().stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"NayLin-H99"},"content":"    private static final String VALID_EXPIRY_DATE \u003d BANANA.getExpiryDate().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_validIngredientDetails_returnsIngredient() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(BANANA);","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(BANANA, ingredient.toModelType());","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"                new JsonAdaptedIngredient(INVALID_NAME, VALID_QUANTITY, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"                        VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(null, VALID_QUANTITY, VALID_DESCRIPTION,","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"                VALID_TAGS, VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedIngredient.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"                new JsonAdaptedIngredient(VALID_NAME, INVALID_QUANTITY, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"NayLin-H99"},"content":"                        VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(VALID_NAME, null,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"                VALID_DESCRIPTION, VALID_TAGS, VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedIngredient.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"                Quantity.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"NayLin-H99"},"content":"                new JsonAdaptedIngredient(VALID_NAME, VALID_QUANTITY, INVALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"NayLin-H99"},"content":"                        VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"NayLin-H99"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"NayLin-H99"},"content":"                new JsonAdaptedIngredient(VALID_NAME, VALID_QUANTITY, \"\", VALID_TAGS,","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"NayLin-H99"},"content":"                        VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"NayLin-H99"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedIngredient.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"NayLin-H99"},"content":"                Description.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"rebeccacxy"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"                new JsonAdaptedIngredient(VALID_NAME, VALID_QUANTITY, VALID_DESCRIPTION, invalidTags,","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"                        VALID_EXPIRY_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, ingredient::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":79,"NayLin-H99":28}},{"path":"src/test/java/fridgy/storage/JsonInventoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.TypicalIngredients.HOON;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.TypicalIngredients.IDA;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.testutil.TypicalIngredients.getTypicalInventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"public class JsonInventoryStorageTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonInventoryStorageTest\");","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"    @TempDir","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public Path testFolder;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    public void readInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readInventory(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003cIngredient\u003e\u003e readInventory(String filePath) throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        return new JsonInventoryStorage(Paths.get(filePath)).readInventory(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"                : null;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"        assertFalse(readInventory(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"                readInventory(\"notJsonFormatInventory.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"    public void readInventory_invalidIngredientInventory_throwDataConversionException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"                readInventory(\"invalidIngredientInventory.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"    public void readInventory_invalidAndValidIngredientInventory_throwDataConversionException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"                readInventory(\"invalidAndValidIngredientInventory.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"    public void readAndSaveInventory_allInOrder_success() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        Path filePath \u003d testFolder.resolve(\"TempInventory.json\");","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"        Inventory original \u003d getTypicalInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        JsonInventoryStorage jsonInventoryStorage \u003d new JsonInventoryStorage(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        jsonInventoryStorage.saveInventory(original, filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        ReadOnlyDatabase\u003cIngredient\u003e readBack \u003d jsonInventoryStorage.readInventory(filePath).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"        original.add(HOON);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        original.remove(APPLE);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        jsonInventoryStorage.saveInventory(original, filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        readBack \u003d jsonInventoryStorage.readInventory(filePath).get();","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        original.add(IDA);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"        jsonInventoryStorage.saveInventory(original); // file path not specified","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"        readBack \u003d jsonInventoryStorage.readInventory().get(); // file path not specified","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    public void saveInventory_nullInventory_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveInventory(null, \"SomeFile.json\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"rebeccacxy"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"    private void saveInventory(ReadOnlyDatabase\u003cIngredient\u003e addressBook, String filePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"rebeccacxy"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"rebeccacxy"},"content":"            new JsonInventoryStorage(Paths.get(filePath))","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"rebeccacxy"},"content":"                    .saveInventory(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"rebeccacxy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"rebeccacxy"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"rebeccacxy"},"content":"    public void saveInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveInventory(new Inventory(), null));","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":95,"rootkie":8,"NayLin-H99":11}},{"path":"src/test/java/fridgy/storage/JsonRecipeBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.NOODLE;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.RICE;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.getTypicalRecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"public class JsonRecipeBookStorageTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonRecipeBookStorageTest\");","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    @TempDir","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    public Path testFolder;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public void readRecipeBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e readRecipeBook(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003cRecipe\u003e\u003e readRecipeBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        return new JsonRecipeBookStorage(Paths.get(filePath)).readRecipeBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"                : null;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        assertFalse(readRecipeBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRecipeBook(\"notJsonFormatRecipeBook.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    public void readRecipeBook_invalidRecipeBook_throwDataConversionException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRecipeBook(\"invalidRecipeBook.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    public void readRecipeBook_invalidAndValidRecipeBook_throwDataConversionException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRecipeBook(\"invalidAndValidRecipeBook.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"    public void readAndSaveRecipeBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"        Path filePath \u003d testFolder.resolve(\"TempRecipeBook.json\");","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"        RecipeBook original \u003d getTypicalRecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"        JsonRecipeBookStorage jsonRecipeBookStorage \u003d new JsonRecipeBookStorage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        jsonRecipeBookStorage.saveRecipeBook(original, filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        ReadOnlyDatabase\u003cRecipe\u003e readBack \u003d jsonRecipeBookStorage.readRecipeBook(filePath).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        assertEquals(original, new RecipeBook(readBack));","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"        original.add(RICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        original.remove(BURGER);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"        jsonRecipeBookStorage.saveRecipeBook(original, filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"        readBack \u003d jsonRecipeBookStorage.readRecipeBook(filePath).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"        assertEquals(original, new RecipeBook(readBack));","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        original.add(NOODLE);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"        jsonRecipeBookStorage.saveRecipeBook(original); // file path not specified","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"        readBack \u003d jsonRecipeBookStorage.readRecipeBook().get(); // file path not specified","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        assertEquals(original, new RecipeBook(readBack));","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook_nullRecipeBook_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRecipeBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"    private void saveRecipeBook(ReadOnlyDatabase\u003cRecipe\u003e addressBook, String filePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"            new JsonRecipeBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"                    .saveRecipeBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rootkie"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rootkie"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rootkie"},"content":"    public void saveRecipeBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rootkie"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRecipeBook(new RecipeBook(), null));","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":110,"NayLin-H99":2}},{"path":"src/test/java/fridgy/storage/JsonSerializableInventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"NayLin-H99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.util.JsonUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.TypicalIngredients;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"public class JsonSerializableInventoryTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableInventoryTest\");","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    private static final Path TYPICAL_INGREDIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalIngredientsInventory.json\");","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"    private static final Path INVALID_INGREDIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidIngredientInventory.json\");","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    private static final Path DUPLICATE_INGREDIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateIngredientInventory.json\");","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_typicalIngredientsFile_success() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_INGREDIENTS_FILE,","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"        Inventory addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        Inventory typicalIngredientsInventory \u003d TypicalIngredients.getTypicalInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(addressBookFromFile, typicalIngredientsInventory);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_invalidIngredientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INGREDIENT_FILE,","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    public void toModelType_duplicateIngredients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INGREDIENT_FILE,","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableInventory.MESSAGE_DUPLICATE_INGREDIENT,","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":45,"NayLin-H99":2}},{"path":"src/test/java/fridgy/storage/JsonSerializableRecipeBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.util.JsonUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.testutil.TypicalRecipes;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"public class JsonSerializableRecipeBookTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableRecipeBookTest\");","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    private static final Path TYPICAL_RECIPES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalRecipeBook.json\");","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    private static final Path INVALID_RECIPE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidRecipeBook.json\");","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    private static final Path DUPLICATE_RECIPE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateRecipeBook.json\");","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public void toModelType_typicalFile_success() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        JsonSerializableRecipeBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_RECIPES_FILE,","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"                JsonSerializableRecipeBook.class).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        RecipeBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        RecipeBook typicalRecipeBook \u003d TypicalRecipes.getTypicalRecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        assertEquals(addressBookFromFile, typicalRecipeBook);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    public void toModelType_invalidFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        JsonSerializableRecipeBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_RECIPE_FILE,","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"                JsonSerializableRecipeBook.class).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    public void toModelType_duplicates_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        JsonSerializableRecipeBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_RECIPE_FILE,","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"                JsonSerializableRecipeBook.class).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRecipeBook.MESSAGE_DUPLICATE_RECIPE,","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":46,"NayLin-H99":1}},{"path":"src/test/java/fridgy/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"            \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"NayLin-H99"},"content":"                readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"NayLin-H99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"NayLin-H99"},"content":"                saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rebeccacxy":8,"NayLin-H99":6,"-":112}},{"path":"src/test/java/fridgy/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.testutil.TypicalIngredients.getTypicalInventory;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.GuiSettings;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.UserPrefs;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.base.ReadOnlyDatabase;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        JsonInventoryStorage addressBookStorage \u003d new JsonInventoryStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        JsonRecipeBookStorage recipeBookStorage \u003d new JsonRecipeBookStorage(getTempFilePath(\"re\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, recipeBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"         * {@link JsonInventoryStorage} class.","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonInventoryStorageTest} class.","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"        Inventory original \u003d getTypicalInventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        storageManager.saveInventory(original);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"        ReadOnlyDatabase\u003cIngredient\u003e retrieved \u003d storageManager.readInventory().get();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        assertEquals(original, new Inventory(retrieved));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    public void getInventoryFilePath() {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"        assertNotNull(storageManager.getInventoryFilePath());","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":12,"rootkie":5,"NayLin-H99":1,"-":52}},{"path":"src/test/java/fridgy/storage/recipe/JsonAdaptedRecipeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.storage.recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static fridgy.storage.recipe.JsonAdaptedRecipe.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static fridgy.testutil.TypicalRecipes.BURGER;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"NayLin-H99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"class JsonAdaptedRecipeTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    private static final String INVALID_NAME \u003d \"B@rg@r\";","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    private static final String VALID_NAME \u003d BURGER.getName().toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cJsonAdaptedIngredient\u003e VALID_INGREDIENT \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"            BURGER.getIngredients().stream().map(JsonAdaptedIngredient::new).collect(Collectors.toList());","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    private static final List\u003cJsonAdaptedStep\u003e VALID_STEP \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"            BURGER.getSteps().stream().map(JsonAdaptedStep::new).collect(Collectors.toList());","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    private static final String VALID_DESCRIPTION \u003d BURGER.getDescription().toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public void toModelType_validRecipeDetails_returnsRecipe() throws Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d new JsonAdaptedRecipe(BURGER);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        assertEquals(BURGER, recipe.toModelType());","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"                new JsonAdaptedRecipe(INVALID_NAME, VALID_INGREDIENT, VALID_STEP, VALID_DESCRIPTION);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, recipe::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"                new JsonAdaptedRecipe(null, VALID_INGREDIENT, VALID_STEP, VALID_DESCRIPTION);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"                fridgy.model.recipe.Name.class.getSimpleName());","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, recipe::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    public void toModelType_nullIngredient_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"                new JsonAdaptedRecipe(VALID_NAME, null, VALID_STEP, VALID_DESCRIPTION);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"                BaseIngredient.class.getSimpleName());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, recipe::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"    public void toModelType_nullStep_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"                new JsonAdaptedRecipe(VALID_NAME, VALID_INGREDIENT, null, VALID_DESCRIPTION);","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"                fridgy.model.recipe.Step.class.getSimpleName());","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, recipe::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"    public void toModelType_nullDescription_doesNotThrowException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"        JsonAdaptedRecipe recipe \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"                new JsonAdaptedRecipe(VALID_NAME, VALID_INGREDIENT, VALID_STEP, null);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"        assertDoesNotThrow(recipe::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":72,"NayLin-H99":2}},{"path":"src/test/java/fridgy/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"rebeccacxy":1,"-":33}},{"path":"src/test/java/fridgy/testutil/EditIngredientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.EditCommand.EditIngredientDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":" * A utility class to help with building EditIngredientDescriptor objects.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"public class EditIngredientDescriptorBuilder {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    private EditIngredientDescriptor descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder() {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"        descriptor \u003d new EditIngredientDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder(EditIngredientDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        this.descriptor \u003d new EditIngredientDescriptor(descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"     * Returns an {@code EditIngredientDescriptor} with fields containing {@code ingredient}\u0027s details","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder(Ingredient ingredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"        descriptor \u003d new EditIngredientDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setName(ingredient.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setQuantity(ingredient.getQuantity());","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setDescription(ingredient.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"NayLin-H99"},"content":"        descriptor.setExpiry(ingredient.getExpiryDate());","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setTags(ingredient.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Name} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Quantity} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Description} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setDescription(new Description(Optional.ofNullable(description)));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"     * Sets the {@code ExpiryDate} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"    public EditIngredientDescriptorBuilder withExpiry(String expiryDate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"        descriptor.setExpiry(new ExpiryDate(expiryDate));","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"NayLin-H99"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditIngredientDescriptor}","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"     * that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"    public EditIngredientDescriptor build() {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        return descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":76,"NayLin-H99":12}},{"path":"src/test/java/fridgy/testutil/EditRecipeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.commands.recipe.EditRecipeCommand.EditRecipeDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import static fridgy.logic.parser.ParserUtil.parseBaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import fridgy.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"public class EditRecipeDescriptorBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    private EditRecipeDescriptor descriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.descriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder(EditRecipeDescriptor descriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        this.descriptor \u003d new EditRecipeDescriptor(descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    /** Returns an {@code EditRecipeDescriptor} with fields containing {@code recipe}\u0027s details */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder(Recipe recipe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        descriptor \u003d new EditRecipeDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        descriptor.setName(recipe.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        descriptor.setIngredients(recipe.getIngredients());","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        descriptor.setDescription(recipe.getDescription().get());","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        descriptor.setSteps(recipe.getSteps());","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * Sets the name of the {@code EditRecipeDescriptor} that we are building to {@code String}.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"     * Sets the description of the {@code EditRecipeDescriptor} that we are building to {@code String}.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     * Sets the steps of the {@code EditRecipeDescriptor} that we are building to {@code String[]}.","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder withSteps(String... steps) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        List\u003cStep\u003e stepList \u003d Stream.of(steps).map(Step::new).collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        descriptor.setSteps(stepList);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     * Sets the ingredients of the {@code EditRecipeDescriptor} that we are building to {@code String[]}.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptorBuilder withIngredients(String... ingredients) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"        Set\u003cBaseIngredient\u003e ingredientSet \u003d Stream","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"                .of(ingredients)","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"                .map(x -\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"                    try {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"                        return !x.equals(\"\") ? parseBaseIngredient(x) : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"                    } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"                        return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                })","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        descriptor.setIngredients(ingredientSet);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    public EditRecipeDescriptor build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        return descriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"pattan9955":86}},{"path":"src/test/java/fridgy/testutil/IngredientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Description;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.ExpiryStatusUpdater;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Name;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":" * A utility class to help with building Ingredient objects.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientBuilder {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DEFAULT_NAME \u003d \"Almond Bee\";","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DEFAULT_QUANTITY \u003d \"85355255\";","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    public static final String DEFAULT_EXPIRY_DATE \u003d \"20-08-2010\";","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"NayLin-H99"},"content":"    public static final Set\u003cTag\u003e DEFAULT_TAGS \u003d Set.of(Tag.EXPIRED);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    private Name name;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    private Description description;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"    private ExpiryDate expiryDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"     * Creates a {@code IngredientBuilder} with the default details.","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder() {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"        description \u003d new Description(Optional.of(DEFAULT_DESCRIPTION));","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"NayLin-H99"},"content":"        tags \u003d DEFAULT_TAGS;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"        expiryDate \u003d new ExpiryDate(DEFAULT_EXPIRY_DATE);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"     * Initializes the IngredientBuilder with the data of {@code ingredientToCopy}.","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder(Ingredient ingredientToCopy) {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"        name \u003d ingredientToCopy.getName();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"        quantity \u003d ingredientToCopy.getQuantity();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        description \u003d ingredientToCopy.getDescription();","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"        tags \u003d new HashSet\u003c\u003e(ingredientToCopy.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"        expiryDate \u003d ingredientToCopy.getExpiryDate();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"     * Initializes the IngredientBuilder for BaseIngredient","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"     * with the data of {@code ingredientToCopy}.","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder(BaseIngredient ingredientToCopy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        name \u003d ingredientToCopy.getName();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        quantity \u003d ingredientToCopy.getQuantity();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Name} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder withName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rebeccacxy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Ingredient} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder withTags(String ... tags) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Description} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder withDescription(String description) {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"        this.description \u003d new Description(Optional.ofNullable(description));","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"     * Sets the {@code Quantity} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"    public IngredientBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"        this.quantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"NayLin-H99"},"content":"     * Sets the {@code ExpiryDate} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"NayLin-H99"},"content":"     * Do note the expiry tags will not be updated by this method.","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"NayLin-H99"},"content":"    public IngredientBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"NayLin-H99"},"content":"        this.expiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"NayLin-H99"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"NayLin-H99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"NayLin-H99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"NayLin-H99"},"content":"     * Build {@code Ingredient} with the specified parameters.","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"NayLin-H99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"NayLin-H99"},"content":"     * @return the ingredient built","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"NayLin-H99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"rebeccacxy"},"content":"    public Ingredient build() {","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"NayLin-H99"},"content":"        return ExpiryStatusUpdater.updateExpiryTags(","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"NayLin-H99"},"content":"                new Ingredient(name, quantity, description, tags, expiryDate));","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"rebeccacxy"},"content":"     * Build {@code BaseIngredient} with the specified parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"rebeccacxy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"rebeccacxy"},"content":"     * @return the base ingredient built","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"rebeccacxy"},"content":"    public BaseIngredient buildBaseIngredient() {","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"rebeccacxy"},"content":"        return new BaseIngredient(name, quantity);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":99,"NayLin-H99":27}},{"path":"src/test/java/fridgy/testutil/IngredientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.logic.commands.EditCommand.EditIngredientDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.logic.parser.CliSyntax;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":" * A utility class for Ingredient.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"public class IngredientUtil {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"     * Returns an add command string for adding the {@code ingredient}.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    public static String getAddCommand(Ingredient ingredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"        return AddCommand.COMMAND_WORD + \" \" + AddCommand.INGREDIENT_KEYWORD + \" \"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"                + (ingredient);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the part of command string for the given {@code ingredient}\u0027s details.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public static String getIngredientDetails(Ingredient ingredient) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        sb.append(CliSyntax.PREFIX_NAME + ingredient.getName().fullName + \" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        sb.append(CliSyntax.PREFIX_QUANTITY + ingredient.getQuantity().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"        sb.append(CliSyntax.PREFIX_DESCRIPTION + ingredient.getDescription().value.orElse(\"\") + \" \");","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"NayLin-H99"},"content":"        sb.append(CliSyntax.PREFIX_EXPIRY + ingredient.getExpiryDate().toString() + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"        ingredient.getTags().stream().forEach(","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rebeccacxy"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        );","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the part of command string for the given {@code EditIngredientDescriptor}\u0027s details.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"    public static String getEditIngredientDescriptorDetails(EditIngredientDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"        descriptor.getQuantity().ifPresent(quantity -\u003e sb.append(CliSyntax.PREFIX_QUANTITY).append(quantity.value)","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"        descriptor.getDescription().ifPresent(description -\u003e sb.append(CliSyntax.PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"                .append(description.value.orElse(\"\")).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"        descriptor.getExpiryDate().ifPresent(expiryDate -\u003e sb.append(CliSyntax.PREFIX_EXPIRY).append(expiryDate)","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rebeccacxy"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"rebeccacxy"},"content":"                sb.append(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rebeccacxy"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"rebeccacxy"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"rebeccacxy"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":53,"NayLin-H99":10}},{"path":"src/test/java/fridgy/testutil/InventoryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":" * A utility class to help with building Descriptionbook objects.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":" *     {@code Inventory ab \u003d new InventoryBuilder().withIngredient(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"public class InventoryBuilder {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"    private Inventory addressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"    public InventoryBuilder() {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"        addressBook \u003d new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"    public InventoryBuilder(Inventory addressBook) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"     * Adds a new {@code Ingredient} to the {@code Inventory} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"NayLin-H99"},"content":"    public InventoryBuilder withIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        addressBook.add(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public Inventory build() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"        return addressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":32,"rootkie":1,"NayLin-H99":1}},{"path":"src/test/java/fridgy/testutil/RecipeBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" *     {@code RecipeBook ab \u003d new RecipeBookBuilder().withRecipe(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class RecipeBookBuilder {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    private RecipeBook recipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    public RecipeBookBuilder() {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        recipeBook \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public RecipeBookBuilder(RecipeBook recipeBook) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        this.recipeBook \u003d recipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * Adds a new {@code Recipe} to the {@code RecipeBook} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    public RecipeBookBuilder withRecipe(Recipe recipe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        recipeBook.add(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public RecipeBook build() {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        return recipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":34}},{"path":"src/test/java/fridgy/testutil/RecipeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import fridgy.model.ingredient.Quantity;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Name;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Step;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":" * A utility class to help with building Recipe objects.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"public class RecipeBuilder {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    public static final String DEFAULT_NAME \u003d \"Burger\";","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    public static final List\u003cBaseIngredient\u003e DEFAULT_INGREDIENTS \u003d Arrays.asList(","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        new BaseIngredient(new fridgy.model.ingredient.Name(\"Ing 1\"), new Quantity(\"1kg\")),","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        new BaseIngredient(new fridgy.model.ingredient.Name(\"Ing 2\"), new Quantity(\"100ml\"))","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    );","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    public static final List\u003cString\u003e DEFAULT_STEPS \u003d Arrays.asList(\"Step 1\", \"Step 2\");","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Very Nice\";","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    private Name name;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    private Set\u003cBaseIngredient\u003e baseIngredients;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    private List\u003cStep\u003e steps;","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    private Optional\u003cString\u003e description;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     * Creates a {@code RecipeBuilder} with the default details.","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder() {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        withName(DEFAULT_NAME);","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        withIngredients(DEFAULT_INGREDIENTS);","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        withSteps(DEFAULT_STEPS);","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        withDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     * Initializes the RecipeBuilder with the data of {@code recipeToCopy}.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder(Recipe recipeToCopy) {","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"        name \u003d recipeToCopy.getName();","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        baseIngredients \u003d recipeToCopy.getIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        steps \u003d recipeToCopy.getSteps();","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        description \u003d recipeToCopy.getDescription();","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"     * Sets the {@code Name} of the {@code Recipe} that we are building.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder withName(String name) {","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"     * Sets the {@code BaseIngredient} of the {@code Recipe} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder withIngredients(List\u003cBaseIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        this.baseIngredients \u003d new HashSet\u003c\u003e(ingredients);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"     * Sets the {@code Step} of the {@code Recipe} that we are building.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder withSteps(List\u003cString\u003e steps) {","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"        this.steps \u003d steps.stream().map(x -\u003e new Step(x)).collect(Collectors.toList());","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"     * Sets the Description of the {@code Recipe} that we are building.","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"    public RecipeBuilder withDescription(String description) {","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"        this.description \u003d Optional.ofNullable(description);","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"    public Recipe build() {","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"        return new Recipe(name, baseIngredients, steps, description);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rootkie":89,"pattan9955":1}},{"path":"src/test/java/fridgy/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rebeccacxy":1,"-":71}},{"path":"src/test/java/fridgy/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the middle index of the Ingredient in the {@code model}\u0027s Ingredient list.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"        return Index.fromOneBased(model.getFilteredIngredientList().size() / 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the last index of the Ingredient in the {@code model}\u0027s Ingredient list.","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"        return Index.fromOneBased(model.getFilteredIngredientList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"     * Returns the Ingredient in the {@code model}\u0027s Ingredient list at {@code index}.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    public static Ingredient getIngredient(Model model, Index index) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"        return model.getFilteredIngredientList().get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"alissayarmantho"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"alissayarmantho"},"content":"     * Returns a string of {@code char} of the length specified in the {@code length}.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"alissayarmantho"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"alissayarmantho"},"content":"    public static String createString(char ch, int length) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"alissayarmantho"},"content":"        char[] charArray \u003d new char[length];","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"alissayarmantho"},"content":"        Arrays.fill(charArray, ch);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"alissayarmantho"},"content":"        return new String(charArray);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alissayarmantho":10,"rebeccacxy":11,"-":44}},{"path":"src/test/java/fridgy/testutil/TypicalBaseIngredients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_ALMOND;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_BASIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_FISH;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_ALMOND;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_FISH;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.model.ingredient.BaseIngredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rebeccacxy"},"content":" * A utility class containing a list of {@code BaseIngredient} objects to be used in tests.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rebeccacxy"},"content":"public class TypicalBaseIngredients {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient APPLE \u003d new IngredientBuilder().withName(\"Apple\")","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"94351253\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient BANANA \u003d new IngredientBuilder().withName(\"Banana\")","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"98765432\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient CARROT \u003d new IngredientBuilder().withName(\"Carrot Slices\")","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"95352563\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient DUCK \u003d new IngredientBuilder().withName(\"Duck breast\")","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"87652533\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient EGG \u003d new IngredientBuilder().withName(\"Egg mayo\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"9482224\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient FIGS \u003d new IngredientBuilder().withName(\"Fig jam\")","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"9482427\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient GRAPES \u003d new IngredientBuilder().withName(\"Grape\")","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"9482442\").buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    public static final BaseIngredient INGR1 \u003d new IngredientBuilder().withName(\"ingr1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"            .withQuantity(\"1kg\").buildBaseIngredient();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    public static final BaseIngredient INGR2 \u003d new IngredientBuilder().withName(\"ingr2\")","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        .withQuantity(\"1ml\").buildBaseIngredient();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rebeccacxy"},"content":"    // Manually added - Base Ingredient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient ALMOND \u003d new IngredientBuilder().withName(VALID_NAME_ALMOND)","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(VALID_QUANTITY_ALMOND).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient BASIL \u003d new IngredientBuilder().withName(VALID_NAME_BASIL)","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(VALID_QUANTITY_BASIL).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rebeccacxy"},"content":"    public static final BaseIngredient FISH \u003d new IngredientBuilder().withName(VALID_NAME_FISH)","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(VALID_QUANTITY_FISH).buildBaseIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rebeccacxy"},"content":"    private TypicalBaseIngredients() {} // prevents instantiation","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rebeccacxy"},"content":"    public static List\u003cBaseIngredient\u003e getTypicalBaseIngredients() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"rebeccacxy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE, BANANA, CARROT, DUCK, EGG, FIGS, GRAPES));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rebeccacxy":50,"rootkie":4}},{"path":"src/test/java/fridgy/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import fridgy.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rebeccacxy"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"public class TypicalIndexes {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"    public static final Index INDEX_FIRST_INGREDIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"    public static final Index INDEX_SECOND_INGREDIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"    public static final Index INDEX_THIRD_INGREDIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":12}},{"path":"src/test/java/fridgy/testutil/TypicalIngredients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_FISH;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"NayLin-H99"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_NAME_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_ALMOND;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_BASIL;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_QUANTITY_FISH;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_TAG_SNACK;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rebeccacxy"},"content":"import static fridgy.logic.commands.CommandTestUtil.VALID_TAG_VEGETABLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"NayLin-H99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"NayLin-H99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"NayLin-H99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.Inventory;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.model.ingredient.Ingredient;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rebeccacxy"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"rebeccacxy"},"content":" * A utility class containing a list of {@code Ingredient} objects to be used in tests.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rebeccacxy"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"rebeccacxy"},"content":"public class TypicalIngredients {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient APPLE \u003d new IngredientBuilder().withName(\"Apple\")","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"94351253\").withTags(\"snacks\")","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient BANANA \u003d new IngredientBuilder().withName(\"Banana\")","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rebeccacxy"},"content":"            .withQuantity(\"98765432\").withTags(\"fruit\", \"snacks\")","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient CARROT \u003d new IngredientBuilder().withName(\"Carrot Slices\").withQuantity(\"95352563\")","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"wall street\")","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient DUCK \u003d new IngredientBuilder().withName(\"Duck breast\").withQuantity(\"87652533\")","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"rebeccacxy"},"content":"            .withDescription(\"10th street\").withTags(\"snacks\")","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient EGG \u003d new IngredientBuilder().withName(\"Egg mayo\").withQuantity(\"9482224\")","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"michegan ave\")","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient FIGS \u003d new IngredientBuilder().withName(\"Fig jam\").withQuantity(\"9482427\")","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"little tokyo\")","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient GRAPES \u003d new IngredientBuilder().withName(\"Grape\").withQuantity(\"9482442\")","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"4th street\")","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"NayLin-H99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"NayLin-H99"},"content":"    // Manually added","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient CHICKEN \u003d new IngredientBuilder().withName(\"chicken\").withQuantity(\"2kg\")","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-02-2070\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient FLOUR \u003d new IngredientBuilder().withName(\"flour\").withQuantity(\"500g\")","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-02-2070\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient EXPIRED_CHICKEN \u003d new IngredientBuilder().withName(\"rotting chicken\")","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NayLin-H99"},"content":"            .withQuantity(\"2kg\").withExpiryDate(\"20-02-1979\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient HOON \u003d new IngredientBuilder().withName(\"Hoon Meier\").withQuantity(\"8482424\")","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"little india\")","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"    public static final Ingredient IDA \u003d new IngredientBuilder().withName(\"Ida Mueller\").withQuantity(\"8482131\")","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(\"chicago ave\")","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"rebeccacxy"},"content":"    // Manually added - Ingredient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient ALMOND \u003d new IngredientBuilder().withName(VALID_NAME_ALMOND)","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"NayLin-H99"},"content":"            .withQuantity(VALID_QUANTITY_ALMOND)","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"            .withDescription(VALID_DESCRIPTION_ALMOND).withTags(VALID_TAG_SNACK).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient BASIL \u003d new IngredientBuilder().withName(VALID_NAME_BASIL)","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"NayLin-H99"},"content":"            .withQuantity(VALID_QUANTITY_BASIL)","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"rebeccacxy"},"content":"            .withDescription(VALID_DESCRIPTION_BASIL).withTags(VALID_TAG_VEGETABLE, VALID_TAG_SNACK)","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(\"20-08-2010\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"NayLin-H99"},"content":"    public static final Ingredient FISH \u003d new IngredientBuilder().withName(VALID_NAME_FISH)","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"NayLin-H99"},"content":"            .withQuantity(VALID_QUANTITY_FISH)","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"NayLin-H99"},"content":"            .withDescription(VALID_DESCRIPTION_FISH)","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"NayLin-H99"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"rebeccacxy"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rebeccacxy"},"content":"    private TypicalIngredients() {} // prevents instantiation","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rebeccacxy"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"rebeccacxy"},"content":"     * Returns an {@code Inventory} with all the typical ingredients.","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"rebeccacxy"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"rebeccacxy"},"content":"    public static Inventory getTypicalInventory() {","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"rebeccacxy"},"content":"        Inventory ab \u003d new Inventory();","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"rebeccacxy"},"content":"        for (Ingredient ingredient : getTypicalIngredients()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"            ab.add(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"rebeccacxy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"rebeccacxy"},"content":"        return ab;","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"rebeccacxy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"rebeccacxy"},"content":"    public static List\u003cIngredient\u003e getTypicalIngredients() {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"rebeccacxy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE, BANANA, CARROT, DUCK, EGG, FIGS, GRAPES));","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"rebeccacxy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"rebeccacxy"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rebeccacxy":51,"rootkie":1,"NayLin-H99":45}},{"path":"src/test/java/fridgy/testutil/TypicalRecipes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package fridgy.testutil;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import fridgy.model.RecipeBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import fridgy.model.recipe.Recipe;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class TypicalRecipes {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    public static final Recipe BURGER \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"            .withName(\"Burger\")","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"            .withIngredients(Arrays.asList(TypicalBaseIngredients.INGR1, TypicalBaseIngredients.INGR2))","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"            .withSteps(Arrays.asList(\"Burger STEP 1\", \"Burger STEP 2\"))","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"            .withDescription(\"Very Nice\")","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"            .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public static final Recipe MAGGIE \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"            .withName(\"Maggie\")","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"            .withIngredients(Arrays.asList(TypicalBaseIngredients.APPLE, TypicalBaseIngredients.GRAPES))","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"            .withSteps(Arrays.asList(\"Maggie STEP 1\", \"Maggie STEP 2\"))","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"            .withDescription(\"Easy to make\")","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"            .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    public static final Recipe FRIES \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"            .withName(\"Fries\")","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"            .withIngredients(Arrays.asList(TypicalBaseIngredients.CARROT, TypicalBaseIngredients.BANANA))","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"            .withSteps(Arrays.asList(\"Fries STEP 1\", \"Fries STEP 2\"))","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"            .withDescription(\"More SALT!\")","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    // Manually added","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    public static final Recipe RICE \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"            .withName(\"Rice\")","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"            .withIngredients(Arrays.asList(new IngredientBuilder().withName(\"Rice\")","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"                .withQuantity(\"500g\").buildBaseIngredient()))","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"            .withSteps(Arrays.asList(\"Rice in cooker\"))","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"            .withDescription(\"Carbs \u003c3\")","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"            .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    public static final Recipe NOODLE \u003d new RecipeBuilder()","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"            .withName(\"Noodle\")","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"            .withIngredients(Arrays.asList(new IngredientBuilder().withName(\"Noodle\")","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"                .withQuantity(\"400g\").buildBaseIngredient()))","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"            .withSteps(Arrays.asList(\"Boil water\", \"Put Noodle\", \"Wait 15 mins\"))","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"            .withDescription(\"Nice Carbs \u003c3\")","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"            .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    private TypicalRecipes() {} // prevents instantiation","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"     * Returns an {@code RecipeBook} with all the typical recipes.","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    public static RecipeBook getTypicalRecipeBook() {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"        RecipeBook rb \u003d new RecipeBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        for (Recipe recipe : getTypicalRecipes()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"            rb.add(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"        return rb;","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"    public static List\u003cRecipe\u003e getTypicalRecipes() {","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BURGER, MAGGIE, FRIES));","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rootkie":66}},{"path":"src/test/java/fridgy/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"rebeccacxy":1,"-":34}},{"path":"src/test/java/fridgy/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rebeccacxy"},"content":"package fridgy.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.MainApp;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"NayLin-H99"},"content":"import fridgy.testutil.Assert;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"rebeccacxy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"rebeccacxy":13,"NayLin-H99":2,"-":99}},{"path":"src/test/java/fridgy/ui/UiUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alissayarmantho"},"content":"package fridgy.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"alissayarmantho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"alissayarmantho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"alissayarmantho"},"content":"import fridgy.testutil.TestUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"alissayarmantho"},"content":"public class UiUtilTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"alissayarmantho"},"content":"    public void isTruncated() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027a\u0027, 100) + \"...\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027a\u0027, 200), 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027b\u0027, 50) + \"...\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027b\u0027, 200), 50));","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027c\u0027, 10) + \"...\",","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027c\u0027, 200), 10));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027d\u0027, 20) + \"...\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027d\u0027, 200), 20));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"alissayarmantho"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"alissayarmantho"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"alissayarmantho"},"content":"    public void isNotTruncated() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027a\u0027, 100),","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027a\u0027, 100), 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027b\u0027, 50) ,","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027b\u0027, 50), 200));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027c\u0027, 10) ,","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027c\u0027, 10), 200));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"alissayarmantho"},"content":"        assertEquals(TestUtil.createString(\u0027d\u0027, 20) ,","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"alissayarmantho"},"content":"                UiUtil.truncateText(TestUtil.createString(\u0027d\u0027, 20), 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"alissayarmantho"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"alissayarmantho"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alissayarmantho":34}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"\u003c?import fridgy.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"rebeccacxy":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"rebeccacxy"},"content":"\u003cfx:root type\u003d\"fridgy.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"rebeccacxy":1,"-":5}}]
