[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"# Source Control","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-2/tp/actions)","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"**Source Control** is a desktop application for CS1101S professors to manage the students. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"## Usage","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"* Keeps track of administrative info and academic records","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"* Analyzes the performance of individual students or studio groups","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"## User Guide","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"If you are interested in using **Source Control**, head over to the [Quick Start section of the **User Guide**](https://ay2122s1-cs2103t-w08-2.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"## Developer Guide","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"If you are interested in developing **Source Control**, the **[Developer Guide](https://ay2122s1-cs2103t-w08-2.github.io/tp/DeveloperGuide.html)** is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"## About Us","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"If you are interested in contacting **Source Control** team, visit the [**About Us** website](https://ay2122s1-cs2103t-w08-2.github.io/tp/AboutUs.html).","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"* Original project: [AddressBook Level-3](https://se-education.org/addressbook-level3) project created as part of the [SE-EDU](https://se-education.org) initiative","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"nbvannhi":19,"-":4,"ganhongyao":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"### Jonas Chow","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"\u003cimg src\u003d\"images/jonas-chow.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"[[github](https://github.com/jonas-chow)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"* Responsibilities: Testing + Scheduling and tracking","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"### Tang Zhiying","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"\u003cimg src\u003d\"images/zhing22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"[[github](https://github.com/zhing22)] ","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"* Role: Developer","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"* Responsibilities: Documentation + Code quality","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"### Gan Hong Yao","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"\u003cimg src\u003d\"images/ganhongyao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"[[github](https://github.com/ganhongyao)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"* Responsibilities: Testing + Integration","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"### Nguyen Ba Van Nhi","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"\u003cimg src\u003d\"images/nbvannhi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"[[github](http://github.com/nbvannhi)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"* Responsibilities: Documentation + Code quality","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"### Leong Hong Fai","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"\u003cimg src\u003d\"images/leonghongfai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"[[github](http://github.com/leonghongfai)]","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"* Responsibilities: Integration + Deliverables and Deadlines","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"jonas-chow":5,"nbvannhi":4,"leonghongfai":3,"-":35,"zhing22":5,"ganhongyao":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"zhing22"},"content":"* targets professors of CS1101S ","lastModifiedDate":"2021-09-25"},{"lineNumber":261,"author":{"gitId":"zhing22"},"content":"* has a need to manage a significant number of students ","lastModifiedDate":"2021-09-25"},{"lineNumber":262,"author":{"gitId":"zhing22"},"content":"* has a need to analyse students\u0027 performance","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"zhing22"},"content":"**Value proposition**: This app will help the professors keep track of each student’s performance after each assessment,","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"zhing22"},"content":"doing so faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"zhing22"},"content":"It can analyse results of individual students, or tutorial groups, and identify students who require additional help,","lastModifiedDate":"2021-09-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Upload large amounts of data from a file      | Upload all assessment scores of all students at once          |","lastModifiedDate":"2021-09-26"},{"lineNumber":279,"author":{"gitId":"zhing22"},"content":"| `* *`  | Long-time user                         | Clear all data        | Remove records from the previous semester            |","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor                          | Export data      | Share interesting findings with my colleagues          |","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"zhing22"},"content":"| `*`  | New user | Import data from the previous semester | Have an idea of how intakes of the previous cohort performed |","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Add a new assessment        | Keep track of assessment scores of students           |","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Add a new student        | Add a new student without having to make a new file               |","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Allocate a student into existing group       | Allocate groupings without having to make a new file                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Organise students into groups      | Encourage peer learning          |","lastModifiedDate":"2021-09-25"},{"lineNumber":286,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Remove a specific student   | Update the system accordingly when a student drops the module  |","lastModifiedDate":"2021-09-25"},{"lineNumber":287,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Annotate a student with a tag  | See categories of students quickly |","lastModifiedDate":"2021-09-25"},{"lineNumber":288,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Add remarks to particular students | Be aware of any special conditions the student is facing |","lastModifiedDate":"2021-09-25"},{"lineNumber":289,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Upload students’ feedback about their tutors | Provide timely feedback to the tutors |","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Add attendance records for each class  | Track the students present at each class |","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Edit assessment score for a particular student | Make changes after the initial grading |","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor                          | Search for specific student     | Track his/her progress to facilitate better learning          |","lastModifiedDate":"2021-09-25"},{"lineNumber":293,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor | Search for students by classes and groups  | Track them by groups easily |","lastModifiedDate":"2021-09-25"},{"lineNumber":294,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor | Check a student’s grades | See individual performance |","lastModifiedDate":"2021-09-25"},{"lineNumber":295,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Check attendance records for each student | Track if the student has been attending classes diligently |","lastModifiedDate":"2021-09-25"},{"lineNumber":296,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor | Analyse the performances of individual students | Give special assistance to those in need |","lastModifiedDate":"2021-09-25"},{"lineNumber":297,"author":{"gitId":"zhing22"},"content":"| `* * *`  | CS1101S Professor | Analyse performance of cohort in each assessment | See how the cohort is performing |","lastModifiedDate":"2021-09-25"},{"lineNumber":298,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Analyse the cohort performance for each question | Understand which are the topics students require more help with |","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Analyse the performances of students in groups | See which studio is under-performing and check in with the tutor |","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"zhing22"},"content":"| `*`  | Detailed user | View the performances under different kinds of graph | Have better visualisation about the performances of students |","lastModifiedDate":"2021-09-26"},{"lineNumber":301,"author":{"gitId":"zhing22"},"content":"| `* *`  | CS1101S Professor | Calculate overall grades  | Easily decide on grade ranges |","lastModifiedDate":"2021-09-25"},{"lineNumber":302,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Compare between different batches of students | See if the module is too hard this semester as compared to previous semesters |","lastModifiedDate":"2021-09-25"},{"lineNumber":303,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Check the overall performance of the tutors based on several indicators | Identify excellent tutors to be called back next semester |","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"zhing22"},"content":"| `* * *`  | New user | Get command prompts when typing | Do not have to keep checking user guide |","lastModifiedDate":"2021-09-25"},{"lineNumber":305,"author":{"gitId":"zhing22"},"content":"| `* *`  | Expert user | Have shortcuts for commands | Save time |","lastModifiedDate":"2021-09-25"},{"lineNumber":306,"author":{"gitId":"zhing22"},"content":"| `*`  | Forgetful user | Access the user guide with an easy to remember command | Lookup how to use a command/what command to use |","lastModifiedDate":"2021-09-25"},{"lineNumber":307,"author":{"gitId":"zhing22"},"content":"| `*`  | Long-term user | Store meeting timings | Not miss any meetings that have been planned |","lastModifiedDate":"2021-09-25"},{"lineNumber":308,"author":{"gitId":"zhing22"},"content":"| `* *`  | Potential user | View the app populated with sample data | See how the app looks like when in use |","lastModifiedDate":"2021-09-26"},{"lineNumber":309,"author":{"gitId":"zhing22"},"content":"| `*`  | Forgetful user | Have reminders about upcoming meetings | Avoid missing any important events |","lastModifiedDate":"2021-09-25"},{"lineNumber":310,"author":{"gitId":"zhing22"},"content":"| `*`  | CS1101S Professor | Add TODO bug fixes accumulated throughout the semester | Fix them during CP3108 |","lastModifiedDate":"2021-09-25"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"ganhongyao"},"content":"(For all use cases below, the **System** is `Source Control` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"ganhongyao"},"content":"**Use case: Import student roster**","lastModifiedDate":"2021-09-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"ganhongyao"},"content":"1.  User has a comma-separated values (`.csv`) file of the student roster.","lastModifiedDate":"2021-09-26"},{"lineNumber":323,"author":{"gitId":"ganhongyao"},"content":"2.  User requests to import the file into Source Control.","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"ganhongyao"},"content":"3.  Source Control shows the list of students parsed and imported.","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"ganhongyao"},"content":"* 2a. The csv file has badly formatted input.","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"ganhongyao"},"content":"    * 2a1. Source Control shows an error message displaying the bad input.","lastModifiedDate":"2021-09-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":334,"author":{"gitId":"ganhongyao"},"content":"    * 2a2. User fixes the csv file.","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"ganhongyao"},"content":"**Use case: Create a new group**","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"ganhongyao"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"ganhongyao"},"content":"1.  User requests to create a new group and enters the group name and students\u0027 names or Student IDs.","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"ganhongyao"},"content":"2.  Source Control creates the group with the specified students.","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"ganhongyao"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":348,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"ganhongyao"},"content":"* 1a. There is an existing group with the same group name.","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"ganhongyao"},"content":"    * 1a1. Source Control shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"ganhongyao"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"ganhongyao"},"content":"   ","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"ganhongyao"},"content":"* 1b. There are multiple students that match any of the specified student names.","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":357,"author":{"gitId":"ganhongyao"},"content":"    * 1b1. Source Control shows an error message with the different Student IDs.","lastModifiedDate":"2021-09-26"},{"lineNumber":358,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":359,"author":{"gitId":"ganhongyao"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"leonghongfai"},"content":"2.  Data should persist after closing the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":367,"author":{"gitId":"leonghongfai"},"content":"3.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"leonghongfai"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"jonas-chow"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"jonas-chow"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2021-09-27"},{"lineNumber":376,"author":{"gitId":"jonas-chow"},"content":"* **Student**: A student in the database, identified by their name and ID (their NUSNET ID). Each student can be in multiple groups, and can have scores for multiple assessments.","lastModifiedDate":"2021-09-27"},{"lineNumber":377,"author":{"gitId":"jonas-chow"},"content":"* **Group**: A group of students, identified by its name.","lastModifiedDate":"2021-09-27"},{"lineNumber":378,"author":{"gitId":"jonas-chow"},"content":"* **Assessment**: An assessment is identified by its name. Each assessment has a maximum score.","lastModifiedDate":"2021-09-27"},{"lineNumber":379,"author":{"gitId":"jonas-chow"},"content":"* **Score**: The score that a student has attained for an assignment. Should be between 0 and the maximum score for the assessment. Each student can only have 1 score per assessment.","lastModifiedDate":"2021-09-27"},{"lineNumber":380,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jonas-chow":7,"leonghongfai":3,"-":359,"zhing22":39,"ganhongyao":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"Source Control is a **desktop app for CS1101S professors to manage the performance of their students, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). Source Control can give you both a quick overview and a closer look of how your students are doing.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents ","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"1. Download the latest `sourcecontrol.jar` from [here](https://github.com/AY2122S1-CS2103T-W08-2/tp/releases).","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Source Control.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"    * **`add student`**`-n John Doe -i E0123456` : Adds a student named `John Doe` with NUSNET ID `E0123456` into the database.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"    * **`add group`**`-g T01A -n John Doe` : Adds a group called `T01A` into the database and student `John Doe` into the group.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    * **`add alloc`**`-g T01A -n John Doe` : Adds student `John Doe` into group `T01`.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"    * **`add score`**`-a P01 -n John Doe -s 12`: Adds score for assessment `P01` as `12` for student `John Doe`.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"    * **`search`**`-n John Doe` : Searches for student `John Doe`.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"    * **`clear`** : Clears all existing data.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"v1.2 assumes that all inputs are valid, i.e. student id is in the correct format, and the groups which the student belongs to exists.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"* Words in `\u003cangled brackets\u003e` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"  e.g. in `add -n \u003cstudent_name\u003e`, `\u003cstudent_name\u003e` is a placeholder which can be used as `add -n John Doe`.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"* Parameters in `(round brackets)` separated by `|` are mutually exclusive options for input. Only one input should to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"  e.g. `(-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e | -group \u003cgroup_name\u003e)` can be used as `-n John Doe`, or as `-i E0123456`, or as `-g T02A`","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"* Parameters in `[square brackets]` are optional. \u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"  e.g. `-n \u003cstudent_name\u003e [-g \u003cgroup_name\u003e]` can be used as `-n John Doe -g T01A`, or as `-n John Doe`.","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"* Items with `...​`  after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"  e.g. `[-g \u003cgroup_name\u003e]...` can be used as ` ` (i.e. 0 times), or `-g T01A -g R01A`.","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"  e.g. if the command specifies `-n \u003cstudent_name\u003e -g \u003cgroup_name\u003e`, then `-g \u003cgroup_name\u003e -n \u003cstudent_name\u003e` is also acceptable.","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"* If a parameter is expected only once in the command but you specify it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"  e.g. if you specify `-g T02A -g T03B` and the command only expects one group, only `-g T03B` will be taken.","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"  e.g. if the command specifies `clear 123`, it will be interpreted as `clear`.","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"### Adding a student : `add student`","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"Adds a student into the database.","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"Format: `add student -n \u003cstudent_name\u003e -i \u003cstudent_id\u003e  [-g \u003cgroup_name\u003e] [-t \u003ctag_name\u003e]...`","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"* Adds a new student with the given name and NUSNET ID into the database.","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"* Adds the student into the groups the student belongs to.","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"* Adds a tag to the student if applicable. ","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"* `add student -n John Doe -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"* `add student -n Jane Doe -i E0123457 -g T01A -g R01A`","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"* `add student -n Jane Doe -i E0123458 -t beginner`","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"zhing22"},"content":"### Creating a new group: `add group`","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"zhing22"},"content":"Creates a new group and adds students into the group.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"Format: `add group -g \u003cgroup_name\u003e [(-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e)]...`","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"zhing22"},"content":"* Creates a new group with the given group name.","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"zhing22"},"content":"* Students can be identified by their name or NUSNET ID.","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"zhing22"},"content":"* `add group -g FG1 -n John Doe -n Jane Doe`","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"zhing22"},"content":"* `add group -g FG1`","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"zhing22"},"content":"* `add group -g FG1 -n John Doe -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"zhing22"},"content":"* `add group -g FG1 -i E0123123 -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"### Adding a student into a group: `add alloc`","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"Allocates an existing student into an existing group.","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"Format: `add alloc -g \u003cgroup_name\u003e (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e)`","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"* Adds the student into an existing group specified by the group name.","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"* Students can be identified by their name or NUSNET ID.","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"* `add alloc -g T01A -n John Doe`","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"* `add alloc -g T02A -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"### Adding an assessment: `add score`","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"Adds score of an existing assessment into the database.","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"Format: `add score -a \u003cassessment_name\u003e (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e) -s \u003cscore\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"* Adds student’s score for an existing assessment into the database.","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"* Students can be identified by their name or NUSNET ID.","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"* `add score -a P01 -n John Doe -s 12`","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"* `add score -a P02 -i E0123456 -s 12.5`","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"zhing22"},"content":"### Searching for students: `search`","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"zhing22"},"content":"Finds students who match the input keywords.","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"zhing22"},"content":"Format: `search (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e | -g \u003cgroup_name\u003e)`","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"zhing22"},"content":"* Search for students by their name, NUSNET ID, or the group they belong in. ","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"zhing22"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`. ","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"zhing22"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`. ","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"zhing22"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`. ","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"zhing22"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). ","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"zhing22"},"content":"e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"zhing22"},"content":"* `search -n John Doe`","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"zhing22"},"content":"* `search -i E0123456`","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"zhing22"},"content":"* `search -g T02B`","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"### Importing data: `import`","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"Loads data as specified in the provided CSV file.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"Format: `import -f \u003cfile_path\u003e [-g \u003cnumber_of_group_columns\u003e] [-a \u003cnumber_of_assessment_columns\u003e] [-t \u003cnumber_of_tag_columns\u003e]`","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jonas-chow"},"content":"* The file path can be either the absolute path or the relative path.","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"jonas-chow"},"content":"* The first row of the CSV file needs to be headers for the respective columns.","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"jonas-chow"},"content":"* The header for the assessment columns should the name of the assessment. For example, `Rune Trials`.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"* The header for every other column does not matter.","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"* Every row apart from the first represents a student.","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"* The first two columns refer to the student’s name and NUSNET ID.","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"jonas-chow"},"content":"* The next i columns, where i is the specified number of group columns, refer to the student’s groups.","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"* The next j columns, where j is the specified number of assessment columns, refer to the student’s grade in the respective assessments.","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"* The next k columns, where k is the specified number of tag columns, refer to the student\u0027s tags.","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"* The number of group columns, assessment columns, and tag columns are assumed to be 0 if they are not specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":":bulb: **Tips:**\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"* If the student does not have as many groups as the number of group columns, you should leave several group columns blank.","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"* If the student does not have a grade for some assessment, you should leave the corresponding assessment column blank.","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"* `import -f /home/prof/CS1101S/student_data.csv -g 2 -a 10 -t 1`","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"* `import -f student_data.csv -g 3 -a 30`","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"jonas-chow"},"content":"### Resetting all data: `clear`","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"zhing22"},"content":"Clears all existing data.","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"jonas-chow"},"content":"Format: `clear`","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"jonas-chow"},"content":"### Saving the data `[coming soon]`","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"jonas-chow"},"content":"### Archiving data files `[coming soon]`","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"## FAQ `[coming soon]`","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"leonghongfai"},"content":"**Add Student** | `add student -n \u003cstudent_name\u003e -i \u003cstudent_id\u003e  [-g \u003cgroup_name\u003e]...` \u003cbr\u003e e.g. `add student -n Jane Doe -i E0123456 -g T01A -g R01A`","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"jonas-chow"},"content":"**Add Group** | `add group -g \u003cgroup_name\u003e [(-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e)]...` \u003cbr\u003e e.g. `add group -g FG1`, `add group -g FG1 -n John Doe -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"jonas-chow"},"content":"**Add Allocation** | `add alloc -g \u003cgroup_name\u003e (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e)` \u003cbr\u003e e.g. `add alloc -g T01A -n John Doe`, `add alloc -g T02A -i E0123456`","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"jonas-chow"},"content":"**Add Assessment** | `add score -a \u003cassessment_name\u003e (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e) -s \u003cscore\u003e` \u003cbr\u003e e.g. `add score -a P01 -n John Doe -s 12`, `add score -a P02 -i E0123456 -s 12.5`","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"jonas-chow"},"content":"**Search** | `search (-n \u003cstudent_name\u003e | -i \u003cstudent_id\u003e | -g \u003cgroup_name\u003e)` \u003cbr\u003e e.g. `search -n John Doe` , `search -g T02B`","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"jonas-chow"},"content":"**Import data** | `import -f \u003cfile_path\u003e [-g \u003cnumber_of_group_columns\u003e] [-a \u003cnumber_of_assessment_columns\u003e] [-t \u003cnumber_of_tag_columns\u003e]` \u003cbr\u003e e.g. `import -f student_data.csv -g 2 -a 10 -t 1`","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"zhing22"},"content":"**Clear** | `clear data`","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"jonas-chow":50,"nbvannhi":21,"leonghongfai":5,"-":107,"ganhongyao":5,"zhing22":22}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"leonghongfai"},"content":"    content: \"Source Control\";","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"leonghongfai":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"title: Source Control","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-2/tp/actions)","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W08-2/tp/branch/master/graph/badge.svg?token\u003dL5I73XVDJQ)](https://codecov.io/gh/AY2122S1-CS2103T-W08-2/tp)","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"**Source Control is a desktop application for CS1101S professors to manage their students.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"* If you are interested in using Source Control, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"* If you are interested about developing Source Control, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"leonghongfai":4,"-":14,"ganhongyao":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":12,"ganhongyao":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    ObservableList\u003cStudent\u003e getFilteredPersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":48,"ganhongyao":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"    public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":78,"ganhongyao":3}},{"path":"src/main/java/seedu/address/logic/commands/AddAllocCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":" * Allocates an existing student to an existing group.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"public class AddAllocCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"    public static final String COMMAND_WORD \u003d \"add alloc\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to an existing group. \"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"            + PREFIX_GROUP + \"\u003cgroup_name\u003e \"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"            + \"(\" + PREFIX_NAME + \"\u003cstudent_name\u003e | \"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"            + PREFIX_ID + \"\u003cstudent_id\u003e)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New allocation added: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_NONEXISTENT_GROUP \u003d \"This group does not exist.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_NONEXISTENT_STUDENT \u003d \"This student does not exist.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_NAME \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"            \"This student needs to be allocated using ID due to duplicate naming.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the group.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"    private final AllocDescriptor allocDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"     * @param allocDescriptor details of the allocation","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    public AddAllocCommand(AllocDescriptor allocDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"        this.allocDescriptor \u003d new AllocDescriptor(allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e groupList \u003d addressBook.getGroupList();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e studentList \u003d addressBook.getStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"        assert allocDescriptor.getGroup().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        if (!groupList.contains(allocDescriptor.getGroup().get())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"        Group groupToEdit \u003d getAllocGroup(groupList, allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e studentsToEdit \u003d getAllocStudents(studentList, allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"        if (studentsToEdit.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_STUDENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"        if (studentsToEdit.size() \u003e 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"        Student studentToEdit \u003d studentsToEdit.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        if (groupToEdit.hasStudent(studentToEdit.getId())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"        groupToEdit.addStudent(editedStudent.getId());","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"     * Gets and returns a list of {@code Student} with matching identity specified in the {@code allocDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"    public static Group getAllocGroup(List\u003cGroup\u003e groups, AllocDescriptor allocDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e allocGroups \u003d groups.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"                .filter(allocDescriptor.isAllocGroup())","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"        assert allocGroups.size() \u003d\u003d 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"        return allocGroups.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"nbvannhi"},"content":"     * Gets and returns a list of {@code Student} with matching identity specified in the {@code allocDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"    public static List\u003cStudent\u003e getAllocStudents(List\u003cStudent\u003e students, AllocDescriptor allocDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e allocStudents \u003d students.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"                .filter(allocDescriptor.isAllocStudent())","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"        return Collections.unmodifiableList(allocStudents);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"     * Creates and returns a {@code Student} with the details of {@code preAllocStudent}","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"     * allocated to the group specified in the {@code allocDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"    public static Student createEditedStudent(Student toEditStudent, AllocDescriptor allocDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"        assert toEditStudent !\u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"        assert allocDescriptor.getGroup().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"nbvannhi"},"content":"        Name name \u003d toEditStudent.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"        ID id \u003d toEditStudent.getId();","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e groups \u003d toEditStudent.getGroups();","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"nbvannhi"},"content":"        Map\u003cAssessment, Score\u003e scores \u003d toEditStudent.getScores();","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"nbvannhi"},"content":"        Set\u003cTag\u003e tags \u003d toEditStudent.getTags();","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"nbvannhi"},"content":"        Group groupToEdit \u003d allocDescriptor.getGroup().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"nbvannhi"},"content":"        assert !groups.contains(groupToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e editedGroups \u003d new ArrayList\u003c\u003e(groups);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"nbvannhi"},"content":"        editedGroups.add(groupToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"nbvannhi"},"content":"        return new Student(name, id, editedGroups, scores, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof AddAllocCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"nbvannhi"},"content":"                \u0026\u0026 allocDescriptor.equals(((AddAllocCommand) other).allocDescriptor));","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"nbvannhi"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"nbvannhi"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"nbvannhi"},"content":"    public static class AllocDescriptor {","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"nbvannhi"},"content":"        private Name name;","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"nbvannhi"},"content":"        private ID id;","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"nbvannhi"},"content":"        private Group group;","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"nbvannhi"},"content":"        public AllocDescriptor() {}","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"nbvannhi"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"nbvannhi"},"content":"        public AllocDescriptor(AllocDescriptor toCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"nbvannhi"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"nbvannhi"},"content":"            setId(toCopy.id);","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"nbvannhi"},"content":"            setGroup(toCopy.group);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"nbvannhi"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"nbvannhi"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"nbvannhi"},"content":"        public void setId(ID id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"nbvannhi"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cID\u003e getId() {","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"nbvannhi"},"content":"        public void setGroup(Group group) {","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"nbvannhi"},"content":"            this.group \u003d group;","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"nbvannhi"},"content":"         * Returns a {@code Predicate} checking if a group have a matched name.","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"nbvannhi"},"content":"        public Predicate\u003cGroup\u003e isAllocGroup() {","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"nbvannhi"},"content":"            return toCheck -\u003e toCheck.equals(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"nbvannhi"},"content":"         * Returns a {@code Predicate} checking if a student have a matched name or ID.","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"nbvannhi"},"content":"        public Predicate\u003cStudent\u003e isAllocStudent() {","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"nbvannhi"},"content":"            return toCheck -\u003e toCheck.getName().equals(name)","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"nbvannhi"},"content":"                    || toCheck.getId().equals(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"nbvannhi"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"nbvannhi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"nbvannhi"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"nbvannhi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"nbvannhi"},"content":"                return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"nbvannhi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"nbvannhi"},"content":"            if (!(other instanceof AllocDescriptor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"nbvannhi"},"content":"                return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"nbvannhi"},"content":"            // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"nbvannhi"},"content":"            AllocDescriptor e \u003d (AllocDescriptor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"nbvannhi"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"nbvannhi"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"nbvannhi"},"content":"                    \u0026\u0026 getGroup().equals(e.getGroup());","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"nbvannhi":223,"ganhongyao":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":" * Adds a student to the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    public static final String COMMAND_WORD \u003d \"add student\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the database. \\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_NAME + \"\u003cstudent_name\u003e \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_ID + \"\u003cstudent_id\u003e \"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"            + \"[\" + PREFIX_GROUP + \"\u003cgroup_name\u003e]... \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_ID + \"E0543948 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_GROUP + \"T01A\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonas-chow":1,"-":43,"ganhongyao":20}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.AddAllocCommand.AllocDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.AddAllocCommand.createEditedStudent;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.AddAllocCommand.getAllocStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":" * Adds a group to the Source Control application.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    public static final String COMMAND_WORD \u003d \"add group\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"            + \": Creates a new group with the specified students (if any). \"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_GROUP + \"\u003cgroup_name\u003e \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"            + \"[(\" + PREFIX_NAME + \"\u003cstudent_name\u003e\" + \" | \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_ID + \"\u003cstudent_id\u003e\" + \")]...\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_GROUP + \"T01A\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_ID + \"E0543948\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\\n\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_NONEXISTENT_STUDENT \u003d \"Student with name or ID \\\"%1$s\\\" does not exist.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the application.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"            \"The student \\\"%1$s\\\" needs to be allocated manually using ID due to duplicate naming.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_IN_GROUP \u003d \"The student \\\"%1$s\\\" already exists in the group.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"    private final Group toAdd;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"    private final List\u003cAllocDescriptor\u003e allocDescriptors;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"     * Creates an AddGroupCommand to add the specified {@code Group}","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    public AddGroupCommand(Group group, List\u003cAllocDescriptor\u003e allocDescriptors) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        toAdd \u003d group;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        this.allocDescriptors \u003d new ArrayList\u003c\u003e(allocDescriptors);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        for (AllocDescriptor allocDescriptor : allocDescriptors) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"            List\u003cStudent\u003e matchedStudents \u003d getAllocStudents(model.getAddressBook().getStudentList(), allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"            if (matchedStudents.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"                String studentKey \u003d allocDescriptor.getName().isPresent()","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"                        ? allocDescriptor.getName().get().toString()","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"                        : allocDescriptor.getId().get().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"                throw new CommandException(String.format(MESSAGE_NONEXISTENT_STUDENT, studentKey));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"            Student studentToEdit \u003d matchedStudents.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"            if (matchedStudents.size() \u003e 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_STUDENT, studentToEdit.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"            if (toAdd.hasStudent(studentToEdit.getId())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_STUDENT_IN_GROUP, studentToEdit.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"            Student editedStudent \u003d createEditedStudent(studentToEdit, allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"            toAdd.addStudent(editedStudent.getId());","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"                || (other instanceof AddGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 toAdd.equals(((AddGroupCommand) other).toAdd));","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"ganhongyao":99}},{"path":"src/main/java/seedu/address/logic/commands/AddScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":" * Allocates an existing student to an existing group.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"public class AddScoreCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    public static final String COMMAND_WORD \u003d \"add score\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds score of an assessment for a student. \"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"            + PREFIX_ASSESSMENT + \"\u003cassessment_name\u003e \"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"            + \"(\" + PREFIX_NAME + \"\u003cstudent_name\u003e | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"            + PREFIX_ID + \"\u003cstudent_id\u003e) \"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"            + PREFIX_SCORE + \"\u003cscore_in_percentage\u003e\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New score added: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_NONEXISTENT_ASSESSMENT \u003d \"This assessment does not exist.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_NONEXISTENT_STUDENT \u003d \"This student does not exist.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_NAME \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"            \"Score needs to be added through ID for this student due to duplicate naming.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_EXISTENT_SCORE \u003d \"This assessment is already graded.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"    private final ScoreDescriptor scoreDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"     * @param scoreDescriptor details of the score","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"    public AddScoreCommand(ScoreDescriptor scoreDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"        this.scoreDescriptor \u003d new ScoreDescriptor(scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e assessmentList \u003d addressBook.getAssessmentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e studentList \u003d addressBook.getStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"        assert scoreDescriptor.getScore().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"        assert scoreDescriptor.getAssessment().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"        if (!assessmentList.contains(scoreDescriptor.getAssessment().get())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_ASSESSMENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"        Assessment assessmentToEdit \u003d getToEditAssessment(assessmentList, scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e studentsToEdit \u003d getToEditStudents(studentList, scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"        if (studentsToEdit.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"        if (studentsToEdit.size() \u003e 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"        Student studentToEdit \u003d studentsToEdit.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"        if (assessmentToEdit.isGraded(studentToEdit.getId())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"            throw new CommandException(MESSAGE_EXISTENT_SCORE);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"        Student editedStudent \u003d createEditedStudents(studentToEdit, scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"        assessmentToEdit.setScore(editedStudent.getId(), scoreDescriptor.getScore().get());","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"     * Gets and returns a map of {@code Assessment} with matching info","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"     * as specified in the {@code scoreDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"    public static Assessment getToEditAssessment(List\u003cAssessment\u003e assessments, ScoreDescriptor scoreDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e assessmentToEdit \u003d assessments.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"                .filter(scoreDescriptor.isToEditAssessment())","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"        assert assessmentToEdit.size() \u003d\u003d 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"nbvannhi"},"content":"        return assessmentToEdit.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"     * Get and returns a list of {@code Student} with matching info","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"     * as specified in the {@code scoreDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"    public static List\u003cStudent\u003e getToEditStudents(List\u003cStudent\u003e students, ScoreDescriptor scoreDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"        List\u003cStudent\u003e scoreStudents \u003d students.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"                .filter(scoreDescriptor.isToEditStudent())","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"        return Collections.unmodifiableList(scoreStudents);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"     * Creates and returns a {@code Student} with the details of {@code preScoreStudent}","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"     * being added score as specified in {@code scoreDescriptor}.","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"    public static Student createEditedStudents(Student toEditStudent, ScoreDescriptor scoreDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"        assert toEditStudent !\u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"nbvannhi"},"content":"        assert scoreDescriptor.getScore().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"nbvannhi"},"content":"        assert scoreDescriptor.getAssessment().isPresent();","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"nbvannhi"},"content":"        Name name \u003d toEditStudent.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"nbvannhi"},"content":"        ID id \u003d toEditStudent.getId();","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e groups \u003d toEditStudent.getGroups();","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"nbvannhi"},"content":"        Map\u003cAssessment, Score\u003e scores \u003d toEditStudent.getScores();","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"nbvannhi"},"content":"        Set\u003cTag\u003e tags \u003d toEditStudent.getTags();","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"nbvannhi"},"content":"        Assessment assessmentToEdit \u003d scoreDescriptor.getAssessment().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"nbvannhi"},"content":"        Score scoreToEdit \u003d scoreDescriptor.getScore().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"nbvannhi"},"content":"        assert !scores.containsKey(assessmentToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"nbvannhi"},"content":"        // TODO: need to double check whether","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"nbvannhi"},"content":"        //  assessment does not exit or is inputted with null score","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"nbvannhi"},"content":"        Map\u003cAssessment, Score\u003e editedScores \u003d new HashMap\u003c\u003e(scores);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"nbvannhi"},"content":"        editedScores.put(assessmentToEdit, scoreToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"nbvannhi"},"content":"        return new Student(name, id, groups, editedScores, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof AddScoreCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"nbvannhi"},"content":"                \u0026\u0026 scoreDescriptor.equals(((AddScoreCommand) other).scoreDescriptor));","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"nbvannhi"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"nbvannhi"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"nbvannhi"},"content":"    public static class ScoreDescriptor {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"nbvannhi"},"content":"        private Name name;","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"nbvannhi"},"content":"        private ID id;","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"nbvannhi"},"content":"        private Assessment assessment;","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"nbvannhi"},"content":"        private Score score;","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"nbvannhi"},"content":"        public ScoreDescriptor() {}","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"nbvannhi"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"nbvannhi"},"content":"        public ScoreDescriptor(ScoreDescriptor toCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"nbvannhi"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"nbvannhi"},"content":"            setId(toCopy.id);","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"nbvannhi"},"content":"            setAssessment(toCopy.assessment);","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"nbvannhi"},"content":"            setScore(toCopy.score);","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"nbvannhi"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"nbvannhi"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"nbvannhi"},"content":"        public void setId(ID id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"nbvannhi"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cID\u003e getId() {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"nbvannhi"},"content":"        public void setAssessment(Assessment assessment) {","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"nbvannhi"},"content":"            this.assessment \u003d assessment;","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cAssessment\u003e getAssessment() {","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(assessment);","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"nbvannhi"},"content":"        public void setScore(Score score) {","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"nbvannhi"},"content":"            this.score \u003d score;","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"nbvannhi"},"content":"        public Optional\u003cScore\u003e getScore() {","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"nbvannhi"},"content":"            return Optional.ofNullable(score);","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"nbvannhi"},"content":"         * Returns a {@code Predicate} checking if an assessment have a matched name.","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"nbvannhi"},"content":"        public Predicate\u003cAssessment\u003e isToEditAssessment() {","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"nbvannhi"},"content":"            return toCheck -\u003e toCheck.equals(assessment);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"nbvannhi"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"nbvannhi"},"content":"         * Returns a {@code Predicate} checking if a student have a matched name or ID.","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"nbvannhi"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"nbvannhi"},"content":"        public Predicate\u003cStudent\u003e isToEditStudent() {","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"nbvannhi"},"content":"            return toCheck -\u003e toCheck.getName().equals(name)","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"nbvannhi"},"content":"                    || toCheck.getId().equals(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"nbvannhi"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"nbvannhi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"nbvannhi"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"nbvannhi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"nbvannhi"},"content":"                return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":231,"author":{"gitId":"nbvannhi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"nbvannhi"},"content":"            if (!(other instanceof ScoreDescriptor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"nbvannhi"},"content":"                return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":234,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"nbvannhi"},"content":"            // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"nbvannhi"},"content":"            ScoreDescriptor e \u003d (ScoreDescriptor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"nbvannhi"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"nbvannhi"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"nbvannhi"},"content":"                    \u0026\u0026 getAssessment().equals(e.getAssessment())","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"nbvannhi"},"content":"                    \u0026\u0026 getScore().equals(e.getScore());","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"nbvannhi":245}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":44,"ganhongyao":9}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"            + \"[\" + PREFIX_NAME + \"\u003cstudent_name\u003e] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"            + \"[\" + PREFIX_ID + \"\u003cstudent_id\u003e] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"            + \"[\" + PREFIX_GROUP + \"\u003cgroup_name\u003e]... \"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"            + PREFIX_ID + \"E0656831\";","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"        ID updatedId \u003d editStudentDescriptor.getId().orElse(studentToEdit.getId());","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"        List\u003cGroup\u003e updatedGroups \u003d editStudentDescriptor.getGroups().orElse(studentToEdit.getGroups());","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"        Map\u003cAssessment, Score\u003e updatedScores \u003d editStudentDescriptor.getScores().orElse(studentToEdit.getScores());","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"        return new Student(updatedName, updatedId, updatedGroups, updatedScores, updatedTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"ganhongyao"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"        private ID id;","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"ganhongyao"},"content":"        private List\u003cGroup\u003e groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"ganhongyao"},"content":"        private Map\u003cAssessment, Score\u003e scores;","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"ganhongyao"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"ganhongyao"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"ganhongyao"},"content":"            setId(toCopy.id);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"ganhongyao"},"content":"            setGroups(toCopy.groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"            setScores(toCopy.scores);","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"ganhongyao"},"content":"            return CollectionUtil.isAnyNonNull(name, id, groups, scores, tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"ganhongyao"},"content":"        public void setId(ID id) {","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"ganhongyao"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"ganhongyao"},"content":"        public Optional\u003cID\u003e getId() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"ganhongyao"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"ganhongyao"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"ganhongyao"},"content":"         * Sets {@code groups} to this object\u0027s {@code groups}.","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"ganhongyao"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"ganhongyao"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"ganhongyao"},"content":"        public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"jonas-chow"},"content":"            this.groups \u003d (groups !\u003d null) ? groups.stream().distinct().collect(Collectors.toList()) : null;","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"ganhongyao"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"ganhongyao"},"content":"         * Returns an unmodifiable group list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"ganhongyao"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"ganhongyao"},"content":"         * Returns {@code Optional#empty()} if {@code groups} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"ganhongyao"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"ganhongyao"},"content":"        public Optional\u003cList\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"ganhongyao"},"content":"            return (groups !\u003d null) ? Optional.of(Collections.unmodifiableList(groups)) : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"ganhongyao"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"ganhongyao"},"content":"         * Sets {@code scores} to this object\u0027s {@code scores}.","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"ganhongyao"},"content":"         * A defensive copy of {@code scores} is used internally.","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"ganhongyao"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"ganhongyao"},"content":"        public void setScores(Map\u003cAssessment, Score\u003e scores) {","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"ganhongyao"},"content":"            this.scores \u003d (scores !\u003d null) ? new HashMap\u003c\u003e(scores) : null;","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"ganhongyao"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"ganhongyao"},"content":"         * Returns an unmodifiable score map, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"ganhongyao"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"ganhongyao"},"content":"         * Returns {@code Optional#empty()} if {@code scores} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"ganhongyao"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"ganhongyao"},"content":"        public Optional\u003cMap\u003cAssessment, Score\u003e\u003e getScores() {","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"ganhongyao"},"content":"            return (scores !\u003d null) ? Optional.of(Collections.unmodifiableMap(scores)) : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"ganhongyao"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"ganhongyao"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"ganhongyao"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"ganhongyao"},"content":"                    \u0026\u0026 getGroups().equals(e.getGroups())","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"ganhongyao"},"content":"                    \u0026\u0026 getScores().equals(e.getScores())","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jonas-chow":2,"-":151,"ganhongyao":94}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    // TODO: make predicate for id and group as well","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jonas-chow":1,"-":39,"ganhongyao":3}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports data from a file. \\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            + PREFIX_FILE + \"\u003cfile_path\u003e \"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"            + \"[\" + PREFIX_GROUP + \"\u003cnumber_of_group_columns\u003e] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            + \"[\" + PREFIX_ASSESSMENT + \"\u003cnumber_of_assessment_columns\u003e] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"            + \"[\" + PREFIX_TAG + \"\u003cnumber_of_tag_columns\u003e]\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            + PREFIX_FILE + \"data.csv \"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            + PREFIX_GROUP + \"2 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            + PREFIX_ASSESSMENT + \"10 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"            + PREFIX_TAG + \"3\";","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Imported all students\";","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_INVALID_FILE \u003d \"Failed to read from the file\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d \"Failed to read the number of columns\";","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_OUT_OF_BOUNDS \u003d \"Reached unexpected end of line while reading from file\";","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"    private final int groupCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    private final int assessmentCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    private final int tagCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    private final Path file;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"     * Creates an ImportCommand to import data from the given {@code file}","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"    public ImportCommand(int groupCount, int assessmentCount, int tagCount, Path file) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        this.groupCount \u003d groupCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        this.assessmentCount \u003d assessmentCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        this.tagCount \u003d tagCount;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        String fileContents;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"            fileContents \u003d FileUtil.readFromFile(file);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(MESSAGE_INVALID_FILE);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        AddressBook newAb \u003d new AddressBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        List\u003cAssessment\u003e assessments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        String[] lines \u003d fileContents.split(\"\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"        String[] headers \u003d lines[0].split(\",\", -1);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c assessmentCount; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"            String assessmentName \u003d readValue(headers, groupCount + 2 + i);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"            Assessment assessment \u003d makeAssessment(assessmentName);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"            assessments.add(assessment);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"            newAb.addAssessment(assessment);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 1; i \u003c lines.length; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"            newAb.addStudent(readStudentFromRow(lines[i], assessments, newAb.getGroupList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"        model.setAddressBook(newAb);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"    private Student readStudentFromRow(String row,","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"                                       List\u003cAssessment\u003e assessments,","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"                                       List\u003cGroup\u003e groupList) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"        String[] values \u003d row.split(\",\", -1);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"        Name name \u003d makeName(readValue(values, 0));","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"        ID id \u003d makeId(readValue(values, 1));","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"        int readingColumn \u003d 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c groupCount; i++, readingColumn++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"            String groupName \u003d readValue(values, readingColumn);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"            if (!groupName.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                Group group \u003d makeGroup(groupName);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"                // if the group already exists in the group list, use the existing group.","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"                // otherwise, use the new group.","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"                Group toAdd \u003d groupList.stream().filter(grp -\u003e grp.equals(group))","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"                        .findFirst().orElse(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"                group.addStudent(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"                groups.add(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"        Map\u003cAssessment, Score\u003e scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c assessmentCount; i++, readingColumn++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"            String assessmentScore \u003d readValue(values, readingColumn);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"            if (!assessmentScore.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"                Score score \u003d makeScore(assessmentScore);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"                scores.put(assessments.get(i), score);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"                assessments.get(i).setScore(id, score);","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c tagCount; i++, readingColumn++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"            String tagName \u003d readValue(values, readingColumn);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"            if (!tagName.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"                tags.add(makeTag(tagName));","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"        return new Student(name, id, groups, scores, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"    private String readValue(String[] row, int column) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"        if (column \u003e\u003d row.length) {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"            // avoid array out of bounds error","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(MESSAGE_OUT_OF_BOUNDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"jonas-chow"},"content":"        return row[column].trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"    private Name makeName(String name) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"jonas-chow"},"content":"        return new Name(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"jonas-chow"},"content":"    private ID makeId(String id) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"jonas-chow"},"content":"        if (!ID.isValidID(id)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"        return new ID(id);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"    private Group makeGroup(String groupName) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"        if (!Group.isValidGroup(groupName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"        return new Group(groupName);","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"jonas-chow"},"content":"    private Score makeScore(String score) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"        if (!Score.isValidScore(score)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"jonas-chow"},"content":"        return new Score(score);","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"jonas-chow"},"content":"    private Assessment makeAssessment(String assessmentName) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"        if (!Assessment.isValidAssessment(assessmentName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"jonas-chow"},"content":"        return new Assessment(assessmentName);","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"jonas-chow"},"content":"    private Tag makeTag(String tagName) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"jonas-chow"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"jonas-chow"},"content":"            throw new CommandException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"jonas-chow"},"content":"        return new Tag(tagName);","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"jonas-chow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"jonas-chow"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"jonas-chow"},"content":"                || (other instanceof ImportCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 this.file.equals(((ImportCommand) other).file)","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 this.groupCount \u003d\u003d ((ImportCommand) other).groupCount","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 this.assessmentCount \u003d\u003d ((ImportCommand) other).assessmentCount","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 this.tagCount \u003d\u003d ((ImportCommand) other).tagCount);","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jonas-chow":197,"nbvannhi":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"ganhongyao":2}},{"path":"src/main/java/seedu/address/logic/parser/AddAllocCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddAllocCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddAllocCommand.AllocDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":" * Parses input arguments and creates a new AddAllocCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"public class AddAllocCommandParser implements Parser\u003cAddAllocCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAllocCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"     * and returns an AddAllocCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"    public AddAllocCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP, PREFIX_NAME, PREFIX_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isEmpty()","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAllocCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"        AddAllocCommand.AllocDescriptor allocDescriptor \u003d new AllocDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"        allocDescriptor.setGroup(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"            allocDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"            allocDescriptor.setId(ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"        return new AddAllocCommand(allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"nbvannhi":54}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_GROUP, PREFIX_TAG);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        ID id \u003d ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        List\u003cGroup\u003e groupList \u003d ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        Map\u003cAssessment, Score\u003e emptyScores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        Student student \u003d new Student(name, id, groupList, emptyScores, tagList);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":46,"ganhongyao":19}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.AddAllocCommand.AllocDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":" * Parses input arguments and creates a new AddGroupCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"     * and returns an AddGroupCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP, PREFIX_NAME, PREFIX_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        List\u003cAllocDescriptor\u003e allocDescriptors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        List\u003cName\u003e names \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"            AllocDescriptor allocDescriptor \u003d new AllocDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptor.setGroup(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptor.setName(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptors.add(allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        List\u003cID\u003e ids \u003d ParserUtil.parseIds(argMultimap.getAllValues(PREFIX_ID));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        for (ID id : ids) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"            AllocDescriptor allocDescriptor \u003d new AllocDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptor.setGroup(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptor.setId(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"            allocDescriptors.add(allocDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        return new AddGroupCommand(group, allocDescriptors);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"ganhongyao":67}},{"path":"src/main/java/seedu/address/logic/parser/AddScoreCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddScoreCommand.ScoreDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":" * Parses input arguments and creates a new AddAllocCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"public class AddScoreCommandParser implements Parser\u003cAddScoreCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAllocCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"     * and returns an AddAllocCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    public AddScoreCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ASSESSMENT, PREFIX_NAME, PREFIX_ID, PREFIX_SCORE);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_ASSESSMENT).isEmpty()","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"                || argMultimap.getValue(PREFIX_SCORE).isEmpty()","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScoreCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        AddScoreCommand.ScoreDescriptor scoreDescriptor \u003d new ScoreDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"        scoreDescriptor.setAssessment(ParserUtil.parseAssessment(argMultimap.getValue(PREFIX_ASSESSMENT).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"        scoreDescriptor.setScore(ParserUtil.parseScore(argMultimap.getValue(PREFIX_SCORE).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"            scoreDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"            scoreDescriptor.setId(ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"        return new AddScoreCommand(scoreDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"nbvannhi":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddAllocCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        // if it ends with a prefix, add a space so that the prefix can be picked up by the tokenizer","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        if (arguments.matches(\".*-[a-z]$\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"            arguments \u003d arguments + \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        boolean isTwoWordCommand \u003d arguments.length() \u003e 0","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 !arguments.startsWith(\" -\") \u0026\u0026 !Character.isDigit(arguments.charAt(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"        if (isTwoWordCommand) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"            commandWord \u003d extractFullCommandWord(commandWord, arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"            arguments \u003d extractArguments(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"        case AddAllocCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"            return new AddAllocCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"        case AddScoreCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"            return new AddScoreCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"     * Removes second word of command from arguments.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"ganhongyao"},"content":"     * @param arguments raw arguments to extract from.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"ganhongyao"},"content":"     * @return extracted arguments.","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"ganhongyao"},"content":"    private String extractArguments(String arguments) {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"        int argumentsIndex \u003d arguments.indexOf(\"-\");","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"ganhongyao"},"content":"        if (argumentsIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"            return \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"ganhongyao"},"content":"        String extractedArguments \u003d arguments.substring(argumentsIndex - 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"        return extractedArguments;","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"     * Converts commandWord to the two word format and retrieves second word from arguments.","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"ganhongyao"},"content":"     * @param firstCommandWord the original commandWord parsed.","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"     * @param arguments arguments to retrieve second half of commandWord from.","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"     * @return full commandWord.","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"ganhongyao"},"content":"    private String extractFullCommandWord(String firstCommandWord, String arguments) {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"        int argumentsIndex \u003d arguments.indexOf(\"-\");","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"ganhongyao"},"content":"        if (argumentsIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"            return firstCommandWord + arguments;","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"ganhongyao"},"content":"        String fullCommandWord \u003d firstCommandWord + arguments.substring(0, argumentsIndex - 1).stripTrailing();","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"ganhongyao"},"content":"        return fullCommandWord;","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonas-chow":9,"nbvannhi":8,"leonghongfai":20,"-":74,"ganhongyao":26}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n \");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"-i \");","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"-g \");","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    public static final Prefix PREFIX_ASSESSMENT \u003d new Prefix(\"-a \");","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"-s \");","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t \");","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    public static final Prefix PREFIX_FILE \u003d new Prefix(\"-f \");","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jonas-chow":2,"-":10,"ganhongyao":5}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_GROUP, PREFIX_TAG);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"            editStudentDescriptor.setId(ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        parseGroupsForEdit(argMultimap.getAllValues(PREFIX_GROUP)).ifPresent(editStudentDescriptor::setGroups);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code List\u003cGroup\u003e} if {@code groups} is non-empty.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"     * If {@code groups} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"     * {@code List\u003cGroup\u003e} containing zero groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"    private Optional\u003cList\u003cGroup\u003e\u003e parseGroupsForEdit(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"        assert groups !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"        if (groups.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"        Collection\u003cString\u003e groupList \u003d groups.size() \u003d\u003d 1 \u0026\u0026 groups.contains(\"\") ? Collections.emptyList() : groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"        return Optional.of(ParserUtil.parseGroups(groupList));","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":64,"ganhongyao":29}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        // TODO: handle each prefix separately, find command needs to take name, group, id predicate","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        // remove any blank inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s*-n\\\\s+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        List\u003cString\u003e nameKeywordsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        for (String keyword : nameKeywords) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            if (!keyword.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"                nameKeywordsList.add(keyword);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(nameKeywordsList));","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jonas-chow":12,"-":29,"ganhongyao":1}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILE, PREFIX_GROUP, PREFIX_ASSESSMENT, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        if (argMultimap.getValue(PREFIX_FILE).isEmpty() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        Path filePath \u003d argMultimap.getValue(PREFIX_FILE).map(Path::of).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        int groupCount \u003d getCount(argMultimap, PREFIX_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        int assessmentCount \u003d getCount(argMultimap, PREFIX_ASSESSMENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        int tagCount \u003d getCount(argMultimap, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        return new ImportCommand(groupCount, assessmentCount, tagCount, filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    private int getCount(ArgumentMultimap argumentMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            return argumentMultimap.getValue(prefix).map(String::trim).map(Integer::parseInt).orElse(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"            throw new ParseException(ImportCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jonas-chow":42}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"    public static List\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(names);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"        final List\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"        for (String name : names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"            nameList.add(parseName(name));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"        return nameList;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"     * Parses a {@code String score} into a {@code Score}.","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"     * @throws ParseException if the given {@code score} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"    public static Score parseScore(String score) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(score);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"        if (!Score.isValidScore(trimmedScore)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"        return new Score(trimmedScore);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"     * Parses a {@code String assessment} into an {@code Assessment}.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"     * @throws ParseException if the given {@code assessment} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"    public static Assessment parseAssessment(String assessment) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(assessment);","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"        String trimmedAssessment \u003d assessment.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"        if (!Assessment.isValidAssessment(trimmedAssessment)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"            throw new ParseException(Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"        return new Assessment(trimmedAssessment);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"zhing22"},"content":"     * Parses a {@code String ID} into an {@code ID}.","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"zhing22"},"content":"     * @throws ParseException if the given {@code ID} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"zhing22"},"content":"    public static ID parseID(String id) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"zhing22"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"zhing22"},"content":"        String trimmedID \u003d id.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"zhing22"},"content":"        if (!ID.isValidID(trimmedID)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"zhing22"},"content":"            throw new ParseException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"zhing22"},"content":"        return new ID(trimmedID);","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"ganhongyao"},"content":"     * Parses {@code Collection\u003cString\u003e ids} into a {@code List\u003cID\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"    public static List\u003cID\u003e parseIds(Collection\u003cString\u003e ids) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(ids);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"        final List\u003cID\u003e idList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"ganhongyao"},"content":"        for (String id : ids) {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"            idList.add(parseID(id));","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"ganhongyao"},"content":"        return idList;","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"zhing22"},"content":"     * Parses a {@code String Group} into an {@code Group}.","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"zhing22"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"zhing22"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"zhing22"},"content":"     * @throws ParseException if the given {@code Group} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"zhing22"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"zhing22"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"zhing22"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"zhing22"},"content":"        if (!Group.isValidGroup(trimmedGroup)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"zhing22"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"zhing22"},"content":"        return new Group(trimmedGroup);","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"ganhongyao"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code List\u003cGroup\u003e}.","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"ganhongyao"},"content":"    public static List\u003cGroup\u003e parseGroups(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"ganhongyao"},"content":"        final List\u003cGroup\u003e groupList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"        for (String groupName : groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"ganhongyao"},"content":"            groupList.add(parseGroup(groupName));","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"ganhongyao"},"content":"        return groupList;","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nbvannhi":19,"-":94,"ganhongyao":38,"zhing22":27}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":" * E.g. \u0027-t \u0027 in \u0027add James -t friend\u0027.","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jonas-chow":1,"-":38}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.AssessmentList;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.GroupList;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    private final GroupList groups;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    private final AssessmentList assessments;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        groups \u003d new GroupList();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        assessments \u003d new AssessmentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     * Replaces the contents of the assessment list with {@code assessments}.","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"     * {@code assessments} must not contain duplicate assessments.","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"    public void setAssessments(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        this.assessments.setAssessments(assessments);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"        setAssessments(newData.getAssessmentList());","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"     * Any new groups that the student has are added into the group list.","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"        List\u003cGroup\u003e studentGroups \u003d s.getGroups();","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"        for (Group group : studentGroups) {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"            if (!groups.contains(group)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"                groups.add(group);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"        // TODO: someone help make it more OOP :P","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e assessmentList \u003d getAssessmentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"        Map\u003cAssessment, Score\u003e studentScores \u003d s.getScores();","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"        for (Assessment assessment : studentScores.keySet()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"            if (!assessments.contains(assessment)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"                assessments.add(assessment);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"            int index \u003d assessmentList.indexOf(assessment);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"            assessmentList.get(index).add(s.getId(), studentScores.get(assessment));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"        students.add(s);","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"ganhongyao"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"ganhongyao"},"content":"     * address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"ganhongyao"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"ganhongyao"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"ganhongyao"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"ganhongyao"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"    //// group-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"jonas-chow"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"jonas-chow"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"jonas-chow"},"content":"        groups.add(g);","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"    //// assessment-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"jonas-chow"},"content":"     * Returns true if an assessment with the same identity as {@code assessment} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"jonas-chow"},"content":"    public boolean hasAssessment(Assessment assessment) {","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"        requireNonNull(assessment);","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"jonas-chow"},"content":"        return assessments.contains(assessment);","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"jonas-chow"},"content":"     * Adds an assessment to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"jonas-chow"},"content":"     * The assessment must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"    public void addAssessment(Assessment a) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"jonas-chow"},"content":"        assessments.add(a);","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"ganhongyao"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"ganhongyao"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"ganhongyao"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":193,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"jonas-chow"},"content":"    public List\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"jonas-chow"},"content":"        return groups.groups;","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"jonas-chow"},"content":"    public List\u003cAssessment\u003e getAssessmentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"jonas-chow"},"content":"        return assessments.assessments;","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students)","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups)","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 assessments.equals(((AddressBook) other).assessments));","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"jonas-chow"},"content":"        return Objects.hash(students, groups, assessments);","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonas-chow":79,"nbvannhi":12,"-":96,"ganhongyao":29}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"     * address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"    void addGroup(Group group);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":70,"ganhongyao":30}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"ganhongyao"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"ganhongyao"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"ganhongyao"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"ganhongyao"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"ganhongyao"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"ganhongyao"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"ganhongyao"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"ganhongyao"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"ganhongyao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"ganhongyao"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"ganhongyao"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"ganhongyao"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"ganhongyao"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":130,"ganhongyao":34}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * Returns a list of groups.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    List\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * Returns a list of assessments.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    List\u003cAssessment\u003e getAssessmentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonas-chow":11,"-":15,"ganhongyao":4}},{"path":"src/main/java/seedu/address/model/student/Assessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":" * Represents a Student\u0027s assessment.","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAssessment(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"public class Assessment {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"            \"Assessment names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"    // Assessment score list","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"    public final Map\u003cID, Score\u003e scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"    // Assessment name","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"     * Constructs an {@code Assessment}.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"     * @param name A valid assessment name.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"    public Assessment(String name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"        checkArgument(isValidAssessment(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"        value \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"    public void add(ID id, Score score) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"        scores.put(id, score);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if a given string is a valid assessment name.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    public static boolean isValidAssessment(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"    public String getName() {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    public Map\u003cID, Score\u003e getScores() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"        return scores;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"    public void setScore(ID id, Score score) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"        scores.put(id, score);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"    public void setScores(Map\u003cID, Score\u003e scores) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"        this.scores.putAll(scores);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if the student with the given {@code id} is already graded.","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"    public boolean isGraded(ID id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        return scores.containsKey(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if both assessments have the same name.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"     * This defines a weaker notion of equality between two assessments.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"    public boolean isSameAssessment(Assessment otherAssessment) {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"        if (otherAssessment \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        return otherAssessment !\u003d null","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"                \u0026\u0026 otherAssessment.getName().equals(getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof Assessment // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"                \u0026\u0026 value.equals(((Assessment) other).value)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":100}},{"path":"src/main/java/seedu/address/model/student/AssessmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.AssessmentNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicateAssessmentException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":" * Represents a list of assessments.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNumOfAssessments(String)} (String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"public class AssessmentList {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"            \"Number of assessments should be a positive integer\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"    public final List\u003cAssessment\u003e assessments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if a given string is a valid number of assessments.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"    public static boolean isValidNumOfAssessments(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if the list contains an equivalent assessment as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    public boolean contains(Assessment toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        return assessments.stream().anyMatch(toCheck::isSameAssessment);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"     * Adds an assessment to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"     * The assessment must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    public void add(Assessment toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"     * Replaces the assessment {@code target} in the list with {@code editedAssessment}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"     * The assessment identity of {@code editedAssessment} must not be the same as another existing assessment","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"     * in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment(Assessment target, Assessment editedAssessment) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"        requireAllNonNull(target, editedAssessment);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"        int index \u003d assessments.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"            throw new AssessmentNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"        if (!target.isSameAssessment(editedAssessment) \u0026\u0026 contains(editedAssessment)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"        assessments.set(index, editedAssessment);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"     * Removes the equivalent assessment from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"     * The assessment must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"    public void remove(Assessment toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"        if (!assessments.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"            throw new AssessmentNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments(AssessmentList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"        Collections.copy(assessments, replacement.assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"     * Replaces the contents of this list with {@code assessments}.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"     * {@code assessments} must not contain duplicate assessments.","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"        requireAllNonNull(assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"        if (!assessmentsAreUnique(assessments)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"        this.assessments.clear();","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"        this.assessments.addAll(assessments);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof AssessmentList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 assessments.size() \u003d\u003d ((AssessmentList) other).assessments.size()","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 assessments.stream().allMatch(((AssessmentList) other)::contains)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"        return assessments.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if {@code assessments} contains only unique assessments.","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"    private boolean assessmentsAreUnique(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"        for (int i \u003d 0; i \u003c assessments.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"            for (int j \u003d i + 1; j \u003c assessments.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"                if (assessments.get(i).isSameAssessment(assessments.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jonas-chow":4,"nbvannhi":118,"ganhongyao":6}},{"path":"src/main/java/seedu/address/model/student/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"public class Group {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"            \"Group names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    // Group student list","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    public final List\u003cID\u003e students;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"    // Group name","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    public final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"     * @param name A valid Group name.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"    public Group(String name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        checkArgument(isValidGroup(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        this.students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"     * Constructs a {@code Group} with the specified students.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"     * @param name A valid Group name.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"     * @param students Students to add into the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    public Group(String name, List\u003cID\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        checkArgument(isValidGroup(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        this.students \u003d new ArrayList\u003c\u003e(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if a given string is a valid Group name.","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    public static boolean isValidGroup(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the group.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    public boolean hasStudent(ID id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"        return students.contains(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"     * Adds a student to the group.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"     * The student must not already exist in the group.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"     * The student\u0027s group list needs to be updated accordingly.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"    public void addStudent(ID id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        students.add(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"     * Removes student with id {@code key} from this {@code Group}.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"     * {@code key} must exist in the group.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"    public void removeStudent(ID key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"        return name;","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof Group // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 name.equals(((Group) other).name)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        return name.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":74,"ganhongyao":21}},{"path":"src/main/java/seedu/address/model/student/GroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zhing22"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"zhing22"},"content":"public class GroupList {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zhing22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zhing22"},"content":"            \"Number of Groups should be a positive integer\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zhing22"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    public final List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"     * Returns true if a given string is a valid number of Groups.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"    public static boolean isValidNumOfGroups(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zhing22"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"     * Returns true if the list contains an equivalent Group as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zhing22"},"content":"    public boolean contains(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zhing22"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"        return groups.stream().anyMatch(group::equals);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"zhing22"},"content":"     * Adds a Group into the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zhing22"},"content":"    public void add(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zhing22"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zhing22"},"content":"        if (contains(group)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"zhing22"},"content":"            return;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        groups.add(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"zhing22"},"content":"     * Replaces the Group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"zhing22"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"zhing22"},"content":"     * The Group identity of {@code editedGroup} must not be the same as another existing Group in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"zhing22"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zhing22"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        int index \u003d groups.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"zhing22"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zhing22"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"zhing22"},"content":"        if (!target.equals(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"zhing22"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"        groups.set(index, editedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"zhing22"},"content":"     * Removes the equivalent Group from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"zhing22"},"content":"     * The Group must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"zhing22"},"content":"    public void remove(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"zhing22"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        if (!groups.remove(group)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"zhing22"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"zhing22"},"content":"     * Replaces the contents of this list with {@code Group}.","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"zhing22"},"content":"    public void setGroups(GroupList group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"zhing22"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        Collections.copy(groups, group.groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"zhing22"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"        this.groups.clear();","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"zhing22"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"zhing22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"zhing22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"zhing22"},"content":"                || (other instanceof GroupList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 groups.size() \u003d\u003d ((GroupList) other).groups.size()","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"                \u0026\u0026 groups.stream().allMatch(((GroupList) other)::contains)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"zhing22"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"zhing22"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"ganhongyao"},"content":"        return groups.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"ganhongyao"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"                if (groups.get(i).equals(groups.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"zhing22"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"zhing22"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"zhing22"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"zhing22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"zhing22"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"jonas-chow":4,"ganhongyao":22,"zhing22":100}},{"path":"src/main/java/seedu/address/model/student/ID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"public class ID {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zhing22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zhing22"},"content":"            \"ID should start with E followed by 7 numerical numbers\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zhing22"},"content":"    public static final String VALIDATION_REGEX \u003d \"[Ee]\\\\d{7}\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zhing22"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zhing22"},"content":"     * Constructs a {@code ID}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zhing22"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zhing22"},"content":"     * @param id A valid NUSNET ID.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zhing22"},"content":"    public ID(String id) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zhing22"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zhing22"},"content":"        checkArgument(isValidID(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"        value \u003d reformatID(id);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zhing22"},"content":"    public static boolean isValidID(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zhing22"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zhing22"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zhing22"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zhing22"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"zhing22"},"content":"     * Reformats valid ID to uppercase.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"zhing22"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zhing22"},"content":"    public static String reformatID(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zhing22"},"content":"        assert name.length() \u003d\u003d 8; // ID should already be validated","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"zhing22"},"content":"        char upperCase \u003d Character.toUpperCase(name.charAt(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"zhing22"},"content":"        return upperCase + name.substring(1);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"zhing22"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"zhing22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"zhing22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"zhing22"},"content":"                || (other instanceof ID // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"zhing22"},"content":"                \u0026\u0026 value.equals(((ID) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"zhing22"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"zhing22"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"zhing22"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ganhongyao":1,"zhing22":56}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"ganhongyao":2}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":26,"ganhongyao":5}},{"path":"src/main/java/seedu/address/model/student/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":" * Represents a Student\u0027s score for an assessment.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidScore(String)}","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"public class Score {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"            \"Score should be in percentage format, and it should have at most 2 decimal places\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"    public static final String INTEGRAL_PART_REGEX \u003d \"\\\\d{1,2}\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    public static final String DECIMAL_PART_REGEX \u003d \"(\\\\.\\\\d{1,2})?\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"    public static final String MAX_SCORE_REGEX \u003d \"|100.00|100.0|100\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"    public static final String VALIDATION_REGEX \u003d INTEGRAL_PART_REGEX + DECIMAL_PART_REGEX + MAX_SCORE_REGEX;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"    public final String value;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"     * @param score A valid score.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    public Score(String score) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        requireNonNull(score);","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"        checkArgument(isValidScore(score), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        value \u003d reformatScore(score);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"     * Returns true if a given string is a valid score.","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    public static boolean isValidScore(String test) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"     * Reformats valid score to 2 decimal places.","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"    public static String reformatScore(String score) {","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"        String[] parts \u003d score.split(\"\\\\.\"); // split along decimal point","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"        assert parts.length \u003d\u003d 2 || parts.length \u003d\u003d 1; // integral part must exist and decimal part is optional","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"        String integral \u003d parts[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"        String decimal \u003d parts.length \u003d\u003d 2 ? parts[1] : \"00\";","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"        assert decimal.length() \u003c\u003d 2; // decimal part contains at most 2 digits","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"        decimal +\u003d \"0\".repeat(2 - decimal.length()); // add additional 0 as needed","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        return integral + \".\" + decimal;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"        return value;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"                || (other instanceof Score // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"                \u0026\u0026 value.equals(((Score) other).value)); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nbvannhi":67,"ganhongyao":1}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"public class Student {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    private final ID id;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"    private final List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    private final Map\u003cAssessment, Score\u003e scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    public Student(Name name, ID id, List\u003cGroup\u003e groups, Map\u003cAssessment, Score\u003e scores, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        requireAllNonNull(name, id, groups, scores, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        this.scores.putAll(scores);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"    public ID getId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        return id;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"     * Returns an immutable list of groups, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"    public List\u003cGroup\u003e getGroups() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"        return Collections.unmodifiableList(groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"     * Returns an immutable map of assessment scores, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"    public Map\u003cAssessment, Score\u003e getScores() {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        return Collections.unmodifiableMap(scores);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     * Adds all scores provided","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    public void addScores(Map\u003cAssessment, Score\u003e scores) {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        // TODO: feel free to edit this as you need","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"        this.scores.putAll(scores);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId());","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"ganhongyao"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"ganhongyao"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"ganhongyao"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId())","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getGroups().equals(getGroups())","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getScores().equals(getScores())","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"ganhongyao"},"content":"        return Objects.hash(name, id, groups, scores, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"                .append(\"; NUSNET ID: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"ganhongyao"},"content":"                .append(getId());","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"ganhongyao"},"content":"        List\u003cGroup\u003e groups \u003d getGroups();","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"ganhongyao"},"content":"        if (!groups.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"ganhongyao"},"content":"            builder.append(\"; Groups: \");","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"            groups.forEach(group -\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"                builder.append(group);","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"                builder.append(\", \");","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"            });","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"            //removes last \", \"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"            builder.delete(builder.length() - 2, builder.length());","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"ganhongyao"},"content":"        Map\u003cAssessment, Score\u003e scores \u003d getScores();","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"ganhongyao"},"content":"        if (!scores.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"ganhongyao"},"content":"            builder.append(\"; Assessment Scores: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"                    .append(scores);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"leonghongfai"},"content":"            tags.forEach(tag -\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"leonghongfai"},"content":"                builder.append(tag);","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"leonghongfai"},"content":"                builder.append(\", \");","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"leonghongfai"},"content":"            });","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"leonghongfai"},"content":"            //removes last \", \"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"leonghongfai"},"content":"            builder.delete(builder.length() - 2, builder.length());","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonas-chow":8,"leonghongfai":12,"-":78,"ganhongyao":64}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":" * uses Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"ganhongyao"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"ganhongyao"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"                        \u0026\u0026 internalList.size() \u003d\u003d ((UniqueStudentList) other).internalList.size()","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"                        \u0026\u0026 internalList.stream().allMatch(((UniqueStudentList) other)::contains));","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"ganhongyao"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"ganhongyao"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonas-chow":2,"-":94,"ganhongyao":42}},{"path":"src/main/java/seedu/address/model/student/exceptions/AssessmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":" * Signals that the operation is unable to find the specified assessment.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"public class AssessmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nbvannhi":5,"ganhongyao":1}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateAssessmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":" * Signals that the operation will result in duplicate Assessments","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":" * (Assessments are considered duplicates if they have the same name).","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"public class DuplicateAssessmentException extends RuntimeException {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"    public DuplicateAssessmentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"        super(\"Operation would result in duplicate assessments\");","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nbvannhi":10,"ganhongyao":1}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ganhongyao":1,"zhing22":6}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":10,"ganhongyao":1}},{"path":"src/main/java/seedu/address/model/student/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"    public GroupNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"        super(\"Group does not exist\");","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ganhongyao":1,"zhing22":6}},{"path":"src/main/java/seedu/address/model/student/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"-":4,"ganhongyao":2}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    public static Student[] getSamplePersons() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"Alex Yeoh\"), new ID(\"E0534794\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T02A\", \"R03A\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"                Map.of(new Assessment(\"P01\"), new Score(\"89\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"                        new Assessment(\"M01\"), new Score(\"100\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"Bernice Yu\"), new ID(\"E0481923\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T07A\", \"R10B\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"                Map.of(new Assessment(\"M01\"), new Score(\"100\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"                        new Assessment(\"Q01\"), new Score(\"100\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new ID(\"E0348902\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T10H\", \"R03A\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                Map.of(new Assessment(\"P03\"), new Score(\"66.6\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"David Li\"), new ID(\"E0345242\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T09B\", \"R04B\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"                Map.of(new Assessment(\"M02\"), new Score(\"100.0\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new ID(\"E0593933\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T02J\", \"R09A\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"                Map.of(new Assessment(\"M04\"), new Score(\"74\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new ID(\"E0539221\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"                getGroupList(\"T08C\", \"R01C\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"                Map.of(new Assessment(\"P13\"), new Score(\"83\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"        for (Student sampleStudent : getSamplePersons()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"     * Returns a group list containing the list of strings given.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"    public static List\u003cGroup\u003e getGroupList(String... strings) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"                .map(Group::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"leonghongfai":1,"-":39,"ganhongyao":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"public class JsonAdaptedAssessment {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    private final String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"    private final Map\u003cString, String\u003e scores;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"     * Constructs a {@code JsonAdaptedAssessment} with the given {@code assessmentName}.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"    public JsonAdaptedAssessment(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"                                 @JsonProperty(\"scores\") Map\u003cString, String\u003e scores) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"        this.scores \u003d scores;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"     * Converts a given {@code Assessment} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    public JsonAdaptedAssessment(Assessment source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"        name \u003d source.value;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"        scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"        for (ID id : source.scores.keySet()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"            scores.put(id.value, source.scores.get(id).value);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Assessment} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assessment.","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    public Assessment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"        if (!Assessment.isValidAssessment(name)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"            throw new IllegalValueException(Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"        Assessment assessment \u003d new Assessment(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"        // scores is not yet existent in the database","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"        if (scores \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"            return assessment;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"        for (String id : scores.keySet()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"            if (!ID.isValidID(id)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"                throw new IllegalValueException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"            if (!Score.isValidScore(scores.get(id))) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"                throw new IllegalValueException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"            assessment.scores.put(new ID(id), new Score(scores.get(id)));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"        return assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":67}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    private final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        name \u003d source.name;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        if (!Group.isValidGroup(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        return new Group(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jonas-chow":37,"ganhongyao":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"    private final String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    private final String id;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"    private final List\u003cString\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"    // Note: Scores are stored on the JSON-adapted Assessments, and retrieved from there to avoid duplicate objects","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    private final List\u003cString\u003e assessments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"id\") String id,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"                              @JsonProperty(\"groups\") List\u003cString\u003e groups,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"                              @JsonProperty(\"assessments\") List\u003cString\u003e assessments,","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"            this.groups.addAll(groups);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"        if (assessments !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"            this.assessments.addAll(assessments);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        groups.addAll(source.getGroups().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"                .map(group -\u003e group.name)","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"        assessments.addAll(source.getScores().keySet().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"                .map(Assessment::getName)","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"    public Student toModelType(List\u003cGroup\u003e groupList, List\u003cAssessment\u003e assessmentList) throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"        if (!ID.isValidID(id)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"            throw new IllegalValueException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"        final ID modelId \u003d new ID(id);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"        final Map\u003cAssessment, Score\u003e modelScores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"        assessmentList.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"                .filter(assessment -\u003e assessments.contains(assessment.getName()))","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"                .forEach(assessment -\u003e modelScores.put(assessment, assessment.scores.get(modelId)));","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"        final List\u003cGroup\u003e modelGroups \u003d groupList.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"                .filter(group -\u003e groups.contains(group.name))","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"        for (Group group : modelGroups) {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"nbvannhi"},"content":"            group.addStudent(modelId);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"        return new Student(modelName, modelId, modelGroups, modelScores, modelTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":117,"ganhongyao":2}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate student(s).\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_DUPLICATE_ASSESSMENT \u003d \"Assessment list contains duplicate assessment(s).\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Group list contains duplicate group(s).\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    private final List\u003cJsonAdaptedAssessment\u003e assessments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"                                       @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"                                       @JsonProperty(\"assessments\") List\u003cJsonAdaptedAssessment\u003e assessments) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        this.assessments.addAll(assessments);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        students.addAll(source.getStudentList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"                .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"        groups.addAll(source.getGroupList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        assessments.addAll(source.getAssessmentList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"                .map(JsonAdaptedAssessment::new)","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        for (JsonAdaptedAssessment jsonAdaptedAssessment : assessments) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"            Assessment assessment \u003d jsonAdaptedAssessment.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"            if (addressBook.hasAssessment(assessment)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ASSESSMENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"            addressBook.addAssessment(assessment);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType(","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"                    addressBook.getGroupList(),","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"                    addressBook.getAssessmentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":46,"-":49,"ganhongyao":4}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w08-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jonas-chow":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"    public final Student student;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"    private Label nusNetId;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"    private Label group;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"    private Label assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"     * Creates a {@code PersonCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    public PersonCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"        nusNetId.setText(\"ID: \" + student.getId().value);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        String groupsString \u003d student.getGroups().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"                .map(Group::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        group.setText(\"Groups: \" + groupsString);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        String assessmentsString \u003d student.getScores().keySet().stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"                .map(Assessment::toString).sorted().collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        assessment.setText(\"Assessments: \" + assessmentsString);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jonas-chow":12,"nbvannhi":1,"leonghongfai":4,"-":62,"ganhongyao":8}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"    private ListView\u003cStudent\u003e personListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public PersonListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        personListView.setItems(studentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code PersonCard}.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"    class PersonListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"                setGraphic(new PersonCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":39,"ganhongyao":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"      \u003cLabel fx:id\u003d\"nusNetId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nusNetId\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"      \u003cLabel fx:id\u003d\"group\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$group\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"      \u003cLabel fx:id\u003d\"assessment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$assessment\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leonghongfai":3,"-":33}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e1234567\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ \"T01A\", \"R01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ \"P01\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ \"Friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"Person With Invalid ID\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e123456\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"  \"groups\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"  \"assessments\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P01\",","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"      \"e1234567\":  \"100\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":21,"-":5}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"Person with invalid ID\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e123456\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ \"T01A\", \"R01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ \"P01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ \"Friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"  \"groups\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"  \"assessments\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P01\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"      \"e1234567\":  \"100\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":17,"-":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e1234567\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ \"T01A\", \"R01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ \"P01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ \"Friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e1234567\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ \"T01A\", \"R01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ \"P01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ \"Friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"  \"groups\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"  \"assessments\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P01\",","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"      \"e1234567\":  \"100\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":22,"-":4}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"Person with invalid ID\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    \"id\": \"e123456\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    \"groups\": [ \"T01A\", \"R01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\": [ \"P01A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    \"tagged\": [ \"Friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"  \"groups\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"  \"assessments\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P01\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"      \"e1234567\":  \"100\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":17,"-":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0543948\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T07A\", \"R01C\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ \"P01\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0473477\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T04B\", \"R01D\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ \"P01\", \"P02\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0538201\",","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T07D\", \"R03A\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ \"P01\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0438241\",","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T07D\", \"R02C\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0582305\",","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ \"P01\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0537266\",","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T03K\", \"R01C\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ \"P01\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    \"id\" : \"E0555001\",","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    \"groups\" : [ \"T05H\", \"R05B\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"    \"assessments\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"  \"groups\": [{","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T07A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01C\"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T04B\"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R01D\"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T07D\"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R03A\"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R02C\"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T03K\"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"T05H\"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"R05B\"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"  }],","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"  \"assessments\": [{","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P01\",","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"      \"E0543948\": \"100\",","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"      \"E0473477\": \"100\",","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"      \"E0538201\": \"100\",","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"      \"E0582305\": \"73\",","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"      \"E0537266\": \"84\"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"    \"name\": \"P02\",","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"    \"scores\": {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"      \"E0473477\": \"100\"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonas-chow":58,"-":24}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + ID_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withGroups().withScores(new HashMap\u003c\u003e()).withTags().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":152,"ganhongyao":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":38,"ganhongyao":7}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.personsAdded);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"        Student alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        Student bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"ganhongyao"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"ganhongyao"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"ganhongyao"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"ganhongyao"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"ganhongyao"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"ganhongyao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"ganhongyao"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"ganhongyao"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"ganhongyao"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"ganhongyao"},"content":"        private final Student student;","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"ganhongyao"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"ganhongyao"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"ganhongyao"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"ganhongyao"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"ganhongyao"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"ganhongyao"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"ganhongyao"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"ganhongyao"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"ganhongyao"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"ganhongyao"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"ganhongyao"},"content":"            return personsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"ganhongyao"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"ganhongyao"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"ganhongyao"},"content":"            personsAdded.add(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":165,"ganhongyao":40}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSESSMENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_ID_AMY \u003d \"E0543947\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_ID_BOB \u003d \"E0639293\";","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_GROUP_TUTORIAL \u003d \"T08D\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_GROUP_RECITATION \u003d \"R07B\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_ASSESSMENT_AMY \u003d \"P01\";","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_ASSESSMENT_BOB \u003d \"M01\";","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_SCORE_AMY \u003d \"100\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    public static final String VALID_SCORE_BOB \u003d \"66.6\";","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"    public static final Map\u003cAssessment, Score\u003e VALID_SCORES_AMY \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"            Map.of(new Assessment(VALID_ASSESSMENT_AMY), new Score(VALID_SCORE_AMY));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"    public static final Map\u003cAssessment, Score\u003e VALID_SCORES_BOB \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"            Map.of(new Assessment(VALID_ASSESSMENT_BOB), new Score(VALID_SCORE_BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    public static final String VALID_TYPICAL_PERSONS_CSV_PATH \u003d \"src/test/data/ImportCommandTest/typicalPersons.csv\";","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"    public static final String VALID_WRONG_CSV_PATH \u003d \"src/test/data/ImportCommandTest/wrongFormat.csv\";","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    public static final String VALID_NON_EXISTENT_PATH \u003d \"src/test/data/ImportCommandTest/doesNotExist.csv\";","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    public static final int VALID_TYPICAL_PERSONS_GROUP_COUNT \u003d 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    public static final int VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT \u003d 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    public static final int VALID_TYPICAL_PERSONS_TAG_COUNT \u003d 2;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"    public static final String GROUP_DESC_TUTORIAL \u003d \" \" + PREFIX_GROUP + VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"    public static final String GROUP_DESC_RECITATION \u003d \" \" + PREFIX_GROUP + VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    public static final String FILE_DESC_VALID_FILE \u003d \" \" + PREFIX_FILE + VALID_TYPICAL_PERSONS_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    public static final String FILE_DESC_INVALID_FILE \u003d \" \" + PREFIX_FILE + VALID_WRONG_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    public static final String FILE_DESC_NON_EXISTENT_FILE \u003d \" \" + PREFIX_FILE + VALID_NON_EXISTENT_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    public static final String GROUP_COUNT_DESC_TYPICAL \u003d \" \" + PREFIX_GROUP + VALID_TYPICAL_PERSONS_GROUP_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    public static final String ASSESSMENT_COUNT_DESC_TYPICAL \u003d \" \" + PREFIX_ASSESSMENT","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"            + VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"    public static final String TAG_COUNT_DESC_TYPICAL \u003d \" \" + PREFIX_TAG + VALID_TYPICAL_PERSONS_TAG_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    public static final String TAG_COUNT_DESC_ABOVE_TYPICAL \u003d \" \" + PREFIX_TAG + (VALID_TYPICAL_PERSONS_TAG_COUNT + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"E0123\"; // ID length too short","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUP + \"05\u0026\"; // \u0027\u0026\u0027 not allowed in name","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"    public static final String INVALID_GROUP_COUNT_DESC \u003d \" \" + PREFIX_GROUP + \"invalid1\"; // only numbers allowed","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"    public static final String INVALID_ASSESSMENT_COUNT_DESC \u003d \" \" + PREFIX_ASSESSMENT + \"invalid2\"; // only numbers","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"    public static final String INVALID_TAG_COUNT_DESC \u003d \" \" + PREFIX_TAG + \"invalid3\"; // only numbers","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"                .withId(VALID_ID_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_TUTORIAL)","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"                .withId(VALID_ID_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_RECITATION)","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"ganhongyao"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"ganhongyao"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"ganhongyao"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"ganhongyao"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jonas-chow":23,"-":92,"ganhongyao":40}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":95,"ganhongyao":14}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        editedStudent.addScores(model.getFilteredStudentList().get(0).getScores());","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d personInList.withName(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"                .withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditStudentDescriptor());","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        Student editedStudent \u003d new PersonBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"ganhongyao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"ganhongyao"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jonas-chow":1,"-":135,"ganhongyao":38}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORES_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        // different ID -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withGroups(VALID_GROUP_RECITATION).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        // different scores -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withScores(VALID_SCORES_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":43,"ganhongyao":15}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":77,"ganhongyao":6}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NON_EXISTENT_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_GROUP_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_TAG_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WRONG_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"public class ImportCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    public void execute_validFile_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        Model actualModel \u003d new ModelManager();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        expectedModel.setAddressBook(TypicalPersons.getTypicalAddressBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        assertCommandSuccess(command, actualModel, ImportCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"    public void execute_missingColumn_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_WRONG_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), ImportCommand.MESSAGE_OUT_OF_BOUNDS);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    public void execute_missingFile_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_NON_EXISTENT_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), ImportCommand.MESSAGE_INVALID_FILE);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    public void execute_badData_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"        String pathFormat \u003d \"src/test/data/ImportCommandTest/%s.csv\";","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"missingAssessmentName\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongAssessmentName\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Assessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"missingId\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongId\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"missingName\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongName\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongGroup\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongScore\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"        command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"                Path.of(String.format(pathFormat, \"wrongTag\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"        assertCommandFailure(command, new ModelManager(), Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jonas-chow":140}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_RECITATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_TUTORIAL;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        Student expectedStudent \u003d new PersonBuilder(BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_TUTORIAL)","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"                .withScores(new HashMap\u003c\u003e())","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"        // multiple IDs - last ID accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ID_DESC_AMY + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"        // multiple groups - all accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        Student expectedStudentMultipleGroups \u003d new PersonBuilder(BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"                .withScores(new HashMap\u003c\u003e())","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_TUTORIAL, VALID_GROUP_RECITATION)","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL + GROUP_DESC_RECITATION","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudentMultipleGroups));","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        Student expectedStudentMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"                .withScores(new HashMap\u003c\u003e())","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_TUTORIAL)","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withTags().withScores(new HashMap\u003c\u003e()).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ID_DESC_AMY + GROUP_DESC_TUTORIAL,","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"        // zero groups","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"        Student expectedStudentWithNoGroups \u003d new PersonBuilder(AMY).withScores(new HashMap\u003c\u003e())","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"                .withGroups().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ID_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"                new AddCommand(expectedStudentWithNoGroups));","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ID_DESC_BOB , expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"        // missing ID prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_ID_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_ID_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"        // invalid nusNetId","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_ID_DESC + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"        // invalid group","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB + INVALID_GROUP_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_ID_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + ID_DESC_BOB + GROUP_DESC_TUTORIAL","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"ganhongyao"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jonas-chow":9,"leonghongfai":12,"-":71,"ganhongyao":42}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASSESSMENT_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILE_DESC_VALID_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_GROUP_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_TAG_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(student));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"                FindCommand.COMMAND_WORD + \" -n \" + keywords.stream().collect(Collectors.joining(\" -n \")));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"    public void parseCommand_import() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand command \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(parser.parseCommand(ImportCommand.COMMAND_WORD + FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"                + TAG_COUNT_DESC_TYPICAL), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jonas-chow":23,"-":90,"ganhongyao":10}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, ID.MESSAGE_CONSTRAINTS); // invalid ID","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GROUP_DESC, Group.MESSAGE_CONSTRAINTS); // invalid group","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"        // invalid ID followed by valid group","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC + GROUP_DESC_TUTORIAL, ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"        // valid ID followed by invalid ID. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, \"1\" + ID_DESC_BOB + INVALID_ID_DESC, ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_ID_DESC + VALID_GROUP_TUTORIAL,","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_DESC_TUTORIAL + NAME_DESC_AMY + GROUP_DESC_RECITATION + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"ganhongyao"},"content":"                .withId(VALID_ID_BOB).withGroups(VALID_GROUP_TUTORIAL, VALID_GROUP_RECITATION)","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + GROUP_DESC_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"ganhongyao"},"content":"                .withGroups(VALID_GROUP_TUTORIAL).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"ganhongyao"},"content":"        // ID","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"ganhongyao"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"ganhongyao"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"ganhongyao"},"content":"        // groups","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"ganhongyao"},"content":"        userInput \u003d targetIndex.getOneBased() + GROUP_DESC_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"ganhongyao"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withGroups(VALID_GROUP_TUTORIAL).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"ganhongyao"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"ganhongyao"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY + GROUP_DESC_TUTORIAL + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"ganhongyao"},"content":"                + ID_DESC_AMY + GROUP_DESC_TUTORIAL + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"ganhongyao"},"content":"                + ID_DESC_BOB + GROUP_DESC_RECITATION + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"                .withGroups(VALID_GROUP_TUTORIAL, VALID_GROUP_RECITATION)","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"ganhongyao"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"ganhongyao"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ID_DESC + ID_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"ganhongyao"},"content":"        userInput \u003d targetIndex.getOneBased() + GROUP_DESC_TUTORIAL + INVALID_ID_DESC + ID_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"ganhongyao"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_BOB).withGroups(VALID_GROUP_TUTORIAL).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"ganhongyao"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jonas-chow":2,"-":148,"ganhongyao":47}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, \"-n Alice -n Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, \" -n  Alice  -n Bob  \", expectedFindCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jonas-chow":2,"-":31,"ganhongyao":1}},{"path":"src/test/java/seedu/address/logic/parser/ImportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASSESSMENT_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILE_DESC_INVALID_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILE_DESC_NON_EXISTENT_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILE_DESC_VALID_FILE;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ASSESSMENT_COUNT_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_COUNT_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_COUNT_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_COUNT_DESC_ABOVE_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_COUNT_DESC_TYPICAL;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NON_EXISTENT_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_GROUP_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPICAL_PERSONS_TAG_COUNT;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WRONG_CSV_PATH;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"public class ImportCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    private ImportCommandParser parser \u003d new ImportCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        // standard usage","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        // with whitespace preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        // multiple arguments provided, only last one used","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_NON_EXISTENT_FILE + FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"                + INVALID_GROUP_COUNT_DESC + GROUP_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"                + INVALID_ASSESSMENT_COUNT_DESC + ASSESSMENT_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"                + INVALID_TAG_COUNT_DESC + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    public void parse_someFieldsPresent_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"                0,","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        // group count not provided","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"                + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"                0,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        // assessment count not provided","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"        expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"                0,","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"        // tag count not provided","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"        expectedCommand \u003d new ImportCommand(0, 0, 0,","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"        // only file provided","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"    public void parse_fileNotPresent_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"        assertParseFailure(parser, GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"                + TAG_COUNT_DESC_TYPICAL, String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"    public void parse_tooManyColumnsSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT + 1,","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_TYPICAL_PERSONS_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"        // It\u0027s the command\u0027s job to read the file and validate column counts","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_VALID_FILE + GROUP_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"                + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_ABOVE_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"    public void parse_invalidArguments_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"        // Not a number","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"        assertParseFailure(parser, FILE_DESC_VALID_FILE + INVALID_GROUP_COUNT_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"                + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, ImportCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"        assertParseFailure(parser, FILE_DESC_VALID_FILE + GROUP_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"                + INVALID_ASSESSMENT_COUNT_DESC + TAG_COUNT_DESC_TYPICAL, ImportCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"        assertParseFailure(parser, FILE_DESC_VALID_FILE + GROUP_COUNT_DESC_TYPICAL","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"                + ASSESSMENT_COUNT_DESC_TYPICAL + INVALID_TAG_COUNT_DESC, ImportCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"    public void parse_badFile_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"        ImportCommand expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_NON_EXISTENT_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"        // path leads to a file that doesn\u0027t exist (it\u0027s the command\u0027s job to check for existence)","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_NON_EXISTENT_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"        expectedCommand \u003d new ImportCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_GROUP_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_ASSESSMENT_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"jonas-chow"},"content":"                VALID_TYPICAL_PERSONS_TAG_COUNT,","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"jonas-chow"},"content":"                Path.of(VALID_WRONG_CSV_PATH));","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"        // path leads to a file that has the wrong format (it\u0027s the command\u0027s job to read the file)","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"        assertParseSuccess(parser, FILE_DESC_INVALID_FILE","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"                + GROUP_COUNT_DESC_TYPICAL + ASSESSMENT_COUNT_DESC_TYPICAL + TAG_COUNT_DESC_TYPICAL, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jonas-chow":149}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_SCORE \u003d \"11 .01\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    private static final String INVALID_ASSESSMENT \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"    private static final String INVALID_ID \u003d \"E12345\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    private static final String INVALID_GROUP \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"    private static final String VALID_SCORE \u003d \"11.01\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    private static final String VALID_ASSESSMENT \u003d \"P01\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"zhing22"},"content":"    private static final String VALID_ID \u003d \"E1234567\";","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    private static final String VALID_GROUP \u003d \"T02A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"    public void parseScore_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseScore((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"    public void parseScore_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseScore(INVALID_SCORE));","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"    public void parseScore_validValueWithoutWhitespace_returnsScore() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"        Score expectedScore \u003d new Score(VALID_SCORE);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedScore, ParserUtil.parseScore(VALID_SCORE));","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"    public void parseScore_validValueWithWhitespace_returnsTrimmedScore() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"        String scoreWithWhitespace \u003d WHITESPACE + VALID_SCORE + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"        Score expectedScore \u003d new Score(VALID_SCORE);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedScore, ParserUtil.parseScore(scoreWithWhitespace));","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"    public void parseAssessment_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAssessment((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"    public void parseAssessment_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAssessment(INVALID_ASSESSMENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"    public void parseAssessment_validValueWithoutWhitespace_returnsAssessment() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"        Assessment expectedAssessment \u003d new Assessment(VALID_ASSESSMENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedAssessment, ParserUtil.parseAssessment(VALID_ASSESSMENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"    public void parseAssessment_validValueWithWhitespace_returnsTrimmedAssessment() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"        String assessmentWithWhitespace \u003d WHITESPACE + VALID_ASSESSMENT + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"nbvannhi"},"content":"        Assessment expectedAssessment \u003d new Assessment(VALID_ASSESSMENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedAssessment, ParserUtil.parseAssessment(assessmentWithWhitespace));","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"zhing22"},"content":"    public void parseID_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseID((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"zhing22"},"content":"    public void parseID_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"zhing22"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseID(INVALID_ID));","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"zhing22"},"content":"    public void parseID_validValueWithoutWhitespace_returnsID() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"zhing22"},"content":"        ID expectedID \u003d new ID(VALID_ID);","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedID, ParserUtil.parseID(VALID_ID));","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"zhing22"},"content":"    public void parseID_validValueWithWhitespace_returnsTrimmedID() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"ganhongyao"},"content":"        String idWithWhitespace \u003d WHITESPACE + VALID_ID + WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"zhing22"},"content":"        ID expectedID \u003d new ID(VALID_ID);","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedID, ParserUtil.parseID(idWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"zhing22"},"content":"    public void parseGroup_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroup((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"zhing22"},"content":"    public void parseGroup_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(INVALID_GROUP));","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"zhing22"},"content":"    public void parseGroup_validValueWithoutWhitespace_returnsGroup() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"ganhongyao"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP);","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(VALID_GROUP));","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"zhing22"},"content":"    public void parseGroup_validValueWithWhitespace_returnsTrimmedGroup() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"ganhongyao"},"content":"        String groupWithWhitespace \u003d WHITESPACE + VALID_GROUP + WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"ganhongyao"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP);","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(groupWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jonas-chow":2,"nbvannhi":25,"-":153,"ganhongyao":14,"zhing22":28}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"            return students;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"        public List\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"        public List\u003cAssessment\u003e getAssessmentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jonas-chow":12,"-":81,"ganhongyao":21}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"ganhongyao"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"ganhongyao"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":123,"ganhongyao":9}},{"path":"src/test/java/seedu/address/model/student/AssessmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.AssessmentNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicateAssessmentException;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"public class AssessmentListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"    private static final Assessment PATH_01 \u003d new Assessment(\"P01\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"    private static final Assessment MISSION_01 \u003d new Assessment(\"M01\");","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"    private final AssessmentList assessments \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    public void contains_nullAssessment_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.contains(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"    public void contains_assessmentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(assessments.contains(PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"    public void contains_assessmentInList_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(assessments.contains(PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"    public void contains_assessmentWithSameNameInList_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(assessments.contains(new Assessment(PATH_01.value)));","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"    public void add_nullAssessment_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"    public void add_duplicateAssessment_throwsDuplicateAssessmentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(DuplicateAssessmentException.class, () -\u003e assessments.add(PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_nullTargetAssessment_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.setAssessment(null, PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_nullEditedAssessment_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.setAssessment(PATH_01, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_targetAssessmentNotInList_throwsAssessmentNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(AssessmentNotFoundException.class, () -\u003e assessments.setAssessment(PATH_01, PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_editedAssessmentIsSameAssessment_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"        assessments.setAssessment(PATH_01, PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"        expectedAssessmentList.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_editedAssessmentHasSameName_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        Assessment editedPath01 \u003d new Assessment(PATH_01.value);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"        assessments.setAssessment(PATH_01, editedPath01);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"        expectedAssessmentList.add(editedPath01);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_editedAssessmentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"        assessments.setAssessment(PATH_01, MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedUniqueAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"        expectedUniqueAssessmentList.add(MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedUniqueAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessment_editedAssessmentHasNonUniqueIdentity_throwsDuplicateAssessmentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(DuplicateAssessmentException.class, () -\u003e assessments.setAssessment(PATH_01, MISSION_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"    public void remove_nullAssessment_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.remove(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"    public void remove_personDoesNotExist_throwsAssessmentNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(AssessmentNotFoundException.class, () -\u003e assessments.remove(PATH_01));","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"    public void remove_existingAssessment_removesAssessment() {","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"        assessments.remove(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedUniqueAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedUniqueAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments_nullUniqueAssessmentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.setAssessments((AssessmentList) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments_assessments_replacesOwnListWithProvidedUniqueAssessmentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedUniqueAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"nbvannhi"},"content":"        expectedUniqueAssessmentList.add(MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"nbvannhi"},"content":"        assessments.setAssessments(expectedUniqueAssessmentList);","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedUniqueAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e assessments.setAssessments((List\u003cAssessment\u003e) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"nbvannhi"},"content":"        assessments.add(PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e providedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"nbvannhi"},"content":"        providedList.add(MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"nbvannhi"},"content":"        assessments.setAssessments(providedList);","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"nbvannhi"},"content":"        AssessmentList expectedAssessmentList \u003d new AssessmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"nbvannhi"},"content":"        expectedAssessmentList.add(MISSION_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(expectedAssessmentList, assessments);","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"nbvannhi"},"content":"    public void setAssessments_listWithDuplicateAssessments_throwsDuplicateAssessmentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e listWithDuplicateAssessments \u003d Arrays.asList(PATH_01, PATH_01);","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(DuplicateAssessmentException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"ganhongyao"},"content":"                assessments.setAssessments(listWithDuplicateAssessments));","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nbvannhi":156,"ganhongyao":5}},{"path":"src/test/java/seedu/address/model/student/AssessmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"public class AssessmentTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Assessment(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"    public void constructor_invalidAssessment_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"        String invalidAssessment \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Assessment(invalidAssessment));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"    public void isValidAssessment() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"        // null assessment","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Assessment.isValidAssessment(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"        // invalid assessments","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Assessment.isValidAssessment(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Assessment.isValidAssessment(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"        // valid assessments","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Assessment.isValidAssessment(\"P01\")); // uppercase type","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Assessment.isValidAssessment(\"p01\")); // lowercase type","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Assessment.isValidAssessment(\"p 01\")); // with spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Assessment.isValidAssessment(\"p\")); // words only","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Assessment.isValidAssessment(\"01\")); // numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jonas-chow":3,"nbvannhi":34,"ganhongyao":1}},{"path":"src/test/java/seedu/address/model/student/GroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zhing22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zhing22"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zhing22"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zhing22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zhing22"},"content":"public class GroupListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zhing22"},"content":"    private static final Group TUTORIAL \u003d new Group(\"T03A\");","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zhing22"},"content":"    private static final Group RECITATION \u003d new Group(\"R05C\");","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zhing22"},"content":"    private final GroupList groups \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.contains(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"zhing22"},"content":"        assertFalse(groups.contains(TUTORIAL));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zhing22"},"content":"        assertTrue(groups.contains(TUTORIAL));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"    public void contains_groupWithSameNameInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(groups.contains(new Group(TUTORIAL.name)));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"zhing22"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.add(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zhing22"},"content":"    public void add_duplicateGroup_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"zhing22"},"content":"        GroupList expectedGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zhing22"},"content":"        expectedGroupList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zhing22"},"content":"    public void setGroup_nullTargetGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.setGroup(null, TUTORIAL));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"zhing22"},"content":"    public void setGroup_nullEditedGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.setGroup(TUTORIAL, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"zhing22"},"content":"    public void setGroup_targetGroupNotInList_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"zhing22"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e groups.setGroup(TUTORIAL, TUTORIAL));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"zhing22"},"content":"    public void setGroup_editedGroupIsSameGroup_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"zhing22"},"content":"        groups.setGroup(TUTORIAL, TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"zhing22"},"content":"        GroupList expectedGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"zhing22"},"content":"        expectedGroupList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"zhing22"},"content":"    public void setGroup_editedGroupHasSameName_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        Group editedPath01 \u003d new Group(TUTORIAL.name);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"zhing22"},"content":"        groups.setGroup(TUTORIAL, editedPath01);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"zhing22"},"content":"        GroupList expectedGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"zhing22"},"content":"        expectedGroupList.add(editedPath01);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"zhing22"},"content":"    public void setGroup_editedGroupHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"zhing22"},"content":"        groups.setGroup(TUTORIAL, TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"zhing22"},"content":"        GroupList expectedUniqueGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"zhing22"},"content":"        expectedUniqueGroupList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedUniqueGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"zhing22"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.remove(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"zhing22"},"content":"    public void remove_personDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"zhing22"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e groups.remove(TUTORIAL));","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"zhing22"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"zhing22"},"content":"        groups.remove(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"zhing22"},"content":"        GroupList expectedUniqueGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedUniqueGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"zhing22"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.setGroups((GroupList) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"zhing22"},"content":"    public void setGroups_groups_replacesOwnListWithProvidedUniqueGroupList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"zhing22"},"content":"        GroupList expectedUniqueGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"zhing22"},"content":"        expectedUniqueGroupList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"zhing22"},"content":"        groups.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedUniqueGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"zhing22"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e groups.setGroups((List\u003cGroup\u003e) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"zhing22"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"zhing22"},"content":"        groups.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"zhing22"},"content":"        List\u003cGroup\u003e providedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"zhing22"},"content":"        providedList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"zhing22"},"content":"        groups.setGroups(providedList);","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"zhing22"},"content":"        GroupList expectedGroupList \u003d new GroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"zhing22"},"content":"        expectedGroupList.add(TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"zhing22"},"content":"        assertEquals(expectedGroupList, groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"zhing22"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"zhing22"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(TUTORIAL, TUTORIAL);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e groups.setGroups(listWithDuplicateGroups));","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ganhongyao":9,"zhing22":147}},{"path":"src/test/java/seedu/address/model/student/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zhing22"},"content":"public class GroupTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zhing22"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Group(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zhing22"},"content":"    public void constructor_invalidGroupGroup_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zhing22"},"content":"        String invalidGroup \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zhing22"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Group(invalidGroup));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"    public void isValidGroup() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zhing22"},"content":"        // null Group number","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e Group.isValidGroup(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zhing22"},"content":"        // invalid Group numbers","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"        assertFalse(Group.isValidGroup(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"        assertFalse(Group.isValidGroup(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zhing22"},"content":"        // valid Group numbers","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zhing22"},"content":"        assertTrue(Group.isValidGroup(\"T03C\")); // upper case","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zhing22"},"content":"        assertTrue(Group.isValidGroup(\"r05b\")); // lower case","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zhing22"},"content":"        assertTrue(Group.isValidGroup(\"r03A\")); // mix of upper lower case","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Group.isValidGroup(\"r03 A\")); // with spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Group.isValidGroup(\"r\")); // words only","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Group.isValidGroup(\"03\")); // numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jonas-chow":3,"ganhongyao":1,"zhing22":36}},{"path":"src/test/java/seedu/address/model/student/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zhing22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zhing22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zhing22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"public class IdTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zhing22"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ID(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zhing22"},"content":"    public void constructor_invalidID_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zhing22"},"content":"        String invalidID \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zhing22"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ID(invalidID));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zhing22"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zhing22"},"content":"    public void isValidID() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zhing22"},"content":"        // null ID number","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zhing22"},"content":"        assertThrows(NullPointerException.class, () -\u003e ID.isValidID(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zhing22"},"content":"        // invalid ID numbers","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"1231231\")); // missing starting character","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"A123 456\")); // wrong starting character","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"E12345678\")); // exceed length","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"E123456\")); // below required length","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"E123m231\")); // alphabets within digits","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"zhing22"},"content":"        assertFalse(ID.isValidID(\"E123 456\")); // spaces within digits","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zhing22"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"zhing22"},"content":"        // valid ID numbers","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"zhing22"},"content":"        assertTrue(ID.isValidID(\"E1234567\")); // upper case","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zhing22"},"content":"        assertTrue(ID.isValidID(\"e7654321\")); // lower case","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zhing22"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"zhing22"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ganhongyao":2,"zhing22":39}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"        // Keywords match ID, but does not match name","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"e1234567\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withId(\"e1234567\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":69,"ganhongyao":5}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"ganhongyao":1}},{"path":"src/test/java/seedu/address/model/student/ScoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"public class ScoreTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Score(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"    public void constructor_invalidScore_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"        String invalidScore \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(invalidScore));","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"    public void isValidScore() {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"        // null score","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Score.isValidScore(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"        // invalid scores","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"\")); // empty string","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\" \")); // spaces only","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"score\")); // non-numeric","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"1101s\")); // alphabets within digits","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"101\")); // exceeding max score","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"100.1\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"100.01\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"11 .01\")); // spaces within digits","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"1101\")); // missing decimal point","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"11.\")); // missing integral part","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\".01\")); // missing decimal part","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"        assertFalse(Score.isValidScore(\"11.001\")); // more than 2 digits","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"        // valid scores","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"100\")); // max score","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"100.0\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"100.00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"0\")); // min score","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"0.0\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"0.00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"11\")); // integer score","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(Score.isValidScore(\"11.01\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"    public void reformatScore() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"11.01\", Score.reformatScore(\"11.01\")); // unchanged","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"100.00\", Score.reformatScore(\"100.00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"0.00\", Score.reformatScore(\"0.00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"11.10\", Score.reformatScore(\"11.1\")); // adding 1 additional 0","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"100.00\", Score.reformatScore(\"100.0\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"0.00\", Score.reformatScore(\"0.0\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"11.00\", Score.reformatScore(\"11.0\")); // adding 2 additional 0s","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"100.00\", Score.reformatScore(\"100\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(\"0.00\", Score.reformatScore(\"0\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nbvannhi":64,"ganhongyao":1}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORES_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        // same name and ID, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_RECITATION).withScores(VALID_SCORES_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        // different ID, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        Student editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        // ID differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        editedBob \u003d new PersonBuilder(BOB).withId(VALID_ID_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(editedBob.getId().value, VALID_ID_BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"        Student aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"        // different ID -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_RECITATION).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"        // different scores -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withScores(VALID_SCORES_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jonas-chow":4,"-":66,"ganhongyao":31}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_RECITATION).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_RECITATION).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"ganhongyao"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"ganhongyao"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"ganhongyao"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"ganhongyao"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"ganhongyao"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"ganhongyao"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"ganhongyao"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":110,"ganhongyao":60}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAssessmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"public class JsonAdaptedAssessmentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    // TODO: Make TypicalAssessments, then test with those","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    private static final String VALID_ASSESSMENT \u003d BENSON.getScores().keySet().iterator().next().value;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    private static final String INVALID_ASSESSMENT \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    public void toModelType_validAssessmentDetails_returnsGroup() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"        JsonAdaptedAssessment assessment \u003d new JsonAdaptedAssessment(VALID_ASSESSMENT, new HashMap\u003c\u003e());","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(new Assessment(VALID_ASSESSMENT), assessment.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    public void toModelType_invalidAssessmentName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        JsonAdaptedAssessment assessment \u003d new JsonAdaptedAssessment(INVALID_ASSESSMENT, new HashMap\u003c\u003e());","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        String expectedMessage \u003d Assessment.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assessment::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jonas-chow":31}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"public class JsonAdaptedGroupTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    private static final String VALID_GROUP \u003d BENSON.getGroups().get(0).name;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    private static final String INVALID_GROUP \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public void toModelType_validGroupDetails_returnsGroup() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(VALID_GROUP);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(BENSON.getGroups().get(0), group.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    public void toModelType_invalidGroupName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(INVALID_GROUP);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        String expectedMessage \u003d Group.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jonas-chow":27,"ganhongyao":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_ID \u003d \"E123\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_GROUP \u003d \"5\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_ASSESSMENT \u003d \"8\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"    private static final List\u003cString\u003e VALID_GROUPS \u003d BENSON.getGroups().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"            .map(group -\u003e group.name)","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"    private static final List\u003cString\u003e VALID_ASSESSMENTS \u003d BENSON.getScores().keySet().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"            .map(Assessment::getName)","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"    // TODO: Make a typical groups, typical assessments, and link them all together","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    private static final List\u003cGroup\u003e GROUP_LIST \u003d BENSON.getGroups();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"    private static final List\u003cAssessment\u003e ASSESSMENT_LIST \u003d List.copyOf(BENSON.getScores().keySet());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"    static void beforeAll() {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"        ASSESSMENT_LIST.forEach(assessment -\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"                assessment.setScore(BENSON.getId(), BENSON.getScores().get(assessment)));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"        assertEquals(BENSON, student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_ID, VALID_GROUPS, VALID_ASSESSMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"                student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(null, VALID_ID, VALID_GROUPS, VALID_ASSESSMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"                student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_ID, VALID_GROUPS, VALID_ASSESSMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"                student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(VALID_NAME, null, VALID_GROUPS, VALID_ASSESSMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"                student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_invalidGroups_notAddedToPerson() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"nbvannhi"},"content":"        List\u003cString\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_GROUPS);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"nbvannhi"},"content":"        invalidGroups.add(INVALID_GROUP);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_ID, invalidGroups, VALID_ASSESSMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"nbvannhi"},"content":"        Student modelStudent \u003d student.toModelType(GROUP_LIST, ASSESSMENT_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(modelStudent.getGroups().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"                .noneMatch(group -\u003e group.name.equals(INVALID_GROUP)));","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_invalidAssessment_notAddedToPerson() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"nbvannhi"},"content":"        List\u003cString\u003e invalidAssessments \u003d new ArrayList\u003c\u003e(VALID_ASSESSMENTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"nbvannhi"},"content":"        invalidAssessments.add(INVALID_ASSESSMENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_ID, VALID_GROUPS, invalidAssessments, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"nbvannhi"},"content":"        Student modelStudent \u003d student.toModelType(GROUP_LIST, ASSESSMENT_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"nbvannhi"},"content":"        assertTrue(modelStudent.getScores().keySet().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"nbvannhi"},"content":"                .noneMatch(assessment -\u003e assessment.value.equals(INVALID_ASSESSMENT)));","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"nbvannhi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"nbvannhi"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"nbvannhi"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"nbvannhi"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"nbvannhi"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"nbvannhi"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_ID, VALID_GROUPS, VALID_ASSESSMENTS, invalidTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"nbvannhi"},"content":"        assertThrows(IllegalValueException.class, () -\u003e student.toModelType(GROUP_LIST, ASSESSMENT_LIST));","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":123,"ganhongyao":2}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"ganhongyao":3}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public AddressBookBuilder withPerson(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":30,"ganhongyao":4}},{"path":"src/test/java/seedu/address/testutil/AllocDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.AddAllocCommand.AllocDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":" * A utility class to help with building AllocStudentDescriptor objects.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"public class AllocDescriptorBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    private AllocDescriptor descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptorBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        descriptor \u003d new AllocDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptorBuilder(AllocDescriptor descriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"        this.descriptor \u003d new AllocDescriptor(descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code Name} of the {@code AllocDescriptorBuilder} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code id} of the {@code AllocDescriptorBuilder} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptorBuilder withId(String id) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        descriptor.setId(new ID(id));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code id} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptorBuilder withGroup(String group) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"        descriptor.setGroup(new Group(group));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"    public AllocDescriptor build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        return descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ganhongyao":52}},{"path":"src/test/java/seedu/address/testutil/AssessmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"public class AssessmentBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"     * Takes in a list of students with scores, and returns a list of assessments with those scores reflected","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"    public static List\u003cAssessment\u003e createAssessmentListFromStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"        List\u003cAssessment\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"        for (Student student : students) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"            Map\u003cAssessment, Score\u003e studentScores \u003d student.getScores();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":"            for (Assessment assessment : studentScores.keySet()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":"                if (!result.contains(assessment)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"                    result.add(assessment);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"                Assessment resultAssessment \u003d result.get(result.indexOf(assessment));","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"                resultAssessment.setScore(student.getId(), studentScores.get(assessment));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":29}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nbvannhi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nbvannhi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"nbvannhi"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nbvannhi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"nbvannhi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"nbvannhi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"nbvannhi"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nbvannhi"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"nbvannhi"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nbvannhi"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"nbvannhi"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"nbvannhi"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"nbvannhi"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"nbvannhi"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"nbvannhi"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setId(student.getId());","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setGroups(student.getGroups());","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"nbvannhi"},"content":"        // descriptor.setScore(student.getScores());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"nbvannhi"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"nbvannhi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"nbvannhi"},"content":"     * Sets the {@code id} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder withId(String id) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setId(new ID(id));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"nbvannhi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nbvannhi"},"content":"     * Parses the {@code groups} into a {@code List\u003cGroup\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"nbvannhi"},"content":"     * that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder withGroups(String... groups) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"nbvannhi"},"content":"        List\u003cGroup\u003e groupList \u003d Stream.of(groups).map(Group::new).collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setGroups(groupList);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"nbvannhi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"nbvannhi"},"content":"     * Sets the {@code scores} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder withScores(Map\u003cAssessment, Score\u003e scores) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setScores(scores);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"nbvannhi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"nbvannhi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"nbvannhi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"nbvannhi"},"content":"     * that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"nbvannhi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"nbvannhi"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"nbvannhi"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"nbvannhi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"nbvannhi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"nbvannhi"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nbvannhi"},"content":"        return descriptor;","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"nbvannhi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"nbvannhi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"nbvannhi":92}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    public static final String DEFAULT_NAME \u003d \"T01A\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"    private String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    private List\u003cID\u003e students;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"     * Initializes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"        name \u003d groupToCopy.name;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        students \u003d new ArrayList\u003c\u003e(groupToCopy.students);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code Name} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code students} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"    public GroupBuilder withStudents(Student... students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        List\u003cStudent\u003e studentList \u003d new ArrayList\u003c\u003e(Arrays.asList(students));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        this.students \u003d studentList.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"                .map(student -\u003e student.getId())","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"    public Group build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        return new Group(name, students);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ganhongyao":55}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.ID;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    public static final String DEFAULT_ID \u003d \"E0543948\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    private ID id;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    private List\u003cGroup\u003e groups;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"    private Map\u003cAssessment, Score\u003e scores;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        id \u003d new ID(DEFAULT_ID);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"        scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"     * Initializes the PersonBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"    public PersonBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        id \u003d studentToCopy.getId();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        groups \u003d new ArrayList\u003c\u003e(studentToCopy.getGroups());","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        scores \u003d new HashMap\u003c\u003e(studentToCopy.getScores());","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code ID} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"        this.id \u003d new ID(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"     * Parses the {@code groups} into a {@code List\u003cGroup} and set it to the {@code Student} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"    public PersonBuilder withGroups(String... groups) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"        this.groups \u003d SampleDataUtil.getGroupList(groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"     * Sets the {@code scores} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"    public PersonBuilder withScores(Map\u003cAssessment, Score\u003e scores) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"        this.scores \u003d scores;","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"    public Student build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"        return new Student(name, id, groups, scores, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":59,"ganhongyao":40}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        sb.append(PREFIX_ID + student.getId().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        student.getGroups().stream().forEach(","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"            s -\u003e sb.append(PREFIX_GROUP + s.name + \" \")","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.value).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        if (descriptor.getGroups().isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"            List\u003cGroup\u003e groups \u003d descriptor.getGroups().get();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"            if (groups.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"                sb.append(PREFIX_GROUP);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"                groups.forEach(s -\u003e sb.append(PREFIX_GROUP).append(s.name).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":41,"ganhongyao":29}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"ganhongyao":8}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_RECITATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORES_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORES_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Assessment;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Score;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    public static final Student ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withId(\"E0543948\")","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T07A\", \"R01C\")","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"P01\"), new Score(\"100\")))","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    public static final Student BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withId(\"E0473477\")","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T04B\", \"R01D\")","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            .withScores(","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                    Map.of(new Assessment(\"P01\"), new Score(\"100\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                            new Assessment(\"P02\"), new Score(\"100\"))","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"                    )","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"    public static final Student CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withId(\"E0538201\")","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T07D\", \"R03A\")","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"P01\"), new Score(\"100\"))).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"    public static final Student DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withId(\"E0438241\")","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T07D\", \"R02C\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"    public static final Student ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withId(\"E0582305\")","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"P01\"), new Score(\"73\"))).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"    public static final Student FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withId(\"E0537266\")","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T03K\", \"R01C\")","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"P01\"), new Score(\"84\"))).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    public static final Student GEORGE \u003d new PersonBuilder().withName(\"George Best\").withId(\"E0555001\")","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T05H\", \"R05B\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"    public static final Student HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withId(\"E0548201\")","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T08A\", \"R07D\")","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"P01\"), new Score(\"100\"))).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"    public static final Student IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withId(\"E0533301\")","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(\"T09E\", \"R06C\")","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"            .withScores(Map.of(new Assessment(\"M01\"), new Score(\"98\"))).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"    public static final Student AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(VALID_GROUP_TUTORIAL)","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"            .withScores(VALID_SCORES_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"    public static final Student BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"            .withGroups(VALID_GROUP_RECITATION)","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"            .withScores(VALID_SCORES_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"        for (Student student : getTypicalPersons()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"    public static List\u003cStudent\u003e getTypicalPersons() {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":40,"ganhongyao":50}}]
