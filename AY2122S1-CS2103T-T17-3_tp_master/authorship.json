[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CrownKira"},"content":"### Description","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"CrownKira"},"content":"\u003c!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. --\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"CrownKira"},"content":"### Type of change","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"- [ ] Bug fix (non-breaking change which fixes an issue)","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"- [ ] New feature (non-breaking change which adds functionality)","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"CrownKira"},"content":"- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"CrownKira"},"content":"- [ ] This change requires a documentation update","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"CrownKira"},"content":"- [ ] Code quality improvements","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"CrownKira"},"content":"### How to test","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"\u003c!-- Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. --\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"CrownKira"},"content":"### Checklist","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"CrownKira"},"content":"\u003c!-- Please delete options that are not relevant. --\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"CrownKira"},"content":"- [ ] I have tested this code","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"CrownKira"},"content":"- [ ] I have updated the documentation","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"CrownKira":22}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T17-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"**LeadsForce** is a new way to streamline the process for student financial advisors to find the right clients to contact. We aim to help you manage your leads by making it effortless to store information regarding them and retrieving this information seamlessly. Finding your next lead has never been easier.","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"CrownKira"},"content":"For detailed documentation of this project, refer to the [LeadsForce](https://ay2122s1-cs2103t-t17-3.github.io/tp/) Website.","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"## About Us","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"CrownKira"},"content":"For details on our project team members, do check out the [AboutUs](https://ay2122s1-cs2103t-t17-3.github.io/tp/AboutUs.html) page.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"CrownKira"},"content":"## User Guide","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"Curious to know how to use LeadsForce? We\u0027ve got you! You may refer to the [User Guide](https://ay2122s1-cs2103t-t17-3.github.io/tp/UserGuide.html) for more details.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"CrownKira"},"content":"## Developer Guide","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"If you would like to contribute to this project, do head over to [Developer Guide](https://ay2122s1-cs2103t-t17-3.github.io/tp/DeveloperGuide.html) to get started!","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"CrownKira"},"content":"## Acknowledgments","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"CrownKira"},"content":"This project is morphed from the AddressBook-Level3 project, created by the SE-EDU initiative.","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"CrownKira":12,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Domszy":1,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"You can reach us through the following email addresses:","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"* Benedict Chua Jun Jie: `benedictchuajj@u.nus.edu`","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"* Dominic Siew Zhen Yu: `dominic.siew@u.nus.edu`","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"* Keith Tan Shi Jun: `keithtanshijun@u.nus.edu`","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"* Toh Kar Wi: `e0544032@u.nus.edu`","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"* Wong Yun Rui Chris: `wong.yunruichris@u.nus.edu`","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"### Benedict Chua Jun Jie","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"\u003cimg src\u003d\"images/benedictchuajj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"[[github](https://github.com/benedictchuajj)]","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"[[portfolio](team/benedictchuajj.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"* Role: Developer","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"* Responsibilities: Team Lead","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"### Dominic Siew Zhen Yu","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"\u003cimg src\u003d\"images/domszy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"[[github](http://github.com/Domszy)]","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"[[portfolio](team/domszy.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"* Role: Developer","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"### Keith Tan Shi Jun","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"\u003cimg src\u003d\"images/kt27learn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"[[github](http://github.com/KT27Learn)] [[portfolio](team/kt27learn.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"### Toh Kar Wi","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"\u003cimg src\u003d\"images/crownkira.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"[[github](http://github.com/CrownKira)]","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"[[portfolio](team/crownkira.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"### Wong Yun Rui Chris","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"\u003cimg src\u003d\"images/wyrchris.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"[[github](http://github.com/wyrchris)]","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"[[portfolio](team/wyrchris.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"benedictchuajj":32,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"CrownKira"},"content":"# **LeadsForce - Developer Guide**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"By: `AY2122S1-CS2103T-T17-3`","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"CrownKira"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-09-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2021-09-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"CrownKira"},"content":"**Target user**: Student Financial Advisor","lastModifiedDate":"2021-10-01"},{"lineNumber":265,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"CrownKira"},"content":"* Has a need to manage a significant number of contacts","lastModifiedDate":"2021-10-01"},{"lineNumber":269,"author":{"gitId":"CrownKira"},"content":"* Short on time as they have to juggle both school and work at the same time","lastModifiedDate":"2021-10-01"},{"lineNumber":270,"author":{"gitId":"CrownKira"},"content":"* Trying to sell financial products effectively by finding the right clients","lastModifiedDate":"2021-10-01"},{"lineNumber":271,"author":{"gitId":"CrownKira"},"content":"* Job is competitive in nature","lastModifiedDate":"2021-10-01"},{"lineNumber":272,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":273,"author":{"gitId":"CrownKira"},"content":"**Value propositions**:","lastModifiedDate":"2021-10-01"},{"lineNumber":274,"author":{"gitId":"CrownKira"},"content":"* LeadsForce is a new way to streamline the process for student financial advisors to find the right clients to contact. We aim to help you manage your leads by making it effortless to store information regarding them and retrieving this information seamlessly. Finding your next lead has never been easier.","lastModifiedDate":"2021-10-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"CrownKira"},"content":"| Priority | As a …​                                    | I can …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-10-01"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | add my clients information     | easily refer to it         |","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | delete contact information     | remove contacts who I no longer keep in touch with                                                                       |","lastModifiedDate":"2021-10-01"},{"lineNumber":286,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | lookup a client in the address book | retrieve relevant information |","lastModifiedDate":"2021-10-01"},{"lineNumber":287,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | search for a client by their name |                         |","lastModifiedDate":"2021-10-01"},{"lineNumber":288,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | save my address book locally   | access the information again when I reopen the application |","lastModifiedDate":"2021-10-01"},{"lineNumber":289,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | see hints in error messages when I input a wrong command | know how to rectify my command |","lastModifiedDate":"2021-10-01"},{"lineNumber":290,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | be warned that I am about to add the same user again |                         |","lastModifiedDate":"2021-10-01"},{"lineNumber":291,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | have the addressbook to be functional 99.999 percent of the time | not get frustrated and find another app to use |","lastModifiedDate":"2021-10-01"},{"lineNumber":292,"author":{"gitId":"CrownKira"},"content":"| `* * *`  | user                                       | exit the app safely            | my data will not be corrupted |","lastModifiedDate":"2021-10-01"},{"lineNumber":293,"author":{"gitId":"CrownKira"},"content":"| `* *`    | user                                       | edit my client\u0027s information   | keep track of relevant client information |","lastModifiedDate":"2021-10-01"},{"lineNumber":294,"author":{"gitId":"CrownKira"},"content":"| `* *`    | user                                       | sort my address book           | quickly identify the clients based on the last time I\u0027ve seen them or the number of financial plans they have |","lastModifiedDate":"2021-10-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"CrownKira"},"content":"(For all use cases below, the **System** is the `LeadsForce` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-01"},{"lineNumber":301,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":302,"author":{"gitId":"CrownKira"},"content":"**Use case: Add a person**","lastModifiedDate":"2021-10-01"},{"lineNumber":303,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":304,"author":{"gitId":"CrownKira"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":305,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":306,"author":{"gitId":"CrownKira"},"content":"1. User requests to add a person","lastModifiedDate":"2021-10-01"},{"lineNumber":307,"author":{"gitId":"CrownKira"},"content":"2. LeadsForce adds the person to the contact book","lastModifiedDate":"2021-10-01"},{"lineNumber":308,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"CrownKira"},"content":"   Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":310,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":311,"author":{"gitId":"CrownKira"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":312,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":313,"author":{"gitId":"CrownKira"},"content":"* 1a.  The user forgets to input the required info (name and email)","lastModifiedDate":"2021-10-01"},{"lineNumber":314,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":315,"author":{"gitId":"CrownKira"},"content":"    * 1a1. LeadsForce shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":316,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":317,"author":{"gitId":"CrownKira"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":318,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"CrownKira"},"content":"2.  LeadsForce shows a list of persons","lastModifiedDate":"2021-10-01"},{"lineNumber":326,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"CrownKira"},"content":"4.  LeadsForce deletes the person","lastModifiedDate":"2021-10-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"CrownKira"},"content":"    * 3a1. LeadsForce shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"CrownKira"},"content":"**Use case: Search for a person**","lastModifiedDate":"2021-10-01"},{"lineNumber":344,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":345,"author":{"gitId":"CrownKira"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":346,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":347,"author":{"gitId":"CrownKira"},"content":"1. User requests to list persons","lastModifiedDate":"2021-10-01"},{"lineNumber":348,"author":{"gitId":"CrownKira"},"content":"2. LeadsForce shows a list of persons","lastModifiedDate":"2021-10-01"},{"lineNumber":349,"author":{"gitId":"CrownKira"},"content":"3. User requests to search using specific keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":350,"author":{"gitId":"CrownKira"},"content":"4. LeadsForce shows the list of all people which match the keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":351,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":352,"author":{"gitId":"CrownKira"},"content":"   Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":353,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":354,"author":{"gitId":"CrownKira"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":355,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":356,"author":{"gitId":"CrownKira"},"content":"* 2a.  The list is empty.","lastModifiedDate":"2021-10-01"},{"lineNumber":357,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":358,"author":{"gitId":"CrownKira"},"content":"  Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":359,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":360,"author":{"gitId":"CrownKira"},"content":"* 3a. No person fits the inputted keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":361,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":362,"author":{"gitId":"CrownKira"},"content":"  Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":363,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":364,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"CrownKira"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"CrownKira"},"content":"4. The system should respond within two seconds.","lastModifiedDate":"2021-10-01"},{"lineNumber":372,"author":{"gitId":"CrownKira"},"content":"5. Should work without requiring an installer.","lastModifiedDate":"2021-10-01"},{"lineNumber":373,"author":{"gitId":"CrownKira"},"content":"6. The system should work on a 64-bit environment.","lastModifiedDate":"2021-10-01"},{"lineNumber":374,"author":{"gitId":"CrownKira"},"content":"7. The product should be usable by a student who has little to much experience in using computers.","lastModifiedDate":"2021-10-01"},{"lineNumber":375,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":377,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"CrownKira"},"content":"* **Command Line Interface (CLI)**: Text-based user interface that is used to view and manage device files","lastModifiedDate":"2021-10-01"},{"lineNumber":383,"author":{"gitId":"CrownKira"},"content":"* **Graphical User Interface (GUI)**: A visual way of interacting with a device using a variety of items","lastModifiedDate":"2021-10-01"},{"lineNumber":384,"author":{"gitId":"CrownKira"},"content":"* **Leads**: refers to contact with a potential customer, also known as a “prospect”","lastModifiedDate":"2021-10-01"},{"lineNumber":385,"author":{"gitId":"CrownKira"},"content":"* **Risk Appetite**: level of risk that a lead is prepared to accept in pursuit of his/her objectives, before action is deemed necessary to reduce the risk","lastModifiedDate":"2021-10-01"},{"lineNumber":386,"author":{"gitId":"CrownKira"},"content":"* **Disposable Income**: total personal income minus personal current taxes","lastModifiedDate":"2021-10-01"},{"lineNumber":387,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"CrownKira"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-09-27"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"CrownKira"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CrownKira":83,"-":355}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CrownKira"},"content":"LeadsForce is a desktop app that is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"It provides a new way to streamline the process for student financial advisors to find the right clients to contact.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"We aim to help you manage your leads by making it effortless to store information regarding them and retrieving this information seamlessly.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"CrownKira"},"content":"Finding your next lead has never been easier.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Domszy"},"content":"## Table of Contents","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"Domszy"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Domszy"},"content":"* [Client Information](#client-information)","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"Domszy"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"Domszy"},"content":"    * [Create new contact: create](#create-new-contact--create)","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Domszy"},"content":"    * [Retrieve particular contact: view](#retrieve-particular-contact--view)","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Domszy"},"content":"    * [Update existing contact: update](#update-existing-contact--update)","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Domszy"},"content":"    * [Delete particular contact: delete](#delete-particular-contact--delete)","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    * [List all contacts](#list-all-contacts--list)","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Domszy"},"content":"    * [Clearing all entries: clear](#clearing-all-entries--clear)","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Domszy"},"content":"    * [Sort Contacts: sort](#sort-contacts--sort)","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    * [Locating person by name: find](#locating-clients-by-keywords--find)","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    * [Locating clients by keywords](#locating-clients-by-keywords--search)","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    * [Filter current list](#filter-current-list-by-keywords--filter)","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Domszy"},"content":"    * [Exiting the program: exit](#exiting-the-program--exit)","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Domszy"},"content":"    * [Saving data](#saving-the-data)","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"Domszy"},"content":"    * [Edit data file](#editing-data-file)","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Domszy"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"Domszy"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Domszy"},"content":"2. Download the latest `leadsforce.jar` from [here](https://github.com/AY2122S1-CS2103T-T17-3/tp/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Domszy"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your LeadsForce.","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CrownKira"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"CrownKira"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"CrownKira"},"content":"    * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Domszy"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Domszy"},"content":"## Client Information","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"CrownKira"},"content":"Every client that is registered in LeadsForce have the following attributes that has the corresponding attribute type and argument tag.","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Domszy"},"content":"Client Attribute | Type of Attribute | Argument Tag","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"Domszy"},"content":"-----------------|-----------------|-----------------","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"Domszy"},"content":"Client ID (**unique**) | integer | None. Assigned on creation of new contact","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"Domszy"},"content":"Name (**Compulsory**) | String | name/","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"Domszy"},"content":"Email (**Compulsory**)| String (email address)| email/","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"Domszy"},"content":"Contact number | Integer (8 digits long)| contact/","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"Domszy"},"content":"Risk appetite | Integer from 1-5, \u003cbr\u003ewhere 1 is very low risk tolerance and 5 is very high risk tolerance| risk-appetite/","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"Domszy"},"content":"Last met/contacted | Date | last-met/","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"Domszy"},"content":"Current financial plans | List of Strings | current-plans-add/\u003cbr\u003ecurrent-plans-remove/","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"Domszy"},"content":"Disposable Income | Integer | disposable-income/","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":86,"author":{"gitId":"Domszy"},"content":"* In the format for the commands provided, words which are in UPPERCASE refers to input that the user must key in","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"Domszy"},"content":"* Inputs in square brackets are optional input:\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"Domszy"},"content":"  e.g. `KEYWORD [OTHER_KEYWORD]` can be in the form of `firstName` or `firstName lastName`","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"CrownKira"},"content":"* Inputs with `…`​ at the end refers to inputs that can be used multiple times in that command","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"CrownKira"},"content":"  .\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Domszy"},"content":"  e.g. `[/tag ATTRIBUTE]…​` can be in the form of `/email @gmail.com` or `/email @gmail.com /risk-appetite 5`","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"CrownKira"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Domszy"},"content":"### Create New Contact : `create`","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Domszy"},"content":"Adds a new client to the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"Format: `create {client’s name} \u003cemail\u003e/{email} \u003cphone-no\u003e/{phone number} \u003crisk-appetite\u003e/{risk appetite}...​`","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Domszy"},"content":"* A client must have minimally the name and email tag filled during creation","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"Domszy"},"content":"* Any other tags are optional","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"Domszy"},"content":"* Tags that can be added are as seen in the client information in the Client Info Section","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Domszy"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"* `create Benedict Chua email/benchua@hotmail.com`","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"* `create Keith email/keithtan@ymail.com phone-no/12345678 risk-appetite/4`","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"Domszy"},"content":"### Retrieve Particular Contact : `view`","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"Domszy"},"content":"View a particular client on your address book to view the client’s information.","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"Domszy"},"content":"Format: `view {client’s id number}`","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"Domszy"},"content":"Example: `view 2` would be used to view client 2\u0027s information","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"Domszy"},"content":"### Update Existing Contact : `update`","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"CrownKira"},"content":"Update the information of existing users by using the “update” command. This can be used to change the","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"CrownKira"},"content":"attributes of a client, using the tag of the client’s attribute.","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"Domszy"},"content":"* Multiple attributes could be changed with one command.","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"Format: `update {Client’s id number} \u003cattribute\u003e/{changed value of attribute} ...`","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"Domszy"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"wyrchris"},"content":"* `update 15 name/Dominic` command changes the name of client 15 to “Dominic”.","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"wyrchris"},"content":"* `update 3 contact-number/12345678 risk-appetite/5` command changes the contact number to “12345678” and","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"CrownKira"},"content":"  the risk appetite to 5 for the client who’s id number is 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"Domszy"},"content":"### Delete particular contact : `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"Domszy"},"content":"Deletes an existing client from the address book using any specified attribute to identify the client.","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"wyrchris"},"content":"Format: `delete \u003cattribute\u003e/{value}`","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Domszy"},"content":"* Attributes would be limited to client id, email or contact number.","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"Domszy"},"content":"* It is possible to bulk delete multiple clients by inputting multiple keys separated by ‘,’.","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"* `delete id/4,6,7`(deletes clients with client id 4, client id 6 and client 7)","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"* `delete email/keithtan@gmail.com`(deletes a client whose email address is keithtan@gmail.com)","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"CrownKira"},"content":"### List all contacts : `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"CrownKira"},"content":"Shows a list of all tasks in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"Domszy"},"content":"### Sort Contacts : `sort`","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Domszy"},"content":"Sorts clients in order based off the inputted attribute","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"Format: `sort \u003cattribute\u003e/{ASC/DESC}`","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Domszy"},"content":"* The asc and desc tag dictates whether filtered client list is sorted in ascending or descending order","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"* `sort risk-appetite/ASC`","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2021-10-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":170,"author":{"gitId":"wyrchris"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-03"},{"lineNumber":181,"author":{"gitId":"wyrchris"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2021-10-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":183,"author":{"gitId":"wyrchris"},"content":"### Locating clients by keywords : `search`","lastModifiedDate":"2021-10-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"Domszy"},"content":"Finds clients whose contacts match with the given keywords.","lastModifiedDate":"2021-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"wyrchris"},"content":"Format: `search KEYWORD [MORE_KEYWORDS]... [ATTRIBUTE/ATTRIBUTE_KEYWORD]...`","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"wyrchris"},"content":"* `KEYWORD` and `MORE_KEYWORDS` will be used to match will all attribute of the person.","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"wyrchris"},"content":"* `ATTRIBUTE/` refers to the argument tag for the client\u0027s attribute.","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"wyrchris"},"content":"* `ATTRIBUTE_KEYWORD` refers to the keyword that is to be matched with the corresponding client attribute.","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"wyrchris"},"content":"* If no `KEYWORD` is provided, search will be based on `ATTRIBUTE/ATTRIBUTE_KEYWORD` only.","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"wyrchris"},"content":"* The search is case-insensitive. e.g `keith` will match `Keith`.","lastModifiedDate":"2021-10-03"},{"lineNumber":194,"author":{"gitId":"wyrchris"},"content":"* The order of the keywords does not matter. e.g. `John Doe` will match `Doe John`.","lastModifiedDate":"2021-10-03"},{"lineNumber":195,"author":{"gitId":"CrownKira"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"wyrchris"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"CrownKira"},"content":"* Only clients whose attribute matches with the attribute keyword will be returned (i.e. `AND` search), if attribute keyword is provided.","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"wyrchris"},"content":"  e.g. `Tom Tim e/@gmail.com` will return `Tom Lee e/Tom@gmail.com` and not `Tim Shum e/Tim@yahoo.com`.","lastModifiedDate":"2021-10-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"wyrchris"},"content":"* `search John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-03"},{"lineNumber":202,"author":{"gitId":"wyrchris"},"content":"* `search alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"wyrchris"},"content":"### Filter current list by keywords : `filter`","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"wyrchris"},"content":"Filter the current list by the given keywords.","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"wyrchris"},"content":"Format: `filter [KEYWORD]... [ATTRIBUTE/ATTRIBUTE_KEYWORD]...`","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"wyrchris"},"content":"* Works similar to `search` but `filter` works based on the current list shown as opposed to entire lists of contacts.","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"wyrchris"},"content":"* `KEYWORD` will be used to match will all attribute of the person.","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"wyrchris"},"content":"* If no `KEYWORD` is provided, then filter will be based on `ATTRIBUTE/ATTRIBUTE_KEYWORDS`","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"wyrchris"},"content":"* `ATTRIBUTE/` refers to the argument tag for the client\u0027s attribute.","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"wyrchris"},"content":"* `ATTRIBUTE_KEYWORD` refers to the keyword that is to be matched with the corresponding client attribute.","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"wyrchris"},"content":"* The filter is case-insensitive. e.g `keith` will match `Keith`.","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"wyrchris"},"content":"* The order of the keywords does not matter. e.g. `John Doe` will match `Doe John`.","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"wyrchris"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` filter).","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"wyrchris"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"wyrchris"},"content":"* Only clients whose attribute matches with the attribute keyword will be returned (i.e. `AND` search), if attribute keyword is provided.","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"wyrchris"},"content":"  e.g. `Tom Tim e/@gmail.com` will return `Tom Lee e/Tom@gmail.com` and not `Tim Shum e/Tim@yahoo.com`.","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"wyrchris"},"content":"Examples:","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"wyrchris"},"content":"* `search John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"wyrchris"},"content":"* `search alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"CrownKira"},"content":"LeadsForce\u0027s data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Domszy"},"content":"### Edit data file","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"CrownKira"},"content":"LeadsForce\u0027s data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"CrownKira"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous LeadsForce home folder.","lastModifiedDate":"2021-09-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"Domszy"},"content":"Action | Format | Examples","lastModifiedDate":"2021-09-24"},{"lineNumber":262,"author":{"gitId":"Domszy"},"content":"--------|---------|---------","lastModifiedDate":"2021-09-24"},{"lineNumber":263,"author":{"gitId":"wyrchris"},"content":"**Create** | `create {client’s name} \u003cemail\u003e/{email} \u003cphone-no\u003e/{phone number} \u003crisk-appetite\u003e/{risk appetite}`| create benedict email/benedict@gmail.com phone-no/90909898 risk-appetite/3 |","lastModifiedDate":"2021-10-03"},{"lineNumber":264,"author":{"gitId":"Domszy"},"content":"**View** | `view {client’s id number}` | view 123 |","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"wyrchris"},"content":"**Delete** | `delete \u003cattribute\u003e/{value}` | delete id/4,6,7  |","lastModifiedDate":"2021-10-03"},{"lineNumber":266,"author":{"gitId":"wyrchris"},"content":"**Update** | `update {Client’s id number} \u003cattribute\u003e/{change value of attribute}` | update 1234 name/Dominic phone-number/12345678 |","lastModifiedDate":"2021-10-03"},{"lineNumber":267,"author":{"gitId":"Domszy"},"content":"**List** | `list` | - |","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"wyrchris"},"content":"**Find** | `find KEYWORD [OTHER_KEYWORD]` | find alex tom |","lastModifiedDate":"2021-10-03"},{"lineNumber":269,"author":{"gitId":"wyrchris"},"content":"**Search** | `search [KEYWORD]... [ATTRIBUTE/ATTRIBUTE_KEYWORD]...` | search * email/doe@gmail.com risk-appetite/5 |","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"wyrchris"},"content":"**Filter** | `filter KEYWORD [OTHER_KEYWORD] [ATTRIBUTE/ATTRIBUTE_KEYWORD]...` | search * email/doe@gmail.com p/9 |","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"wyrchris"},"content":"**Sort** | `sort \u003cattribute\u003e/{ASC/DESC}` | sort risk-appetite/asc |","lastModifiedDate":"2021-10-03"},{"lineNumber":272,"author":{"gitId":"Domszy"},"content":"**Exit** | `exit` | - |","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Domszy":66,"CrownKira":21,"-":128,"wyrchris":57}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"CrownKira"},"content":"    content: \"LeadsForce\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"CrownKira":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: LeadsForce","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"[![codecov](https://codecov.io/gh/benedictchuajj/tp/branch/master/graph/badge.svg?token\u003d77324c12-7eb0-47de-aa9b-8dea200f09d2)](https://codecov.io/gh/benedictchuajj/tp)","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"**LeadsForce is a new way to streamline the process for student financial advisors to find the right clients to contact.** We aim to help you manage your leads by making it effortless to store information regarding them and retrieving this information seamlessly. Finding your next lead has never been easier.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"* If you are interested in using LeadsForce, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"* If you are interested about developing LeadsForce, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":5,"-":14}},{"path":"docs/team/benedictchuajj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: Benedict\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":1,"-":45}},{"path":"docs/team/crownkira.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: Kar Wi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":1,"-":45}},{"path":"docs/team/domszy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: Dominic\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":1,"-":45}},{"path":"docs/team/kt27learn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: Keith\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":1,"-":45}},{"path":"docs/team/wyrchris.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"title: Chris\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benedictchuajj":1,"-":45}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_TOO_MANY_FIELDS \u003d \"Too many fields inputted into the command! \\n%1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_INVALID_PERSON_CLIENTID \u003d \"The person client id provided is invalid\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    public static final String MESSAGE_VIEW_SUCCESS \u003d \"Viewing person: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    public static final String MESSAGE_VIEW_INVALID_CLIENT_ID \u003d \"There\u0027s no contact with client ID %s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":2,"benedictchuajj":2,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"     *   Ignores case, a full word match is not required.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"     *       containsWordIgnoreCase(\"A Bc def\", \"A B\") \u003d\u003d true","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"    public static boolean containsIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        String preppedWord \u003d word;","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        return sentence.toLowerCase().contains(word.toLowerCase());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"     * Returns true if {@code s} represents a non-negative integer","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"    public static boolean isNonNegativeInteger(String s) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benedictchuajj":18,"-":68,"wyrchris":21}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    /** Returns an unmodifiable view of the person to view */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    ObservableList\u003cPerson\u003e getPersonToView();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"benedictchuajj":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        addressBookParser \u003d new AddressBookParser(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        if (command instanceof AddCommand) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"            model.getAddressBook().incrementClientCounter();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"    public ObservableList\u003cPerson\u003e getPersonToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"        return model.getPersonToView();","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KT27Learn":7,"benedictchuajj":5,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_RISKAPPETITE + \"RISK APPETITE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_DISPOSABLEINCOME + \"DISPOSABLE INCOME \"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_CURRENTPLAN + \"CURRENT PLAN \"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_LASTMET + \"LAST MET \"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_RISKAPPETITE + \"3 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_DISPOSABLEINCOME + \"4000 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_CURRENTPLAN + \"Prudential Proshield \"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_LASTMET + \"21-03-2020 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":12,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTID;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"            + \": Deletes the person identified by the client id and/or email used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_CLIENTID + \"CLIENT ID \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_CLIENTID + \" 1\" + \" \" + PREFIX_EMAIL","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"            + \" test@gmail.com\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_DELETE_PERSON_FAILURE \u003d \"Person not found in list\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicates;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"    public DeleteCommand(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        Person personToDelete;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"            personToDelete \u003d model.deletePersonByFields(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"            throw new CommandException(MESSAGE_DELETE_PERSON_FAILURE);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 predicates.equals(((DeleteCommand) other).predicates)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":19,"-":38,"wyrchris":2}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"Domszy"},"content":"            + \"[\" + PREFIX_LASTMET + \"LAST MET] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Domszy"},"content":"            + \"[\" + PREFIX_CURRENTPLAN + \"CURRENTPLAN] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        ClientId oldClientId \u003d personToEdit.getClientId();","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"        RiskAppetite updateRiskAppetite \u003d editPersonDescriptor.getRiskAppetite()","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"                .orElse(personToEdit.getRiskAppetite());","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        DisposableIncome updatedDisposableIncome \u003d editPersonDescriptor.getDisposableIncome()","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"                .orElse(personToEdit.getDisposableIncome());","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Domszy"},"content":"        CurrentPlan updatedCurrentPlan \u003d editPersonDescriptor.getCurrentPlan().orElse(personToEdit.getCurrentPlan());","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Domszy"},"content":"        LastMet updatedLastMet \u003d editPersonDescriptor.getLastMet().orElse(personToEdit.getLastMet());","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"        return new Person(oldClientId, updatedName, updatedPhone, updatedEmail, updatedAddress, updateRiskAppetite,","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"            updatedDisposableIncome, updatedCurrentPlan, updatedLastMet, updatedTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"        private ClientId clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"        private RiskAppetite riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"        private DisposableIncome disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"Domszy"},"content":"        private LastMet lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Domszy"},"content":"        private CurrentPlan currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"            setClientId(toCopy.clientId);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"Domszy"},"content":"            setLastMet(toCopy.lastMet);","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"Domszy"},"content":"            setCurrentPlan(toCopy.currentPlan);","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"KT27Learn"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, riskAppetite, disposableIncome,","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"KT27Learn"},"content":"                currentPlan, lastMet, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"KT27Learn"},"content":"        public void setClientId(ClientId clientId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"KT27Learn"},"content":"            this.clientId \u003d clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"Domszy"},"content":"        public void setLastMet(LastMet lastMet) {","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"Domszy"},"content":"            this.lastMet \u003d lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"Domszy"},"content":"        public Optional\u003cLastMet\u003e getLastMet() {","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"Domszy"},"content":"            return Optional.ofNullable(lastMet);","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"Domszy"},"content":"        public void setCurrentPlan(CurrentPlan currentPlan) {","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"Domszy"},"content":"            this.currentPlan \u003d currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"Domszy"},"content":"        public Optional\u003cCurrentPlan\u003e getCurrentPlan() {","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"Domszy"},"content":"            return Optional.ofNullable(currentPlan);","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"KT27Learn"},"content":"        public void setRiskAppetite(RiskAppetite riskAppetite) {","lastModifiedDate":"2021-10-08"},{"lineNumber":234,"author":{"gitId":"KT27Learn"},"content":"            this.riskAppetite \u003d riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"KT27Learn"},"content":"        public Optional\u003cRiskAppetite\u003e getRiskAppetite() {","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"KT27Learn"},"content":"            return Optional.ofNullable(riskAppetite);","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":240,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"KT27Learn"},"content":"        public void setDisposableIncome(DisposableIncome disposableIncome) {","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"KT27Learn"},"content":"            this.disposableIncome \u003d disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"KT27Learn"},"content":"        public Optional\u003cDisposableIncome\u003e getDisposableIncome() {","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"KT27Learn"},"content":"            return Optional.ofNullable(disposableIncome);","lastModifiedDate":"2021-10-08"},{"lineNumber":247,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"Domszy"},"content":"                    \u0026\u0026 getLastMet().equals(e.getLastMet())","lastModifiedDate":"2021-10-08"},{"lineNumber":285,"author":{"gitId":"Domszy"},"content":"                    \u0026\u0026 getCurrentPlan().equals(getCurrentPlan())","lastModifiedDate":"2021-10-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"benedictchuajj":4,"KT27Learn":34,"Domszy":26,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter the currently displayed list of persons by\"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            + \"Example: \" + COMMAND_WORD + \"e/example.com\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    public FilterCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        model.filterFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wyrchris":38}},{"path":"src/main/java/seedu/address/logic/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Search all persons whose names contain any of \"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]... [ATTRIBUTE/ATTRIBUTE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie a/Blk 40\";","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    public SearchCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"                || (other instanceof SearchCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 predicate.equals(((SearchCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wyrchris":38}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" * Sorts all persons in address book whose according to the specified attribute in either ascending or descending","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * order.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts leads according to \"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"            + \"the specified attribute and in either an ascending or descending order\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"            + \"Parameters: \u003cattribute\u003e/{ASC/DESC}\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"            + \"Example: \" + COMMAND_WORD + \" ra/ ASC\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    public SortCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"                || other instanceof SortCommand; // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"                //\u0026\u0026 predicate.equals(((SortCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"KT27Learn":39}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Domszy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Domszy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Domszy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Domszy"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Domszy"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Domszy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": shows information of the client \"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Domszy"},"content":"            + \"by his/her client id. \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Domszy"},"content":"            + \"Parameters: view {client id of the customer} \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Domszy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private final PersonHasId predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    private final ClientId clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"     * @param predicate checking the ClientId of the person to view","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    public ViewCommand(ClientId clientId, PersonHasId predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        requireNonNull(clientId);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        this.clientId \u003d clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Domszy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        model.updatePersonToView(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        if (!model.isPersonExistToView()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_VIEW_INVALID_CLIENT_ID, clientId.toString()));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_VIEW_SUCCESS, model.getNameOfPersonToView()));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Domszy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Domszy"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Domszy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Domszy"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Domszy"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Domszy"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Domszy"},"content":"        ViewCommand e \u003d (ViewCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        return predicate.equals(e.predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Domszy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"benedictchuajj":17,"Domszy":40}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"CrownKira"},"content":"    private static final Prefix[] REQUIRED_PREFIXES \u003d {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"CrownKira"},"content":"        PREFIX_NAME, PREFIX_EMAIL","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"CrownKira"},"content":"    };","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    private Model model;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    public AddCommandParser() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    public AddCommandParser(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"CrownKira"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"CrownKira"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"                        PREFIX_RISKAPPETITE, PREFIX_DISPOSABLEINCOME, PREFIX_CURRENTPLAN, PREFIX_LASTMET, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        if (!arePrefixesPresent(argMultimap, REQUIRED_PREFIXES)","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        String clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        if (this.model \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"            clientCounter \u003d \"0\";","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"            clientCounter \u003d this.model.getAddressBook().getClientCounter() \u003d\u003d null ? \"0\"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"                    : this.model.getAddressBook().getClientCounter();","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(clientCounter);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(Phone.DEFAULT_VALUE));","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(Address.DEFAULT_VALUE));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"        RiskAppetite riskAppetite \u003d ParserUtil.parseRiskAppetite(argMultimap","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"                .getValue(PREFIX_RISKAPPETITE).orElse(RiskAppetite.DEFAULT_VALUE));","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        DisposableIncome disposableIncome \u003d ParserUtil.parseDisposableIncome(argMultimap","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"                .getValue(PREFIX_DISPOSABLEINCOME).orElse(DisposableIncome.DEFAULT_VALUE));","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"        LastMet lastMet \u003d ParserUtil.parseLastMet(argMultimap.getValue(PREFIX_LASTMET).orElse(LastMet.DEFAULT_VALUE));","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"        CurrentPlan currentPlan \u003d ParserUtil.parseCurrentPlan(argMultimap.getValue(PREFIX_CURRENTPLAN)","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"                .orElse(CurrentPlan.DEFAULT_VALUE));","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"        Person person \u003d new Person(clientId, name, phone, email, address, riskAppetite, disposableIncome,","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"                currentPlan, lastMet, tagList);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"CrownKira"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix[] prefixes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"benedictchuajj":5,"KT27Learn":38,"CrownKira":7,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.logic.commands.SearchCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    private Model model;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    public AddressBookParser(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"            return new AddCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"            return new SearchCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"Domszy"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Domszy"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benedictchuajj":2,"KT27Learn":7,"Domszy":3,"-":76,"wyrchris":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"                || (other instanceof ArgumentMultimap","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 argMultimap.equals(((ArgumentMultimap) other).argMultimap));","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":60,"wyrchris":7}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    public static final Prefix PREFIX_CLIENTID \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    public static final Prefix PREFIX_RISKAPPETITE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    public static final Prefix PREFIX_DISPOSABLEINCOME \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"    public static final Prefix PREFIX_LASTMET \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    public static final Prefix PREFIX_CURRENTPLAN \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KT27Learn":5,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENTID;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasEmail;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CLIENTID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"                    PREFIX_ADDRESS, PREFIX_RISKAPPETITE, PREFIX_DISPOSABLEINCOME, PREFIX_CURRENTPLAN, PREFIX_LASTMET,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"                    PREFIX_TAG);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        if (!anyPrefixesPresent(argMultimap, PREFIX_CLIENTID, PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        //Throws error if other fields are inputted","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        if (anyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_RISKAPPETITE, PREFIX_DISPOSABLEINCOME,","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"            PREFIX_CURRENTPLAN, PREFIX_LASTMET, PREFIX_ADDRESS)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_TOO_MANY_FIELDS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicatesToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"        String clientIdString \u003d argMultimap.getValue(PREFIX_CLIENTID).orElse(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"        if (!clientIdString.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"            ClientId clientId \u003d ParserUtil.parseClientId(clientIdString);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"            predicatesToDelete.add(new PersonHasId(clientId));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        String emailString \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"        if (!emailString.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"            Email email \u003d ParserUtil.parseEmail(emailString);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"            predicatesToDelete.add(new PersonHasEmail(email));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"        return new DeleteCommand(predicatesToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"     * Returns true if any of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"    private static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KT27Learn":56,"-":23,"wyrchris":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"                    PREFIX_RISKAPPETITE, PREFIX_DISPOSABLEINCOME, PREFIX_CURRENTPLAN, PREFIX_LASTMET, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        if (argMultimap.getValue(PREFIX_RISKAPPETITE).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"            editPersonDescriptor.setRiskAppetite(ParserUtil","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"                .parseRiskAppetite(argMultimap.getValue(PREFIX_RISKAPPETITE).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        if (argMultimap.getValue(PREFIX_DISPOSABLEINCOME).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"            editPersonDescriptor.setDisposableIncome(ParserUtil","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"                .parseDisposableIncome(argMultimap.getValue(PREFIX_DISPOSABLEINCOME).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"Domszy"},"content":"        if (argMultimap.getValue(PREFIX_LASTMET).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Domszy"},"content":"            editPersonDescriptor.setLastMet(ParserUtil.parseLastMet(argMultimap.getValue(PREFIX_LASTMET).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Domszy"},"content":"        if (argMultimap.getValue(PREFIX_CURRENTPLAN).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"            editPersonDescriptor.setCurrentPlan(ParserUtil.parseCurrentPlan(","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"                argMultimap.getValue(PREFIX_CURRENTPLAN).get()","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"            ));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"benedictchuajj":6,"KT27Learn":10,"Domszy":5,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        String trimmedArgs \u003d args.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        // appends \" \" in front as Filter Command can accept arguments without a preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        String preparedArgs \u003d \" \".concat(trimmedArgs);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"                .tokenize(preparedArgs, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RISKAPPETITE,","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                        PREFIX_DISPOSABLEINCOME, PREFIX_LASTMET, PREFIX_CURRENTPLAN, PREFIX_TAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        return new FilterCommand(new PersonContainsKeywordsPredicate(argMultimap));","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wyrchris":39}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    public static final String MESSAGE_INVALID_CLIENT_ID \u003d \"Client ID is not a non-negative unsigned integer.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"CrownKira"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"     * Parses {@code clientId} into an {@code ClientId} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"     * trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"     * @throws ParseException if the specified index is invalid (not non-negative integer).","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public static ClientId parseClientId(String clientId) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        String trimmedId \u003d clientId.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        if (!StringUtil.isNonNegativeInteger(trimmedId)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"            throw new ParseException(MESSAGE_INVALID_CLIENT_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"        return new ClientId(trimmedId);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"     * Parses a {@code String current plan} into an {@code CurrentPlan}.","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"     * @throws ParseException if the given {@code currentPlan} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"    public static CurrentPlan parseCurrentPlan(String currentPlan) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(currentPlan);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"        String trimmedCurrentPlan \u003d currentPlan.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"        if (!CurrentPlan.isValidCurrentPlan(trimmedCurrentPlan)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(CurrentPlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"        return new CurrentPlan(trimmedCurrentPlan);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"     * Parses a {@code String LastMet} into an {@code LastMet}.","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"     * @throws ParseException if the given {@code LastMet} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"    public static LastMet parseLastMet(String lastMet) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(lastMet);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"        String trimmedLastMet \u003d lastMet.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"        return new LastMet(trimmedLastMet);","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"    /** Parses a {@code String RiskAppetite} into an {@code RiskAppetite}.","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"KT27Learn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"KT27Learn"},"content":"     * @throws ParseException if the given {@code RiskAppetite} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"    public static RiskAppetite parseRiskAppetite(String riskAppetite) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(riskAppetite);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"        String trimmedRiskAppetite \u003d riskAppetite.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"        if (!RiskAppetite.isValidRiskAppetite(trimmedRiskAppetite)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(RiskAppetite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"        return new RiskAppetite(trimmedRiskAppetite);","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"     * Parses a {@code String disposableIncome} into an {@code disposableIncome}.","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"     * @throws ParseException if the given {@code DisposableIncome} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"    public static DisposableIncome parseDisposableIncome(String disposableIncome) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(disposableIncome);","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"        String trimmedDisposableIncome \u003d disposableIncome.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"KT27Learn"},"content":"        if (!DisposableIncome.isValidDisposableIncome(trimmedDisposableIncome)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(DisposableIncome.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"KT27Learn"},"content":"        return new DisposableIncome(trimmedDisposableIncome);","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"benedictchuajj":17,"KT27Learn":59,"CrownKira":1,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.SearchCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"public class SearchCommandParser implements Parser\u003cSearchCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * and returns a SearchCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public SearchCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        String trimmedArgs \u003d args.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        // appends \" \" in front as Search Command can accept arguments without a preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        String preparedArgs \u003d \" \".concat(trimmedArgs);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"                .tokenize(preparedArgs, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RISKAPPETITE,","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"                        PREFIX_DISPOSABLEINCOME, PREFIX_LASTMET, PREFIX_CURRENTPLAN, PREFIX_TAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        return new SearchCommand(new PersonContainsKeywordsPredicate(argMultimap));","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wyrchris":43}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        return new SortCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"KT27Learn":27}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Domszy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Domszy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Domszy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Domszy"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Domszy"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Domszy"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Domszy"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Domszy"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Domszy"},"content":"     * and returns an ViewCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"CrownKira"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Domszy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"CrownKira"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Domszy"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Domszy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        ClientId clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Domszy"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"            clientId \u003d ParserUtil.parseClientId(args);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Domszy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"        return new ViewCommand(clientId, new PersonHasId(clientId));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Domszy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"benedictchuajj":9,"Domszy":25,"CrownKira":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private String clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"     * Replaces the clientCounter of the address book with {@code clientCounter}.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"    public void setClientCounter(String clientCounter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"        this.clientCounter \u003d clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"     * Increments the clientCounter of the address book by 1 {@code clientCounter}.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    public void incrementClientCounter() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"            int clientCounterInt \u003d Integer.parseInt(this.clientCounter) + 1;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"            this.clientCounter \u003d String.valueOf(clientCounterInt);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"            this.clientCounter \u003d \"1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"     * Gets the clientCounter of the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"    public String getClientCounter() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        return this.clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"        setClientCounter(newData.getClientCounter());","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"     * Removes person with matching {@code clientId} and {@code email} from this {@code AddressBook}.","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"     * Person with {@code clientId} and {@code email} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"wyrchris"},"content":"    public Person removePersonByFields(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"        return persons.removeByFields(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KT27Learn":43,"-":120,"wyrchris":1}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"     * Deletes the person with the matching Client ID and Email and returns the deleted person","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"    Person deletePersonByFields(List\u003cPredicate\u003cPerson\u003e\u003e predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"     * Updates the filter of the filtered person list to filter by current predicate and the given {@code predicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"    void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"    /** Returns an unmodifiable view of the person to view */","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"    ObservableList\u003cPerson\u003e getPersonToView();","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"    /** Checks and returns if there is person to view */","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"    boolean isPersonExistToView();","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"    /** Returns the name of the person to view */","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"    String getNameOfPersonToView();","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"     * Updates the filter of the filtered person to view list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"    void updatePersonToView(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KT27Learn":5,"benedictchuajj":15,"-":87,"wyrchris":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"    private final FilteredList\u003cPerson\u003e personToView;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"        personToView \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"    public Person deletePersonByFields(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        return addressBook.removePersonByFields(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"wyrchris"},"content":"    public void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"wyrchris"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"wyrchris"},"content":"        Predicate\u003c? super Person\u003e currentPredicate \u003d filteredPersons.getPredicate();","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"wyrchris"},"content":"        if (currentPredicate \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"            currentPredicate \u003d PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"        filteredPersons.setPredicate(predicate.and(currentPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person To View List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"    public ObservableList\u003cPerson\u003e getPersonToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"        return personToView;","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"    public boolean isPersonExistToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"        return personToView.size() \u003d\u003d 1 \u0026\u0026 personToView.get(0) !\u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"    public String getNameOfPersonToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"        return personToView.get(0).getName().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"    public void updatePersonToView(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"        personToView.setPredicate(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"benedictchuajj"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"benedictchuajj"},"content":"                \u0026\u0026 personToView.equals(other.personToView);","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benedictchuajj":31,"KT27Learn":4,"-":150,"wyrchris":12}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Returns the current client counter","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    String getClientCounter();","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * Sets the client counter stored with the new client counter","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    void setClientCounter(String clientCounter);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"     * Increments the clientCounter of the address book by 1 {@code clientCounter}.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    void incrementClientCounter();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KT27Learn":16,"-":17}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"public class Address implements OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it can be blank\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"CrownKira"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty())","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"CrownKira"},"content":"                || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":1,"CrownKira":3,"-":54}},{"path":"src/main/java/seedu/address/model/person/ClientId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public class ClientId {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"ClientId should only contain non-negative integers\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"     * Constructs an {@code ClientId}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     * @param clientId ClientId","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public ClientId(String clientId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(clientId);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        checkArgument(isValidClientId(clientId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        this.value \u003d clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     * @param test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    public static boolean isValidClientId(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        return this.value;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"                || (other instanceof ClientId // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 value.equals(((ClientId) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        return this.value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"KT27Learn":46,"benedictchuajj":1}},{"path":"src/main/java/seedu/address/model/person/CurrentPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Domszy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Domszy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public class CurrentPlan implements OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Current plan can take any values, and it can be blank\";","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"CrownKira"},"content":"    /*","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"CrownKira"},"content":"     * The first character of the current plan must not be a whitespace,","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"CrownKira"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"CrownKira"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"CrownKira"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Domszy"},"content":"     * Constructs an {@code CurrentPlan}.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Domszy"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"CrownKira"},"content":"     * @param currentPlan valid current plan.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Domszy"},"content":"    public CurrentPlan(String currentPlan) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Domszy"},"content":"        requireNonNull(currentPlan);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        checkArgument(isValidCurrentPlan(currentPlan), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Domszy"},"content":"        value \u003d currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"CrownKira"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"CrownKira"},"content":"     * Returns true if a given string is a valid current plan.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"CrownKira"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"CrownKira"},"content":"    public static boolean isValidCurrentPlan(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"CrownKira"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty())","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"CrownKira"},"content":"                || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"CrownKira"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Domszy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Domszy"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Domszy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Domszy"},"content":"                || (other instanceof CurrentPlan // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Domszy"},"content":"                \u0026\u0026 value.equals(((CurrentPlan) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Domszy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Domszy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Domszy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"KT27Learn":3,"Domszy":31,"CrownKira":20}},{"path":"src/main/java/seedu/address/model/person/DisposableIncome.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public class DisposableIncome implements OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"            \"Disposable Income numbers should be a positive integer only\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"     * Constructs a {@code Risk Appetite}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     * @param disposableIncome A valid risk appetite number.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public DisposableIncome(String disposableIncome) {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(disposableIncome);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        checkArgument(isValidDisposableIncome(disposableIncome), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        value \u003d disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public static boolean isValidDisposableIncome(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty()) || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"                || (other instanceof DisposableIncome // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 value.equals(((DisposableIncome) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"KT27Learn":48}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"    public static final boolean IS_BLANK_VALUE_ALLOWED \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"CrownKira"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"CrownKira"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty())","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"CrownKira"},"content":"                || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CrownKira":6,"-":70}},{"path":"src/main/java/seedu/address/model/person/LastMet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Domszy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"CrownKira"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"CrownKira"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class LastMet implements OptionalPersonNonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Domszy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"LastMet should be in the form of Day-Month-Year, \"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Domszy"},"content":"        + \"where Day, month and year should be numerical values.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"    // TODO: why call it alternative?","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    public static final String ALTERNATIVE_VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"        \"^([1-2][0-9]|3[0-1]|0?[1-9])[-]([1][0-2]|0?[1-9])[-](\\\\d{4})\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    public final LocalDate value;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    public final String dateInString;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Domszy"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Domszy"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Domszy"},"content":"     * @param lastMetDate date agent last meets a client","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Domszy"},"content":"    public LastMet(String lastMetDate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"CrownKira"},"content":"        if (!IS_NULL_VALUE_ALLOWED) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"CrownKira"},"content":"            requireNonNull(lastMetDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"CrownKira"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"CrownKira"},"content":"        if (lastMetDate \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"CrownKira"},"content":"            lastMetDate \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"CrownKira"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"        checkArgument(isValidLastMet(lastMetDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"CrownKira"},"content":"        dateInString \u003d lastMetDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"CrownKira"},"content":"        if (lastMetDate.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"CrownKira"},"content":"            value \u003d null;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"CrownKira"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"CrownKira"},"content":"            value \u003d LocalDate.parse(lastMetDate, formatter);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"CrownKira"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"     * Returns if a given string is a valid LastMet.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Domszy"},"content":"    public static boolean isValidLastMet(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"CrownKira"},"content":"        return (IS_NULL_VALUE_ALLOWED \u0026\u0026 test.isEmpty())","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"CrownKira"},"content":"            || test.matches(ALTERNATIVE_VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Domszy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"            return DEFAULT_VALUE;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Domszy"},"content":"            return this.dateInString;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Domszy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Domszy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Domszy"},"content":"            || (other instanceof LastMet // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Domszy"},"content":"            \u0026\u0026 value.equals(((LastMet) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Domszy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Domszy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Domszy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Domszy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"KT27Learn":10,"benedictchuajj":3,"Domszy":36,"CrownKira":24}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"CrownKira"},"content":"    public static final boolean IS_BLANK_VALUE_ALLOWED \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"CrownKira"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"CrownKira"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty())","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"CrownKira"},"content":"                || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CrownKira":5,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"CrownKira":1,"-":31}},{"path":"src/main/java/seedu/address/model/person/OptionalPersonNonStringField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * Represents a optional client field whose stored value is not a string.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public interface OptionalPersonNonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"     * Person field is allowed to be blank","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    public static final boolean IS_NULL_VALUE_ALLOWED \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     * Default string value of optional client field","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"KT27Learn":18}},{"path":"src/main/java/seedu/address/model/person/OptionalPersonStringField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * Represents a optional client field whose value is stored as a string.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public interface OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"     * String field is allowed to be blank","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    public static final boolean IS_BLANK_VALUE_ALLOWED \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     * Default String value of optional client field","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"KT27Learn":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    private final ClientId clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    private final RiskAppetite riskAppetite;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    private final DisposableIncome disposableIncome;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Domszy"},"content":"    private final CurrentPlan currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Domszy"},"content":"    private final LastMet lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    public Person(ClientId clientId, Name name, Phone phone, Email email, Address address, RiskAppetite riskAppetite,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        DisposableIncome disposableIncome, CurrentPlan currentPlan, LastMet lastMet, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        this.clientId \u003d clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        this.riskAppetite \u003d riskAppetite;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        this.disposableIncome \u003d disposableIncome;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Domszy"},"content":"        this.currentPlan \u003d currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Domszy"},"content":"        this.lastMet \u003d lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public ClientId getClientId() {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        return clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"Domszy"},"content":"    public LastMet getLastMet() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Domszy"},"content":"        return lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Domszy"},"content":"    public CurrentPlan getCurrentPlan() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Domszy"},"content":"        return currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"    public RiskAppetite getRiskAppetite() {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"        return riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"    public DisposableIncome getDisposableIncome() {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"        return disposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"                    || otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"        return otherPerson.getClientId().equals(getClientId())","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 otherPerson.getRiskAppetite().equals(getRiskAppetite())","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 otherPerson.getDisposableIncome().equals(getDisposableIncome())","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 otherPerson.getCurrentPlan().equals(getCurrentPlan())","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 otherPerson.getLastMet().equals(getLastMet())","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"        return Objects.hash(name, phone, email, address, lastMet, currentPlan, tags);","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"        builder.append(\"Client ID: \")","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"                .append(getClientId())","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"                .append(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"                .append(getPhone())","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; Risk Appetite: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"                .append(getRiskAppetite())","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; Disposable Income: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"                .append(getDisposableIncome())","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; current plans: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"                .append(getCurrentPlan())","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"                .append(\"; Last Met: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"                .append(getLastMet());","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":51,"Domszy":12,"-":114,"wyrchris":1}},{"path":"src/main/java/seedu/address/model/person/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.commons.util.StringUtil.containsIgnoreCase;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CrownKira"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"CrownKira"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":" * Tests that a {@code Person}\u0027s attributes matches any of the keywords given.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    private final ArgumentMultimap keywords;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    public PersonContainsKeywordsPredicate(ArgumentMultimap keywords) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        String[] generalKeywords \u003d keywords.getPreamble().split(\" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        boolean checkGeneral \u003d generalKeywords[0].isBlank() || Arrays.stream(generalKeywords).anyMatch(x -\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"                boolean checkAttribute \u003d Stream.of(person.getName(), person.getPhone(),","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"                        person.getEmail(), person.getAddress(), person.getRiskAppetite(),","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                        person.getDisposableIncome(), person.getLastMet(), person.getCurrentPlan())","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"                        .map(Object::toString).anyMatch(y -\u003e containsIgnoreCase(y, x));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"                boolean checkAttributeTag \u003d person.getTags().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"                    .anyMatch(y -\u003e containsIgnoreCase(y.tagName, x));","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"                return checkAttribute || checkAttributeTag;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"CrownKira"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"CrownKira"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        boolean checkName \u003d keywords.getValue(PREFIX_NAME)","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getName().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"        boolean checkPhone \u003d keywords.getValue(PREFIX_PHONE)","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getPhone().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        boolean checkEmail \u003d keywords.getValue(PREFIX_EMAIL)","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getEmail().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"        boolean checkAddress \u003d keywords.getValue(PREFIX_ADDRESS)","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getAddress().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        boolean checkRiskAppetite \u003d keywords.getValue(PREFIX_RISKAPPETITE)","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getRiskAppetite().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        boolean checkDisposableIncome \u003d keywords.getValue(PREFIX_DISPOSABLEINCOME)","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getDisposableIncome().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        boolean checkLastMet \u003d keywords.getValue(PREFIX_LASTMET)","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getLastMet().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        boolean checkCurrentPlan \u003d keywords.getValue(PREFIX_CURRENTPLAN)","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e containsIgnoreCase(person.getCurrentPlan().toString(), x)).orElse(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"        boolean checkTags \u003d keywords.getValue(PREFIX_TAG)","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"                .map(x -\u003e person.getTags().stream().anyMatch(y -\u003e containsIgnoreCase(y.tagName, x))).orElse(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"        return checkGeneral \u0026\u0026 checkName \u0026\u0026 checkPhone \u0026\u0026 checkEmail \u0026\u0026 checkAddress \u0026\u0026 checkRiskAppetite","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 checkDisposableIncome \u0026\u0026 checkLastMet \u0026\u0026 checkCurrentPlan \u0026\u0026 checkTags;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"                || (other instanceof PersonContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"                \u0026\u0026 keywords.equals(((PersonContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"KT27Learn":1,"CrownKira":9,"wyrchris":66}},{"path":"src/main/java/seedu/address/model/person/PersonHasEmail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" * Tests that a {@code Person}\u0027s attributes matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"public class PersonHasEmail implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    private final Email email;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    public PersonHasEmail(Email email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        return person.getEmail().equals(email);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"                || (other instanceof PersonHasEmail // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 email.equals(((PersonHasEmail) other).email)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"KT27Learn":27}},{"path":"src/main/java/seedu/address/model/person/PersonHasId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * Tests that a {@code Person}\u0027s attributes matches any of the keywords given.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class PersonHasId implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    private final ClientId clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    public PersonHasId(ClientId clientId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"        this.clientId \u003d clientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"        return person.getClientId().equals(clientId);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"            || (other instanceof PersonHasId // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"            \u0026\u0026 clientId.equals(((PersonHasId) other).clientId)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"benedictchuajj":26}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"public class Phone implements OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"CrownKira"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"CrownKira"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty()) || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":1,"CrownKira":3,"-":51}},{"path":"src/main/java/seedu/address/model/person/RiskAppetite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"public class RiskAppetite implements OptionalPersonStringField {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"        \"Risk Appetite number should be a single digit integer between 1 and 5\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([1-5])\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"     * Constructs a {@code Risk Appetite}.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"     * @param riskAppetite A valid risk appetite number.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    public RiskAppetite(String riskAppetite) {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        requireNonNull(riskAppetite);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        checkArgument(isValidRiskAppetite(riskAppetite), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"        value \u003d riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    public static boolean isValidRiskAppetite(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        return (IS_BLANK_VALUE_ALLOWED \u0026\u0026 test.isEmpty()) || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"                || (other instanceof RiskAppetite // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"                \u0026\u0026 value.equals(((RiskAppetite) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"KT27Learn":49}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"CrownKira"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"     * Removes the equivalent person with matching client id and/or email from the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"     * The person must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"    public Person removeByFields(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"        requireAllNonNull(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"        Predicate\u003cPerson\u003e predicate \u003d predicates.stream().reduce(x -\u003e true, Predicate::and);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"        FilteredList\u003cPerson\u003e filteredList \u003d internalList.filtered(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"        if (filteredList.size() \u003c 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"            Person personToDelete \u003d filteredList.get(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"            internalList.remove(personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"            return personToDelete;","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KT27Learn":20,"CrownKira":1,"-":136,"wyrchris":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"0\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"                new RiskAppetite(\"1\"), new DisposableIncome(\"500\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"                new CurrentPlan(\"Prudential PRUwealth, AIA Pro Achiever 2.0, Syfe Select, a lot more plans.......\"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"                    + \", Even more plans.................................\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"friends\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"1\"), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"                new RiskAppetite(\"1\"), new DisposableIncome(\"500\"), new CurrentPlan(\"Prudential PRUwealth\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"2\"), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"                new RiskAppetite(\"1\"), new DisposableIncome(\"500\"), new CurrentPlan(\"Prudential PRUwealth\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"3\"), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"                new RiskAppetite(\"1\"), new DisposableIncome(\"500\"), new CurrentPlan(\"Prudential PRUwealth\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"family\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"4\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"                new RiskAppetite(\"1\"), new DisposableIncome(\"500\"), new CurrentPlan(\"Prudential PRUwealth\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"classmates\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"            new Person(new ClientId(\"5\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new RiskAppetite(\"1\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"                new DisposableIncome(\"500\"), new CurrentPlan(\"Prudential PRUwealth\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"                new LastMet(\"24-01-2021\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        sampleAb.setClientCounter(\"6\");","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"KT27Learn":29,"benedictchuajj":3,"-":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    private final String clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    private final String riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    private final String disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Domszy"},"content":"    private final String lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Domszy"},"content":"    private final String currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"clientId\") String clientId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"riskAppetite\") String riskAppetite,","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"disposableIncome\") String disposableIncome,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"current-plan\") String currentPlan,","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"last-met\") String lastMet,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        this.clientId \u003d clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        this.riskAppetite \u003d riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"        this.disposableIncome \u003d disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Domszy"},"content":"        this.lastMet \u003d lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Domszy"},"content":"        this.currentPlan \u003d currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"        clientId \u003d source.getClientId().value;","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"        disposableIncome \u003d source.getDisposableIncome().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"        riskAppetite \u003d source.getRiskAppetite().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Domszy"},"content":"        currentPlan \u003d source.getCurrentPlan().value;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        lastMet \u003d source.getLastMet().dateInString;","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"        if (clientId \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"        final ClientId modelClientId \u003d new ClientId(clientId);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Domszy"},"content":"        if (lastMet \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Domszy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, LastMet.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Domszy"},"content":"        if (!LastMet.isValidLastMet(lastMet)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"Domszy"},"content":"            throw new IllegalValueException(LastMet.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Domszy"},"content":"        final LastMet modelLastMet \u003d new LastMet(lastMet);","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Domszy"},"content":"        if (currentPlan \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"                    CurrentPlan.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Domszy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Domszy"},"content":"        final CurrentPlan modelCurrentPlan \u003d new CurrentPlan(currentPlan);","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"        if (riskAppetite \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"                    RiskAppetite.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"        if (!RiskAppetite.isValidRiskAppetite(riskAppetite)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(RiskAppetite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"        final RiskAppetite modelRiskAppetite \u003d new RiskAppetite(riskAppetite);","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"KT27Learn"},"content":"        if (disposableIncome \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"KT27Learn"},"content":"                    DisposableIncome.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"KT27Learn"},"content":"        if (!DisposableIncome.isValidDisposableIncome(disposableIncome)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"KT27Learn"},"content":"            throw new IllegalValueException(DisposableIncome.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"KT27Learn"},"content":"        final DisposableIncome modelDisposableIncome \u003d new DisposableIncome(disposableIncome);","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"KT27Learn"},"content":"        return new Person(modelClientId, modelName, modelPhone, modelEmail, modelAddress, modelRiskAppetite,","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"KT27Learn"},"content":"                modelDisposableIncome, modelCurrentPlan, modelLastMet, modelTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KT27Learn":62,"benedictchuajj":4,"Domszy":17,"-":96,"wyrchris":6}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    private String clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"                                       @JsonProperty(\"clientCounter\") String clientCounter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        this.clientCounter \u003d clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        this.clientCounter \u003d source.getClientCounter();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"     * Returns the clientCounter stored in the addressbook json","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"     * @return String clientCounter that is stored in the addressbook json","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    public String getClientCounter() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"        return this.clientCounter;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        addressBook.setClientCounter(getClientCounter());","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KT27Learn":18,"-":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    private SideBar sideBar;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    private StackPane sideBarPlaceHolder;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"        sideBar \u003d new SideBar(logic.getPersonToView());","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"        sideBarPlaceHolder.getChildren().add(sideBar.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benedictchuajj":7,"Domszy":1,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" * An UI component that displays the important information of a {@code Person}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    private Label clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    private Label riskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    private Label disposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Domszy"},"content":"    private Label lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Domszy"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Domszy"},"content":"    private Label currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Domszy"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        clientId.setText(person.getClientId().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        riskAppetite.setText(person.getRiskAppetite().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        disposableIncome.setText(person.getDisposableIncome().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        currentPlan.setText(person.getCurrentPlan().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Domszy"},"content":"        lastMet.setText(person.getLastMet().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benedictchuajj":1,"KT27Learn":10,"Domszy":5,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":" * Panel that displays the full information of a {@code Person}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"public class PersonViewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private static final String FXML \u003d \"PersonViewPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private VBox clientInfoContainer;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientName;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientCreationDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientCreatedAt;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientLastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientRiskAppetite;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientCurrentPlans;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientDisposableIncome;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"    private Label nextMeeting;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"    private VBox contactInfoContainer;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientEmail;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    private Label clientPhoneNumber;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"     * Creates a {@code PersonViewPanel} with listeners initiated to listen to updates","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"     * for the person to view.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"    public PersonViewPanel(ObservableList\u003cPerson\u003e personToView) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        personToView.addListener(new ListChangeListener\u003cPerson\u003e() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"            @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"            public void onChanged(Change\u003c? extends Person\u003e c) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"                updateView(personToView);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        });","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"     * Updates the {@code PersonViewPanel} with information from the person to be viewed.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"    public void updateView(ObservableList\u003cPerson\u003e personToView) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"        if (personToView.size() \u003d\u003d 1 \u0026\u0026 personToView.get(0) !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"            Person person \u003d personToView.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"            clientName.setText(person.getName().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"            clientId.setText(person.getClientId().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"            clientCreatedAt.setText(\"-\");","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"            clientLastMet.setText(person.getLastMet().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"            clientRiskAppetite.setText(person.getRiskAppetite().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"            clientCurrentPlans.setText(person.getCurrentPlan().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"            clientDisposableIncome.setText(person.getDisposableIncome().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"            nextMeeting.setText(\"-\");","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"            clientEmail.setText(person.getEmail().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"            clientPhoneNumber.setText(person.getPhone().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"benedictchuajj":91}},{"path":"src/main/java/seedu/address/ui/SideBar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":" * An UI that acts as the side bar of the application, housing panels for easy viewing.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"public class SideBar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"    private static final String FXML \u003d \"SideBar.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"    private PersonViewPanel personViewPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"    private StackPane personViewPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"     * Creates a {@code SideBar} with panels initiated.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public SideBar(ObservableList\u003cPerson\u003e personToView) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        personViewPanel \u003d new PersonViewPanel(personToView);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        personViewPanelPlaceholder.getChildren().add(personViewPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"benedictchuajj":31}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":".label-view-header {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":".label-view {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"benedictchuajj":14,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"\u003cfx:root maxHeight\u003d\"600.0\" maxWidth\u003d\"740.0\" minHeight\u003d\"600\" minWidth\u003d\"740.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"LeadsForce\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"                                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                                                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cStackPane fx:id\u003d\"sideBarPlaceHolder\" prefHeight\u003d\"500.0\" prefWidth\u003d\"280.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"benedictchuajj":18,"-":48}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"CrownKira"},"content":"\u003c?import javafx.scene.control.Tooltip?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"CrownKira"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"Domszy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"CrownKira"},"content":"\u003c?import javafx.scene.control.Tooltip?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Domszy"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"CrownKira"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"184.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"CrownKira"},"content":"         \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"CrownKira"},"content":"               \u003ctooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"CrownKira"},"content":"                  \u003cTooltip text\u003d\"Name\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"CrownKira"},"content":"               \u003c/tooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"CrownKira"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"       \u003cLabel fx:id\u003d\"clientId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$clientId\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"                \u003cTooltip text\u003d\"Client Id\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CrownKira"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"CrownKira"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"CrownKira"},"content":"               \u003cTooltip text\u003d\"Phone\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"CrownKira"},"content":"            \u003c/tooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"CrownKira"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"CrownKira"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"CrownKira"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"CrownKira"},"content":"               \u003cTooltip text\u003d\"Address\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"CrownKira"},"content":"            \u003c/tooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"CrownKira"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"CrownKira"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"CrownKira"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"CrownKira"},"content":"               \u003cTooltip text\u003d\"Email\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"CrownKira"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"      \u003cLabel fx:id\u003d\"riskAppetite\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$riskAppetite\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"                \u003cTooltip text\u003d\"Risk Appetite\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"      \u003cLabel fx:id\u003d\"disposableIncome\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$disposableIncome\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"                \u003cTooltip text\u003d\"Disposable Income\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"      \u003cLabel fx:id\u003d\"currentPlan\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$currentPlan\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"                \u003cTooltip text\u003d\"Current Plan\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"CrownKira"},"content":"      \u003cLabel fx:id\u003d\"lastMet\" prefHeight\u003d\"17.0\" prefWidth\u003d\"103.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastMet\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"CrownKira"},"content":"            \u003ctooltip\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"CrownKira"},"content":"               \u003cTooltip text\u003d\"Last Met\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"CrownKira"},"content":"            \u003c/tooltip\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"Domszy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Domszy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Domszy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"CrownKira"},"content":"   \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-border-color: grey;\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"CrownKira"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"CrownKira"},"content":"         \u003cLabel layoutX\u003d\"5.0\" layoutY\u003d\"11.0\" text\u003d\"Next Meeting:\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"CrownKira"},"content":"         \u003cLabel fx:id\u003d\"nextMeeting\" layoutX\u003d\"9.0\" layoutY\u003d\"60.0\" text\u003d\"\u0026lt;Meeting Info Here\u0026gt;\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"CrownKira"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"CrownKira"},"content":"   \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benedictchuajj":1,"KT27Learn":16,"Domszy":5,"CrownKira":33,"-":29}},{"path":"src/main/resources/view/PersonViewPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"\u003cVBox alignment\u003d\"CENTER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"280.0\" prefWidth\u003d\"280.0\" style\u003d\"-fx-border-color: silver;\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"      \u003cVBox fx:id\u003d\"clientInfoContainer\" prefHeight\u003d\"240.0\" prefWidth\u003d\"393.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"            \u003cLabel styleClass\u003d\"label-view-header\" text\u003d\"Client Info\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"21.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Name:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientName\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Client ID:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientId\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientCreationDate\" styleClass\u003d\"label-view\" text\u003d\"Created At:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientCreatedAt\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Last Met:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientLastMet\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Risk Appetite:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientRiskAppetite\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"label-view\" text\u003d\"Current Financial Plans:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientCurrentPlans\" minHeight\u003d\"-Infinity\" styleClass\u003d\"label-view\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Disposable Income:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientDisposableIncome\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Next Meeting:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"nextMeeting\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"benedictchuajj"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"benedictchuajj"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"benedictchuajj"},"content":"      \u003cVBox fx:id\u003d\"contactInfoContainer\" prefHeight\u003d\"244.0\" prefWidth\u003d\"517.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"benedictchuajj"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"benedictchuajj"},"content":"            \u003cLabel styleClass\u003d\"label-view-header\" text\u003d\"Contact Info\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"benedictchuajj"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"21.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Email Address:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientEmail\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"benedictchuajj"},"content":"            \u003cHBox prefHeight\u003d\"21.0\" prefWidth\u003d\"363.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"benedictchuajj"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel styleClass\u003d\"label-view\" text\u003d\"Contact Number:\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cLabel fx:id\u003d\"clientPhoneNumber\" styleClass\u003d\"label-view\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"                        \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"benedictchuajj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"            \u003cInsets top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"      \u003cInsets bottom\u003d\"4.0\" right\u003d\"8.0\" top\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"benedictchuajj":172}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"benedictchuajj":1,"-":7}},{"path":"src/main/resources/view/SideBar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"\u003cStackPane alignment\u003d\"TOP_CENTER\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"            \u003cStackPane fx:id\u003d\"personViewPanelPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"                  \u003cInsets top\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"               \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"benedictchuajj":18}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"0\",","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"5000\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"0\",","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"5000\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KT27Learn":13,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"0\",","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"2\",","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"3\",","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"4\",","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"5\",","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"    \"clientId\": \"6\",","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"    \"riskAppetite\": \"3\",","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"    \"disposableIncome\":  \"300\",","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"    \"last-met\" : \"07-10-2021\",","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"    \"current-plan\" : \"Prudential PRUShield\",","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KT27Learn":35,"-":46}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"            read(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benedictchuajj":2,"-":115}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"    //---------------- Tests for isNonNegativedInteger --------------------------------------","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"    public void isNonNegativeInteger() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"\")); // Boundary value","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"  \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"a\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"aaa\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        // EP: zero","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(StringUtil.isNonNegativeInteger(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        // EP: zero as prefix","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(StringUtil.isNonNegativeInteger(\"01\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"        // EP: signed numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"-1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"+1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(StringUtil.isNonNegativeInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(StringUtil.isNonNegativeInteger(\"1\")); // Boundary value","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(StringUtil.isNonNegativeInteger(\"10\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"wyrchris"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"wyrchris"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"wyrchris"},"content":"    public void containIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"wyrchris"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(null, \"a\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"wyrchris"},"content":"    public void containIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"wyrchris"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(\"a\", null));","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"wyrchris"},"content":"    public void containIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"wyrchris"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e StringUtil.containsIgnoreCase(\"a\", \"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"wyrchris"},"content":"    public void containsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"wyrchris"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"\", \"aaa\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"wyrchris"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"abd\", \"g\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"wyrchris"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"abd\", \" a\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"abc\", \"a\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"ab c\", \"c\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"wyrchris"},"content":"        //match uppercase and lowercase","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"abC\", \"C\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"abfCa\", \"fCa\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"wyrchris"},"content":"        // match for word with spaces in between","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"b a a d\", \"a a\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"wyrchris"},"content":"        // match multiple","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"wyrchris"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"acadffac\", \"ac\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"benedictchuajj":34,"-":143,"wyrchris":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CURRENTPLAN_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DISPOSABLEINCOME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTMET_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKAPPETITE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"        String deleteCommand \u003d \"delete i/9\";","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        assertCommandException(deleteCommand, DeleteCommand.MESSAGE_DELETE_PERSON_FAILURE);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"9\");","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_AMY + RISKAPPETITE_DESC_AMY + DISPOSABLEINCOME_DESC_AMY + CURRENTPLAN_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"                + LASTMET_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"    public void getPersonToView_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getPersonToView().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KT27Learn":10,"benedictchuajj":5,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"        public Person deletePersonByFields(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"        public void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"benedictchuajj"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"benedictchuajj"},"content":"        public ObservableList\u003cPerson\u003e getPersonToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"benedictchuajj"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"benedictchuajj"},"content":"        public boolean isPersonExistToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"benedictchuajj"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"benedictchuajj"},"content":"        public String getNameOfPersonToView() {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"benedictchuajj"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"benedictchuajj"},"content":"        public void updatePersonToView(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"benedictchuajj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"KT27Learn":4,"benedictchuajj":20,"Domszy":2,"-":194,"wyrchris":7}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_CLIENTID_AMY \u003d \"9\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_CLIENTID_BOB \u003d \"10\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"    public static final String VALID_LASTMET_AMY \u003d \"24-09-2021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"    public static final String VALID_LASTMET_BOB \u003d \"24-09-2021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_RISKAPPETITE_AMY \u003d \"3\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_RISKAPPETITE_BOB \u003d \"4\";","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_DISPOSABLEINCOME_AMY \u003d \"300\";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_DISPOSABLEINCOME_BOB \u003d \"400\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Domszy"},"content":"    public static final String VALID_CURRENTPLAN_AMY \u003d \"Prudential PRUwealth\";","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public static final String VALID_CURRENTPLAN_BOB \u003d \"Prudential PROwealth\";","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    public static final String RISKAPPETITE_DESC_AMY \u003d \" \" + PREFIX_RISKAPPETITE + VALID_RISKAPPETITE_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"    public static final String RISKAPPETITE_DESC_BOB \u003d \" \" + PREFIX_RISKAPPETITE + VALID_RISKAPPETITE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    public static final String DISPOSABLEINCOME_DESC_AMY \u003d \" \" + PREFIX_DISPOSABLEINCOME + VALID_DISPOSABLEINCOME_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"    public static final String DISPOSABLEINCOME_DESC_BOB \u003d \" \" + PREFIX_DISPOSABLEINCOME + VALID_DISPOSABLEINCOME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Domszy"},"content":"    public static final String LASTMET_DESC_AMY \u003d \" \" + PREFIX_LASTMET + VALID_LASTMET_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Domszy"},"content":"    public static final String LASTMET_DESC_BOB \u003d \" \" + PREFIX_LASTMET + VALID_LASTMET_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Domszy"},"content":"    public static final String CURRENTPLAN_DESC_AMY \u003d \" \" + PREFIX_CURRENTPLAN + VALID_CURRENTPLAN_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"    public static final String CURRENTPLAN_DESC_BOB \u003d \" \" + PREFIX_CURRENTPLAN + VALID_CURRENTPLAN_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS + \" \"; // empty string not allowed","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"    public static final String INVALID_RISKAPPETITE_DESC \u003d \" \" + PREFIX_RISKAPPETITE + \"6\"; // beyond RA range","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"    public static final String INVALID_DISPOSABLEINCOME_DESC \u003d \" \" + PREFIX_DISPOSABLEINCOME + \"-2\"; // negative integer","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"    public static final String INVALID_LASTMET_DESC \u003d \" \" + PREFIX_LASTMET + \"2020-Jul-23\"; // String in date","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withClientId(VALID_CLIENTID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"                .withRiskAppetite(VALID_RISKAPPETITE_AMY).withDisposableIncome(VALID_DISPOSABLEINCOME_AMY)","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"                .withCurrentPlan(VALID_CURRENTPLAN_AMY).withLastMet(VALID_LASTMET_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withClientId(VALID_CLIENTID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"                .withRiskAppetite(VALID_RISKAPPETITE_BOB).withDisposableIncome(VALID_DISPOSABLEINCOME_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"                .withCurrentPlan(VALID_CURRENTPLAN_BOB).withLastMet(VALID_LASTMET_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"benedictchuajj":2,"KT27Learn":24,"Domszy":6,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasEmail;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    public void execute_validClientIdUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(personToDelete.getClientId().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(new PersonHasId(clientId));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public void execute_validEmailUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(3);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"        Email email \u003d new Email(personToDelete.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(new PersonHasEmail(email));","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    public void execute_validEmailAndClientIdUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(3);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"        Email email \u003d new Email(personToDelete.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(new PersonHasEmail(email));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(personToDelete.getClientId().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(new PersonHasId(clientId));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"    public void execute_invalidClientIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(\"20\");","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(new PersonHasId(clientId));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_DELETE_PERSON_FAILURE);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientIdOne \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"        predicatesOne.add(new PersonHasId(clientIdOne));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(predicatesOne);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientIdTwo \u003d new ClientId(\"2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"        predicatesTwo.add(new PersonHasId(clientIdTwo));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(predicatesTwo);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesTest \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientIdTest \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"        predicatesTest.add(new PersonHasId(clientIdTest));","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(predicatesTest);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KT27Learn":47,"-":72,"wyrchris":8}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"                new PersonContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"                        ArgumentTokenizer.tokenize(\"abc def a/Blk 30 e/example.com\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"                new PersonContainsKeywordsPredicate(ArgumentTokenizer.tokenize(\"abc a/Blk 30\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        FilterCommand findFilterCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"        assertTrue(filterFirstCommand.equals(findFilterCommandCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"* e/not_example.com\");","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        expectedModel.filterFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"Pauline Kurz Elle Kunz p/94 e/example.com\");","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"        expectedModel.filterFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"    public void execute_multipleFilter() {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate1 \u003d preparePredicate(\" Pauline Kurz Elle Kunz p/94 e/example.com\");","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate2 \u003d preparePredicate(\" a/ave\");","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"        FilterCommand command1 \u003d new FilterCommand(predicate1);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"        FilterCommand command2 \u003d new FilterCommand(predicate2);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"        expectedModel.filterFilteredPersonList(predicate1);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"        expectedModel.filterFilteredPersonList(predicate2);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"        command1.execute(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"        assertCommandSuccess(command2, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(String s) {","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap aMM \u003d ArgumentTokenizer.tokenize(s,","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"        return new PersonContainsKeywordsPredicate(aMM);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wyrchris":101}},{"path":"src/test/java/seedu/address/logic/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"class SearchCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    public void equals() {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"                new PersonContainsKeywordsPredicate(","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"                        ArgumentTokenizer.tokenize(\"abc def a/Blk 30 e/example.com\"));","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"                new PersonContainsKeywordsPredicate(ArgumentTokenizer.tokenize(\"abc a/Blk 30\"));","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        SearchCommand searchFirstCommand \u003d new SearchCommand(firstPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        SearchCommand searchSecondCommand \u003d new SearchCommand(secondPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        assertTrue(searchFirstCommand.equals(searchFirstCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        SearchCommand findSearchCommandCopy \u003d new SearchCommand(firstPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"        assertTrue(searchFirstCommand.equals(findSearchCommandCopy));","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        assertFalse(searchFirstCommand.equals(1));","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        assertFalse(searchFirstCommand.equals(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        assertFalse(searchFirstCommand.equals(searchSecondCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"* e/not_example.com\");","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        SearchCommand command \u003d new SearchCommand(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"Pauline Kurz Elle Kunz p/94 e/example.com\");","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"        SearchCommand command \u003d new SearchCommand(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(String s) {","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap aMM \u003d ArgumentTokenizer.tokenize(s,","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"        return new PersonContainsKeywordsPredicate(aMM);","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wyrchris":87}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_VIEW_INVALID_CLIENT_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_VIEW_SUCCESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        ClientId firstClientId \u003d new ClientId(\"0\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"        ClientId secondClientId \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        PersonHasId firstPredicate \u003d new PersonHasId(firstClientId);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"        PersonHasId secondPredicate \u003d new PersonHasId(secondClientId);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstClientId, firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondClientId, secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"benedictchuajj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"benedictchuajj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand viewCommandCopy \u003d new ViewCommand(firstClientId, firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(viewFirstCommand.equals(viewCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"benedictchuajj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"benedictchuajj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"benedictchuajj"},"content":"    public void execute_validClientId_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"benedictchuajj"},"content":"        String userInput \u003d \"0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"benedictchuajj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VIEW_SUCCESS, ALICE.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"benedictchuajj"},"content":"        PersonHasId predicate \u003d preparePredicate(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand command \u003d new ViewCommand(new ClientId(userInput), predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"benedictchuajj"},"content":"        expectedModel.updatePersonToView(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(Arrays.asList(ALICE), model.getPersonToView());","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"    public void execute_invalidClientId_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"        String userInput \u003d \"10\";","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VIEW_INVALID_CLIENT_ID, userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"        PersonHasId predicate \u003d preparePredicate(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand command \u003d new ViewCommand(new ClientId(userInput), predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"        expectedModel.updatePersonToView(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(Collections.emptyList(), model.getPersonToView());","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"    private PersonHasId preparePredicate(String s) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        return new PersonHasId(new ClientId(s));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"benedictchuajj":80}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CURRENTPLAN_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CURRENTPLAN_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DISPOSABLEINCOME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DISPOSABLEINCOME_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DISPOSABLEINCOME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RISKAPPETITE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTMET_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTMET_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKAPPETITE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RISKAPPETITE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTID_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"    private ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    private AddCommandParser parser \u003d new AddCommandParser(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        model.getAddressBook().setClientCounter(\"9\");","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"                        + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"                        + LASTMET_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"                        + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"                        + LASTMET_DESC_BOB + TAG_DESC_FRIEND ,","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"                + LASTMET_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"                + LASTMET_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"                + LASTMET_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"        // multiple risk appetite - last risk appetite accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_AMY + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"                + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        // multiple disposable income - last disposable income accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_AMY + DISPOSABLEINCOME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"                + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"        // multiple current plans - last current plan accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_AMY + DISPOSABLEINCOME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"                + CURRENTPLAN_DESC_AMY + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"        // multiple Last Met- last date accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_AMY + DISPOSABLEINCOME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"                + CURRENTPLAN_DESC_AMY + CURRENTPLAN_DESC_BOB + LASTMET_DESC_AMY + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"10\");","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(\"9\");","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"                        + RISKAPPETITE_DESC_AMY + DISPOSABLEINCOME_DESC_AMY + CURRENTPLAN_DESC_AMY + LASTMET_DESC_AMY,","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"        model.getAddressBook().setClientCounter(VALID_CLIENTID_BOB);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"KT27Learn"},"content":"        // invalid riskAppetite","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"KT27Learn"},"content":"                + INVALID_RISKAPPETITE_DESC + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"KT27Learn"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, RiskAppetite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"KT27Learn"},"content":"        // invalid Disposable Income","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + INVALID_DISPOSABLEINCOME_DESC + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"KT27Learn"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DisposableIncome.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + CURRENTPLAN_DESC_BOB + LASTMET_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"KT27Learn"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"KT27Learn"},"content":"                + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"KT27Learn"},"content":"                + ADDRESS_DESC_BOB + RISKAPPETITE_DESC_BOB + DISPOSABLEINCOME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"KT27Learn"},"content":"                + TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"benedictchuajj":3,"KT27Learn":90,"-":114,"wyrchris":2}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.SearchCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    private ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        model.getAddressBook().setClientCounter(\"0\");","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"                DeleteCommand.COMMAND_WORD + \" i/1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"        PersonHasId predicate \u003d new PersonHasId(clientId);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(new DeleteCommand(predicates), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"        descriptor.setClientId(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"        EditCommand command1 \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"    public void parseCommand_search() throws Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"        String keywords \u003d \"do t/friends e/example.com\";","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap aMM \u003d ArgumentTokenizer.tokenize(keywords,","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"        SearchCommand command \u003d (SearchCommand) parser.parseCommand(","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"                SearchCommand.COMMAND_WORD + \" \" + keywords);","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"        assertEquals(new SearchCommand(new PersonContainsKeywordsPredicate(aMM)), command);","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"        String keywords \u003d \"do t/friends e/example.com\";","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"        ArgumentMultimap aMM \u003d ArgumentTokenizer.tokenize(keywords,","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"                FilterCommand.COMMAND_WORD + \" \" + keywords);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"        assertEquals(new FilterCommand(new PersonContainsKeywordsPredicate(aMM)), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KT27Learn":19,"-":98,"wyrchris":32}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasEmail;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    public void parse_validClientId_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        PersonHasId predicate \u003d new PersonHasId(clientId);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, \" i/1\", new DeleteCommand(predicates));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    public void parse_validEmail_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        Email email \u003d new Email(\"test@gmail.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        PersonHasEmail predicate \u003d new PersonHasEmail(email);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, \" e/test@gmail.com\", new DeleteCommand(predicates));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public void parse_validEmailandClientId_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        Email email \u003d new Email(\"test@gmail.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        PersonHasEmail predicateEmail \u003d new PersonHasEmail(email);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"        ClientId clientId \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"        PersonHasId predicateId \u003d new PersonHasId(clientId);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(predicateId);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"        predicates.add(predicateEmail);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"        assertParseSuccess(parser, \" i/1 e/test@gmail.com\", new DeleteCommand(predicates));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"KT27Learn":32,"-":29,"wyrchris":5}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"                new FilterCommand(new PersonContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"                        ArgumentTokenizer.tokenize(\"Alice Bob e/example.com a/Blk 30\",","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"                                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG)","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"                ));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        assertParseSuccess(parser, \"Alice Bob e/example.com a/Blk 30\", expectedFilterCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t e/example.com a/Blk 30\", expectedFilterCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wyrchris":40}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_CLIENT_ID;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.testutil.TypicalClientIds.CLIENT_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    private static final String INVALID_PHONE_FROM_PARSER \u003d \"+651234\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_PHONE_FROM_PARSER \u003d \"123456\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_ADDRESS_FROM_PARSER \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"                MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"benedictchuajj"},"content":"    public void parseClientId_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClientId(\"10 a\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"benedictchuajj"},"content":"    public void parseClientId_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"benedictchuajj"},"content":"            MESSAGE_INVALID_CLIENT_ID, () -\u003e ParserUtil.parseClientId(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"benedictchuajj"},"content":"    public void parseClientId_validInput_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"benedictchuajj"},"content":"        // No whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(CLIENT_ID_FIRST_PERSON, ParserUtil.parseClientId(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"benedictchuajj"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(CLIENT_ID_FIRST_PERSON, ParserUtil.parseClientId(\"  0  \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_FROM_PARSER));","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_FROM_PARSER));","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS_FROM_PARSER));","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"benedictchuajj":22,"KT27Learn":8,"-":182,"wyrchris":2}},{"path":"src/test/java/seedu/address/logic/parser/SearchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import seedu.address.logic.commands.SearchCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"public class SearchCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    private SearchCommandParser parser \u003d new SearchCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"                SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public void parse_validArgs_returnsSearchCommand() {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        SearchCommand expectedSearchCommand \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"                new SearchCommand(new PersonContainsKeywordsPredicate(","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"                        ArgumentTokenizer.tokenize(\"Alice Bob e/example.com a/Blk 30\",","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"                                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG)","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"                ));","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        assertParseSuccess(parser, \"Alice Bob e/example.com a/Blk 30\", expectedSearchCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t e/example.com a/Blk 30\", expectedSearchCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wyrchris":40}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"benedictchuajj"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"benedictchuajj"},"content":"                ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"benedictchuajj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"benedictchuajj"},"content":"        ClientId expectedClientId \u003d new ClientId(\"0\");","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"benedictchuajj"},"content":"        ViewCommand expectedViewCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"benedictchuajj"},"content":"                new ViewCommand(expectedClientId, new PersonHasId(expectedClientId));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"benedictchuajj"},"content":"        assertParseSuccess(parser, \"0\", expectedViewCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"benedictchuajj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"benedictchuajj"},"content":"        assertParseSuccess(parser, \"\\n \\t 0 \\n\", expectedViewCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"benedictchuajj":34}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"        private String clientCounter \u003d \"0\";","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"        public String getClientCounter() {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"            return clientCounter;","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"        public void setClientCounter(String clientCounter) {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"            this.clientCounter \u003d clientCounter;","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"        public void incrementClientCounter() {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"            try {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"                int tempClientCounter \u003d Integer.parseInt(this.clientCounter) + 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"                this.clientCounter \u003d String.valueOf(tempClientCounter);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"                this.clientCounter \u003d \"1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"KT27Learn":21,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.PersonHasId;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"benedictchuajj"},"content":"    public void getPersonToView_viewFirstClient_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"benedictchuajj"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"benedictchuajj"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"benedictchuajj"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"benedictchuajj"},"content":"        modelManager.updatePersonToView(new PersonHasId(ALICE.getClientId()));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"benedictchuajj"},"content":"        assertTrue(modelManager.isPersonExistToView());","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(Arrays.asList(ALICE), modelManager.getPersonToView());","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"benedictchuajj"},"content":"        assertEquals(ALICE.getName().toString(), modelManager.getNameOfPersonToView());","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"benedictchuajj"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"benedictchuajj"},"content":"    public void getPersonToView_viewNonExistingClient_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"benedictchuajj"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"benedictchuajj"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"benedictchuajj"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"benedictchuajj"},"content":"        modelManager.updatePersonToView(new PersonHasId(CARL.getClientId()));","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(modelManager.isPersonExistToView());","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"benedictchuajj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"benedictchuajj"},"content":"        // different personToView -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"benedictchuajj"},"content":"        ClientId clientId \u003d ALICE.getClientId();","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"benedictchuajj"},"content":"        modelManager.updatePersonToView(new PersonHasId(clientId));","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"benedictchuajj"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"benedictchuajj":28,"-":132}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KT27Learn":1,"-":35}},{"path":"src/test/java/seedu/address/model/person/CurrentPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class CurrentPlanTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CurrentPlan(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_invalidCurrentPlan_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        String invalidCurrentPlan \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CurrentPlan(invalidCurrentPlan));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public void isCurrentPlan() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        // null address","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e CurrentPlan.isValidCurrentPlan(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(CurrentPlan.isValidCurrentPlan(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        // valid addresses","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(CurrentPlan.isValidCurrentPlan(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(CurrentPlan.isValidCurrentPlan(\"Prudential Proshield\")); //Any string","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(CurrentPlan.isValidCurrentPlan(\"-\")); // one character","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(CurrentPlan.isValidCurrentPlan(\"Prduential Long String Financial Plan\")); // long string","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"KT27Learn":36}},{"path":"src/test/java/seedu/address/model/person/DisposableIncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class DisposableIncomeTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DisposableIncome(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_invalidDisposableIncome_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        String invalidDisposableIncome \u003d \"-9\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DisposableIncome(invalidDisposableIncome));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public void isValidDisposableIncome() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        // null phone number","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e RiskAppetite.isValidRiskAppetite(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(DisposableIncome.isValidDisposableIncome(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(DisposableIncome.isValidDisposableIncome(\"-91\")); // negative integer","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(DisposableIncome.isValidDisposableIncome(\"risk\")); // non-numeric","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(DisposableIncome.isValidDisposableIncome(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(DisposableIncome.isValidDisposableIncome(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        // valid phone numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(DisposableIncome.isValidDisposableIncome(\"2432\")); // Integer between 1 and 5","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(DisposableIncome.isValidDisposableIncome(\"5327891732\")); // Integer between 1 and 5","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"KT27Learn":38}},{"path":"src/test/java/seedu/address/model/person/LastMetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Domszy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Domszy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Domszy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Domszy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Domszy"},"content":"public class LastMetTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Domszy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Domszy"},"content":"    public void constructor_invalidLastMet_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        String invalidLastMet \u003d \"hello\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Domszy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LastMet(invalidLastMet));","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Domszy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Domszy"},"content":"    public void isValidLastMet() {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Domszy"},"content":"        // null email","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Domszy"},"content":"        assertThrows(NullPointerException.class, () -\u003e LastMet.isValidLastMet(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Domszy"},"content":"        // blank email","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Domszy"},"content":"        assertFalse(LastMet.isValidLastMet(\" \")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Domszy"},"content":"        // missing parts","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Domszy"},"content":"        assertFalse(LastMet.isValidLastMet(\"20-30\")); // missing local part","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Domszy"},"content":"        // invalid parts","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Domszy"},"content":"        assertFalse(LastMet.isValidLastMet(\"20-50-5050\")); // invalid domain name","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Domszy"},"content":"        assertFalse(LastMet.isValidLastMet(\"60-08-2010\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Domszy"},"content":"        assertFalse(LastMet.isValidLastMet(\"5654-08-12\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Domszy"},"content":"        // valid email","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Domszy"},"content":"        assertTrue(LastMet.isValidLastMet(\"20-12-2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Domszy"},"content":"        assertTrue(LastMet.isValidLastMet(\"20-09-2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Domszy"},"content":"        assertTrue(LastMet.isValidLastMet(\"30-12-2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Domszy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"benedictchuajj":2,"KT27Learn":1,"Domszy":35}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLIENTID_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CURRENTPLAN_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DISPOSABLEINCOME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTMET_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKAPPETITE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"        // same email and client ID, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"                .withAddress(VALID_ADDRESS_BOB).withRiskAppetite(VALID_RISKAPPETITE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"                .withDisposableIncome(VALID_DISPOSABLEINCOME_BOB).withCurrentPlan(VALID_CURRENTPLAN_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"                .withLastMet(VALID_LASTMET_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        // different client id, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withClientId(VALID_CLIENTID_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        // different email, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        // email and name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB.toUpperCase()).withName(\"Not Bob\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"        // different risk appetite -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRiskAppetite(VALID_RISKAPPETITE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"        // different disposable income -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withDisposableIncome(VALID_DISPOSABLEINCOME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"        // different current plan -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCurrentPlan(VALID_CURRENTPLAN_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        // different last met-\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastMet(VALID_LASTMET_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KT27Learn":27,"-":79,"wyrchris":7}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        String invalidPhone \u003d \"hello\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KT27Learn":2,"-":38}},{"path":"src/test/java/seedu/address/model/person/RiskAppetiteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class RiskAppetiteTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RiskAppetite(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public void constructor_invalidRiskAppetite_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        String invalidRiskAppetite \u003d \"9\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RiskAppetite(invalidRiskAppetite));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public void isValidRiskAppetite() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        // null phone number","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(NullPointerException.class, () -\u003e RiskAppetite.isValidRiskAppetite(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(RiskAppetite.isValidRiskAppetite(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(RiskAppetite.isValidRiskAppetite(\"91\")); // integer not within 1 and 5","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(RiskAppetite.isValidRiskAppetite(\"risk\")); // non-numeric","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(RiskAppetite.isValidRiskAppetite(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        assertFalse(RiskAppetite.isValidRiskAppetite(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        // valid phone numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(RiskAppetite.isValidRiskAppetite(\"2\")); // Integer between 1 and 5","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(RiskAppetite.isValidRiskAppetite(\"5\")); // Integer between 1 and 5","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"KT27Learn":38}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    private static final String INVALID_CLIENTID \u003d \"SEWQOJEWOQ\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    private static final String INVALID_RISKAPPETITE \u003d \"7\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    private static final String INVALID_DISPOSABLEINCOME \u003d \"-329\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"    private static final String INVALID_LASTMET \u003d \"40-01-1999\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Domszy"},"content":"    private static final String EXAMPLE_CURRENT_PLAN \u003d \"Prudential PRUShield\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_CLIENTID \u003d \"10\";","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_RISKAPPETITE \u003d BENSON.getRiskAppetite().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    private static final String VALID_DISPOSABLEINCOME \u003d BENSON.getDisposableIncome().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Domszy"},"content":"    private static final String VALID_LASTMET \u003d BENSON.getLastMet().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"                        VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"                VALID_ADDRESS, VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME,","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"                EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"                        VALID_ADDRESS, VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN,","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"                        VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, null,","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME,","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"                EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"                        VALID_LASTMET, VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"                VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"                        VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"                VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Domszy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Domszy"},"content":"    public void toModelType_invalidLastMet_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Domszy"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"wyrchris"},"content":"                        VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, INVALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Domszy"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"    public void toModelType_invalidRiskAppetite_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"                        INVALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"        String expectedMessage \u003d RiskAppetite.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"Domszy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Domszy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"Domszy"},"content":"    public void toModelType_nullLastMet_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME,","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"wyrchris"},"content":"                null, EXAMPLE_CURRENT_PLAN, VALID_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"Domszy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LastMet.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"    public void toModelType_nullRiskAppetite_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"                VALID_ADDRESS, null, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RiskAppetite.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"    public void toModelType_invalidDisposableIncome_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"                        VALID_RISKAPPETITE, INVALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"        String expectedMessage \u003d DisposableIncome.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"    public void toModelType_nullDisposableIncome_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"KT27Learn"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"KT27Learn"},"content":"                VALID_ADDRESS, VALID_RISKAPPETITE, null, EXAMPLE_CURRENT_PLAN, VALID_LASTMET, VALID_TAGS);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"KT27Learn"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DisposableIncome.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"KT27Learn"},"content":"                new JsonAdaptedPerson(VALID_CLIENTID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"KT27Learn"},"content":"                        VALID_RISKAPPETITE, VALID_DISPOSABLEINCOME, EXAMPLE_CURRENT_PLAN,","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"benedictchuajj"},"content":"                        VALID_LASTMET, invalidTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KT27Learn":49,"benedictchuajj":2,"Domszy":14,"-":103,"wyrchris":18}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"benedictchuajj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"benedictchuajj"},"content":"        \"JsonAddressBookStorageTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benedictchuajj":2,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"benedictchuajj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"benedictchuajj"},"content":"        \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benedictchuajj":2,"-":46}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"benedictchuajj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"benedictchuajj"},"content":"        \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"benedictchuajj"},"content":"            \"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"benedictchuajj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null,","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"benedictchuajj"},"content":"            \"SomeFile.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benedictchuajj":6,"-":120}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setClientId(person.getClientId());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Domszy"},"content":"        descriptor.setLastMet(person.getLastMet());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Domszy"},"content":"        descriptor.setCurrentPlan(person.getCurrentPlan());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setRiskAppetite(person.getRiskAppetite());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setDisposableIncome(person.getDisposableIncome());","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"    public EditPersonDescriptorBuilder withClientId(String clientId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setClientId(new ClientId(clientId));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"Domszy"},"content":"     * Sets the {@code Current Plan} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"Domszy"},"content":"    public EditPersonDescriptorBuilder withCurrentPlan(String currentPlan) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"Domszy"},"content":"        descriptor.setCurrentPlan(new CurrentPlan(currentPlan));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"Domszy"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code RiskAppetite} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"    public EditPersonDescriptorBuilder withRiskAppetite(String riskAppetite) {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setRiskAppetite(new RiskAppetite(riskAppetite));","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code LastMet} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"Domszy"},"content":"    public EditPersonDescriptorBuilder withLastMet(String lastMetDate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"Domszy"},"content":"        descriptor.setLastMet(new LastMet(lastMetDate));","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"Domszy"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code DisposableIncome} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"    public EditPersonDescriptorBuilder withDisposableIncome(String disposableIncome) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"        descriptor.setDisposableIncome(new DisposableIncome(disposableIncome));","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"KT27Learn":33,"benedictchuajj":2,"Domszy":16,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.CurrentPlan;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.DisposableIncome;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import seedu.address.model.person.RiskAppetite;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    public static final String DEFAULT_CLIENTID \u003d \"0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    public static final String DEFAULT_RISKAPPETITE \u003d \"3\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    public static final String DEFAULT_DISPOSABLEINCOME \u003d \"300\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Domszy"},"content":"    public static final String DEFAULT_LASTMET \u003d \"24-09-2021\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Domszy"},"content":"    public static final String DEFAULT_CURRENTPLAN \u003d \"Prudential PRUwealth\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    private ClientId clientId;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Domszy"},"content":"    private LastMet lastMet;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Domszy"},"content":"    private CurrentPlan currentPlan;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    private RiskAppetite riskAppetite;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    private DisposableIncome disposableIncome;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        clientId \u003d new ClientId(DEFAULT_CLIENTID);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"        riskAppetite \u003d new RiskAppetite(DEFAULT_RISKAPPETITE);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"        disposableIncome \u003d new DisposableIncome(DEFAULT_DISPOSABLEINCOME);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Domszy"},"content":"        lastMet \u003d new LastMet(DEFAULT_LASTMET);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Domszy"},"content":"        currentPlan \u003d new CurrentPlan(DEFAULT_CURRENTPLAN);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"        clientId \u003d personToCopy.getClientId();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"        riskAppetite \u003d personToCopy.getRiskAppetite();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        disposableIncome \u003d personToCopy.getDisposableIncome();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Domszy"},"content":"        currentPlan \u003d personToCopy.getCurrentPlan();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Domszy"},"content":"        lastMet \u003d personToCopy.getLastMet();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"    public PersonBuilder withClientId(String clientId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"        this.clientId \u003d new ClientId(clientId);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code RiskAppetite} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"    public PersonBuilder withRiskAppetite(String riskAppetite) {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"        this.riskAppetite \u003d new RiskAppetite(riskAppetite);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"     * Sets the {@code DisposableIncome} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"    public PersonBuilder withDisposableIncome(String disposableIncome) {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"        this.disposableIncome \u003d new DisposableIncome(disposableIncome);","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Domszy"},"content":"    public PersonBuilder withLastMet(String lastMetDate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Domszy"},"content":"        this.lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Domszy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Domszy"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Domszy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Domszy"},"content":"    public PersonBuilder withCurrentPlan(String currentPlan) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"Domszy"},"content":"        this.currentPlan \u003d new CurrentPlan(currentPlan);","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Domszy"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"Domszy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"Domszy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"wyrchris"},"content":"     * @return {@code Person} that we are building","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"        return new Person(clientId, name, phone, email, address, riskAppetite,","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"            disposableIncome, currentPlan, lastMet, tags);","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"KT27Learn":39,"benedictchuajj":2,"Domszy":18,"-":102,"wyrchris":4}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTPLAN;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISPOSABLEINCOME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKAPPETITE;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        sb.append(PREFIX_RISKAPPETITE + person.getRiskAppetite().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        sb.append(PREFIX_DISPOSABLEINCOME + person.getDisposableIncome().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        sb.append(PREFIX_CURRENTPLAN + person.getCurrentPlan().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        sb.append(PREFIX_LASTMET + person.getLastMet().dateInString + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        person.getTags().stream().forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"        descriptor.getRiskAppetite().ifPresent(riskAppetite -\u003e sb.append(PREFIX_RISKAPPETITE)","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"                .append(riskAppetite.value).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"        descriptor.getDisposableIncome().ifPresent(disposableIncome -\u003e sb.append(PREFIX_DISPOSABLEINCOME)","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"                .append(disposableIncome.value).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"        descriptor.getCurrentPlan().ifPresent(currentPlan -\u003e sb.append(PREFIX_CURRENTPLAN)","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"                .append(currentPlan.value).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"        descriptor.getLastMet().ifPresent(lastMet -\u003e sb.append(PREFIX_LASTMET)","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"                .append(lastMet.dateInString).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"KT27Learn":9,"-":59,"wyrchris":9}},{"path":"src/test/java/seedu/address/testutil/TypicalClientIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benedictchuajj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"benedictchuajj"},"content":"import seedu.address.model.person.ClientId;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"benedictchuajj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"benedictchuajj"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"benedictchuajj"},"content":" * A utility class containing a list of {@code ClientId} objects to be used in tests.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"benedictchuajj"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"benedictchuajj"},"content":"public class TypicalClientIds {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"benedictchuajj"},"content":"    public static final ClientId CLIENT_ID_FIRST_PERSON \u003d new ClientId(\"0\");","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"benedictchuajj"},"content":"    public static final ClientId CLIENT_ID_SECOND_PERSON \u003d new ClientId(\"1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"benedictchuajj"},"content":"    public static final ClientId CLIENT_ID_THIRD_PERSON \u003d new ClientId(\"2\");","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"benedictchuajj"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"benedictchuajj":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CURRENTPLAN_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CURRENTPLAN_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DISPOSABLEINCOME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DISPOSABLEINCOME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTMET_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTMET_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKAPPETITE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKAPPETITE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withClientId(\"0\").withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"            .withPhone(\"94351253\").withRiskAppetite(\"3\").withDisposableIncome(\"300\")","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"            .withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"07-10-2021\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withClientId(\"1\").withName(\"Benson Meier\")","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"            .withRiskAppetite(\"3\").withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\")","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"            .withLastMet(\"07-10-2021\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    public static final Person CARL \u003d new PersonBuilder().withClientId(\"2\").withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"07-10-2021\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withClientId(\"3\").withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"07-10-2021\")","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withClientId(\"4\").withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\")","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"            .withLastMet(\"07-10-2021\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withClientId(\"5\").withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"07-10-2021\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withClientId(\"6\").withName(\"George Best\")","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"07-10-2021\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"    public static final Person HOON \u003d new PersonBuilder().withClientId(\"7\").withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"10-06-2021\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    public static final Person IDA \u003d new PersonBuilder().withClientId(\"8\").withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withRiskAppetite(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"            .withDisposableIncome(\"300\").withCurrentPlan(\"Prudential PRUShield\").withLastMet(\"10-06-2021\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"    public static final Person AMY \u003d new PersonBuilder().withClientId(\"9\").withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"            .withRiskAppetite(VALID_RISKAPPETITE_AMY).withDisposableIncome(VALID_DISPOSABLEINCOME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"            .withCurrentPlan(VALID_CURRENTPLAN_AMY).withLastMet(VALID_LASTMET_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    public static final Person BOB \u003d new PersonBuilder().withClientId(\"10\").withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"            .withRiskAppetite(VALID_RISKAPPETITE_BOB).withDisposableIncome(VALID_DISPOSABLEINCOME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"            .withCurrentPlan(VALID_CURRENTPLAN_BOB).withLastMet(VALID_LASTMET_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"KT27Learn":29,"-":51,"wyrchris":17}}]
