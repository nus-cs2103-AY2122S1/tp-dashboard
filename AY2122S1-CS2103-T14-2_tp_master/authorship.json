[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"# **ePoch**","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"### CS2103-T14-2","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T14-2/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp/branch/master/graph/badge.svg?token\u003d3AEQ1UY661)](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp)","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"* ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs; link those persons and CCAs together; and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"* This contact manager is:","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"  * **written in OOP fashion**.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"  * is based on the _AddressBook-Level3_ project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"* Documentation for this project, such as the User Guide and Developer Guide, can be found in the `docs` folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"* ePoch is a product of the CS2103 T14-2 team.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"justintanyf":6,"-":3,"okyntary":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"run {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"    archiveName \u003d \u0027ePoch.jar\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"justintanyf":5,"weiquu":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"### Jivesh Mohan","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"\u003cimg src\u003d\"images/jivesh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"[[github](https://github.com/jivesh)]","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"[[portfolio](team/jivesh.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"* Role: Developer","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"* Responsibilities: Integration, Git expert","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"### Jovyn Tan","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"\u003cimg src\u003d\"images/jovyntls.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"[[github](http://github.com/jovyntls)]","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"[[portfolio](team/jovyntls.md)]","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"* Responsibilities: Scheduling and tracking, Deliverables and deadlines","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"### Neo Wei Qing","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"\u003cimg src\u003d\"images/weiquu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"[[github](http://github.com/weiquu)]","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"[[portfolio](team/weiqing.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"* Responsibilities: Documentation, Code Quality","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"### Tan Yan Feng","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"\u003cimg src\u003d\"images/justintanyf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"[[github](http://github.com/justintanyf)]","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"[[portfolio](team/justintanyf.md)]","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"* Responsibilities: Intellij Expert, SourceTree Expert","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"### Teo Keane","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"\u003cimg src\u003d\"images/okyntary.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"[[github](http://github.com/okyntary)]","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"[[portfolio](team/okyntary.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"okyntary"},"content":"* Responsibilities: Gradle Expert, `Storage` component expert ","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"justintanyf":6,"jivesh":4,"weiquu":6,"-":32,"jovyntls":4,"okyntary":6}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp/branch/master/graph/badge.svg?token\u003d3AEQ1UY661)](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":77,"jovyntls":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"**Acknowledgements**","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"**Credit**","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"This project is based on the _AddressBook-Level3_ project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `deletep 1`.","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"okyntary"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"* depends on some classes in the `Model` component, as it displays objects like `Person`, `CCA`, and `Reminder` residing in their respective `Model`s.","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `PersonAddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"jivesh"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deletep 1\")` API call.","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"jivesh"},"content":"![Interactions Inside the Logic Component for the `deletep 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `PersonDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"okyntary"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\"/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"jivesh"},"content":"\u003cimg src\u003d\"images/CcaClassDiagram.png\" height\u003d\"150\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"jivesh"},"content":"\u003cimg src\u003d\"images/PersonClassDiagram.png\" height\u003d\"150\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"jivesh"},"content":"\u003cimg src\u003d\"images/ReminderClassDiagram.png\" height\u003d\"150\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"* stores the address book data i.e., all `Person`, `Cca`, and `Reminder` objects (which are contained in a `UniquePersonList`, `UniqueCcaList`, `UniqueReminderList` object respectively).","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"* stores the currently \u0027selected\u0027 `Person`, `Cca`, and `Reminder` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e`, `ObservableList\u003cCca\u003e`, and `ObservableList\u003cReminder\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"okyntary"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103-T14-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"okyntary"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"okyntary"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if the functionality of only one is needed).","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"okyntary"},"content":"The Sequence Diagram below illustrates the interactions within the Storage component for the `saveAddressBook()` API call.","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"okyntary"},"content":"\u003cimg src\u003d\"images/StorageSequenceDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"### Persons","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"A Person has:","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"* A name, represented by the `PersonName` class. Name must be unique.","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"* A phone, represented by the `Phone` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"* An email, represented by the `Email` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"* An address, represented by the `Address` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"* A set of zero or more tags, with the tags represented by the `Tag` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"Two Persons are considered identical if they have the same name.","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"okyntary"},"content":"A stronger version of equality is also defined: under this version, two Persons are considered equal if they have the same name, same phone, same email, same address, and same tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"#### Command for Adding Persons","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"The `addp` command is implemented by `PersonAddCommand`, which extends `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"#### Command for Deleting Persons","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"The `deletep` command is implemented by `PersonDeleteCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"Similar to `PersonAddCommand`, `PersonDeleteCommand` extends `Command` to practice polymorphism.","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"okyntary"},"content":"The `PersonDeleteCommand` class has an `Index` which is the index of the Person to delete, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the delete command.","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"The `getFilteredPersonList` method is called to obtain a List of Persons, `lastShownList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"If the given index exists in `lastShownList`, the corresponding Person is deleted using the `deletePerson` method defined in the `ModelManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"#### Command for Editing Persons","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"The `editp` command is implemented by `PersonEditCommand`, which extends `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"okyntary"},"content":"The `PersonEditCommand` class has an `Index` which is the index of the Person to edit, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the edit command.","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"The user needs to specify at least one of the fields.","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"weiquu"},"content":"For fields that are not specified, they default to the original values of the unedited person.","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"The `updateFilteredPersonList`, `updateFilteredCcaList`, and `updateFilteredReminderList` methods are called to update the `UI` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"#### Command for Finding Persons","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"The `findp` command is implemented by `PersonFindCommand` which extends `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"The keywords specified by the user are passed as a List to the `NameContainsKeywordsPredicate` constructor.","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"The `NameContainsKeywordsPredicate` class extends `Predicate\u003cPerson\u003e` and implements the `test` method,","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"which uses streams to filter Persons whose name matches any of the keywords.","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"jovyntls"},"content":"### CCAs","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"jovyntls"},"content":"A CCA has:","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"jovyntls"},"content":"* A CCA name, represented by the `CcaName` class. CCA name must be unique.","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"okyntary"},"content":"* Zero or more people enrolled in it, represented by the HashSet `members`.","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"okyntary"},"content":"* Zero or more reminders associated with it, represented by the HashSet `reminders`.","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"okyntary"},"content":"* A Set of zero or more tags, with the tags being represented by the `Tag` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"jovyntls"},"content":"Two CCAs are considered identical if they have the same name.","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"jovyntls"},"content":"#### Command for Adding CCAs","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"jovyntls"},"content":"The `addc` command is implemented by `CcaAddCommand`, which extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"jovyntls"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"jovyntls"},"content":"#### Command for Deleting CCAs","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"The `deletec` command is implemented by `CcaDeleteCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"Similar to `CcaAddCommand`, `CcaDeleteCommand` extends `Command` to practice polymorphism.","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"okyntary"},"content":"The `CcaDeleteCommand` class has an `Index` which is the index of the CCA to delete, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"jovyntls"},"content":"It implements the `execute` method which handles the logic of the delete command.","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"jovyntls"},"content":"The `getFilteredCcaList` method is called to obtain a List of CCAs, `lastShownList`.","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"jovyntls"},"content":"If the given index exists in `lastShownList`, the corresponding CCA is deleted using the `deleteCca` method defined in the `ModelManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"weiquu"},"content":"#### Command for Editing CCAs","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"weiquu"},"content":"The `editc` command is implemented by `CcaEditCommand`, which extends `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"weiquu"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"okyntary"},"content":"The `CcaEditCommand` class has an `Index` which is the index of the Cca to edit, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the edit command.","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"weiquu"},"content":"The user needs to specify at least one of the fields.","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"weiquu"},"content":"For fields that are not specified, they default to the original values of the unedited CCA.","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"weiquu"},"content":"The `updateFilteredPersonList`, `updateFilteredCcaList`, and `updateFilteredReminderList` methods are called to update the `UI` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"jovyntls"},"content":"#### Command for Finding CCAs","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"justintanyf"},"content":"The `findc` command is implemented by `CcaFindCommand` which extends `Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"jovyntls"},"content":"The keywords specified by the user are passed as a List to the `CcaNameContainsKeywordsPredicate` constructor.","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"jovyntls"},"content":"The `CcaNameContainsKeywordsPredicate` class extends `Predicate\u003cCca\u003e` and implements the `test` method,","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"jovyntls"},"content":"which uses streams to filter CCAs whose name matches any of the keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"justintanyf"},"content":"#### Command for Enrolling Person into CCAs","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"justintanyf"},"content":"The `enrol` command is implemented by `CcaEnrolCommand` which extends `Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"okyntary"},"content":"The `CcaEnrolCommand` class has two `Index`es, the index of the CCA to be enrolled into, and the index of the Person to enrol, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"justintanyf"},"content":"It implements the `execute` method which handles the logic of the enrol command.","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"justintanyf"},"content":"The `getFilteredCcaList` and `getFilteredPersonList` method is called to obtain a List of CCAs and Persons, `lastShownCcaList` and `lastShownPersonList` respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"okyntary"},"content":"If the gives `Indexes` exist in `lastShownCcaList` and `lastShownPersonList`, the corresponding Person is enrolled into the corresponding CCA using the `enrolPersonIntoCca` method defined in the `ModelManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"justintanyf"},"content":"#### Command for Expelling Person from CCAs","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"justintanyf"},"content":"The `expel` command is implemented by `CcaExpelCommand` which extends `Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"okyntary"},"content":"The `CcaExpelCommand` class has two `Index`es, the index of the CCA to be expelled from, and the index of the Person to expel, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"justintanyf"},"content":"It implements the `execute` method which handles the logic of the expel command.","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"justintanyf"},"content":"The `getFilteredCcaList` and `getFilteredPersonList` method is called to obtain a List of CCAs and Persons, `lastShownCcaList` and `lastShownPersonList` respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"okyntary"},"content":"If the gives `Indexes` exist in `lastShownCcaList` and `lastShownPersonList`, the corresponding Person is expelled from the corresponding CCA using the `expelPersonFromCca` method defined in the `ModelManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"weiquu"},"content":"### Reminders","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"weiquu"},"content":"A Reminder has:","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"weiquu"},"content":"* A reminder name, represented by the `ReminderName` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"weiquu"},"content":"* A start date, represented by the `ReminderStartDate` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"weiquu"},"content":"* Zero or one frequency, represented by the `ReminderFrequency` class and making use of enumerations from the `Frequency` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"weiquu"},"content":"* Zero or one occurrence, represented by the `ReminderOccurrence` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"okyntary"},"content":"* Exactly one CCA that it is linked to, represented as a `CcaName` data field as a String.","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"okyntary"},"content":"* An ArrayList of `Date`s which represents all upcoming dates of the reminder.","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"weiquu"},"content":"Two Reminders are considered identical if they have the same name and same start date.","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"okyntary"},"content":"A stronger version of equality is also defined: under this version, two Reminders are considered equal if they have the same name, same CCA, same start date, same frequency, and same occurrence.","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"weiquu"},"content":"#### Command for Adding Reminders","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"weiquu"},"content":"The `addr` command is implemented by `ReminderAddCommand`, which extends `Command`.","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"weiquu"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"weiquu"},"content":"If the user does not specify a frequency and occurrence, the frequency defaults to a One-off frequency and the occurrence defaults to 1 (since we take it that the Reminder only occurs once).","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"weiquu"},"content":"If the user specifies only one of frequency and occurrence, then an error is thrown.","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"okyntary"},"content":"The `ReminderAddCommand` class has an `Index` which is the index of the CCA to add the Reminder to, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the add command.","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"weiquu"},"content":"The `updateFilteredCcaList` and `updateFilteredReminderList` methods are called to update the `UI` component.","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"weiquu"},"content":"#### Command for Deleting Reminders","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"weiquu"},"content":"The `deleter` command is implemented by `ReminderDeleteCommand`.","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"weiquu"},"content":"Similar to `ReminderAddCommand`, `ReminderDeleteCommand` extends `Command` to practice polymorphism.","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"okyntary"},"content":"The `ReminderDeleteCommand` class has an `Index` which is the index of the Reminder to delete, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the delete command.","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"weiquu"},"content":"The `getFilteredReminderList` method is called to obtain a List of Reminders, `lastShownList`.","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"weiquu"},"content":"If the given index exists in `lastShownList`, the corresponding Reminder is deleted using the `deleteReminder` method defined in the `ModelManager`.","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"weiquu"},"content":"#### Command for Editing Reminders","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"jivesh"},"content":"The `editr` command is implemented by `ReminderEditCommand`, which extends `Command`.","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"jivesh"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"jivesh"},"content":"If the user does not specify any of the fields, the fields default to the original values of the unedited reminder.","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"okyntary"},"content":"The `ReminderEditCommand` class has an `Index` which is the index of the Reminder to be edited, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the edit command.","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"weiquu"},"content":"The `updateFilteredPersonList`, `updateFilteredCcaList`, and `updateFilteredReminderList` methods are called to update the `UI` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"weiquu"},"content":"#### Command for Finding Reminders","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"weiquu"},"content":"The `findr` command is implemented by `ReminderFindCommand` which extends `Command`.","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"weiquu"},"content":"Similar to other commands, `ReminderFindCommand` extends `Command` to practice polymorphism.","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"weiquu"},"content":"The keywords specified by the user are passed as a List to the `ReminderNameContainsKeywordsPredicate` constructor.","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"weiquu"},"content":"The `ReminderNameContainsKeywordsPredicate` class extends `Predicate\u003cReminder\u003e` and implements the `test` method,","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"weiquu"},"content":"which uses streams to filter Reminders whose name matches any of the keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":326,"author":{"gitId":"weiquu"},"content":"#### Command for Snoozing Reminders","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"weiquu"},"content":"The `snoozer` command is implemented by `ReminderSnoozeCommand`, which extends `Command`.","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"weiquu"},"content":"Polymorphism allows the different Command objects to be passed around and executed without having to know what type of Command it is.","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":331,"author":{"gitId":"okyntary"},"content":"The `ReminderSnoozeCommand` has an `Index` which is the index of the Reminder to snooze, specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":332,"author":{"gitId":"okyntary"},"content":"If the `Index` is not valid, an error message is shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"weiquu"},"content":"It implements the `execute` method which handles the logic of the snooze command.","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"weiquu"},"content":"It edits the Reminder by getting its next date and updating the `UI` components, using the same process as the `ReminderEditCommand`.","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"weiquu"},"content":"If the Reminder is on its last occurrence, this action performs the same action as the `ReminderDeleteCommand` (as the Reminder has no more occurrences after being snoozed).","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":337,"author":{"gitId":"weiquu"},"content":"### Tags","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"weiquu"},"content":"A Tag has:","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":341,"author":{"gitId":"weiquu"},"content":"* A tag name, represented by a `String`","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"weiquu"},"content":"Two Tags are considered identical if they have the same name.","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"okyntary"},"content":"### Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"okyntary"},"content":"The current Storage mechanism is split into two main sections: `AddressBook` storage, for all ePoch-related data, and `UserPrefs` storage, for all user preference-related data.","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"okyntary"},"content":"Whenever ePoch needs to save or update its storage, it converts the relevant object into a json object with the `saveJsonFile` method in `jsonUtil`.","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"okyntary"},"content":"There are three main classes in ePoch that need to be saved: `Person`, `Cca`, and `Reminder`. Each of these classes is converted to its corresponding `JsonAdapted` class,","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"okyntary"},"content":"to be made suitable for json conversion. Because each `Cca` object contains a Set of `Person`s and `Reminder`s as members, `JsonAdaptedPerson` and `JsonAdaptedReminder` will be stored within `JsonAdaptedCca`.","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"okyntary"},"content":"Also, because each `Person` and `Cca` object contains a Set of `Tag`s, `JsonAdaptedTag` will be stored within `JsonAdaptedPerson` and `JsonAdaptedCca` as well.","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"okyntary"},"content":"**Alternatives considered**: instead of storing whole `Person` and `Reminder` objects in `Cca` objects, the alternative of storing unique identifiers for them as `Pid`, `Rid` etc was considered. In the end, this possibility was rejected","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"okyntary"},"content":"because of how time-consuming refactoring the entire project to use this new system would be.","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-09-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2021-09-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2021-09-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2021-09-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2021-09-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2021-09-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2021-09-27"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2021-09-27"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"okyntary"},"content":"* has a need to manage a significant number of contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"okyntary"},"content":"* prefers desktop apps over other types.","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"okyntary"},"content":"* can type fast.","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"okyntary"},"content":"* prefers typing to mouse interactions.","lastModifiedDate":"2021-11-08"},{"lineNumber":379,"author":{"gitId":"okyntary"},"content":"* is reasonably comfortable using CLI apps.","lastModifiedDate":"2021-11-08"},{"lineNumber":380,"author":{"gitId":"okyntary"},"content":"* has many contacts that are spread across different CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":381,"author":{"gitId":"okyntary"},"content":"* needs to keep track of many recurring reminders associated with each CCA.","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":383,"author":{"gitId":"jovyntls"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-27"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":385,"author":{"gitId":"okyntary"},"content":"ePoch helps NUS students keep track of their many contacts and events across various CCAs.","lastModifiedDate":"2021-11-03"},{"lineNumber":386,"author":{"gitId":"jovyntls"},"content":"The product allows students to link persons with CCAs and set reminders that repeat over a given time interval, to conveniently organise their commitments and overlapping social circles.","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2021-09-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-09-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":393,"author":{"gitId":"jovyntls"},"content":"| Priority | As a …                                     | I want to …                    | So that I can…                                                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":394,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":395,"author":{"gitId":"jovyntls"},"content":"| `* * *` | new user | see usage instructions of ePoch | refer to instructions if I forget how to use ePoch |","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"jovyntls"},"content":"| `* * *` | user who dislikes using the mouse or trackpad | interact with an app through a command line interface | rely exclusively on keyboard inputs |","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"jovyntls"},"content":"| `* * *` | user who has multiple friends, CCAs, and reminders | be able to view all within a clean and user-friendly UI | view them quickly and efficiently |","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"okyntary"},"content":"| `* *` | user with multiple devices across different operating systems | use ePoch across multiple platforms | access its functionality regardless of the device I am using |","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"okyntary"},"content":"| `* * *` | user who meets many fellow students | be able to add contacts in ePoch | keep track of the people I meet |","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"okyntary"},"content":"| `* * *` | busy user | be able to delete contacts from ePoch | stop keeping track of contacts that are no longer relevant |","lastModifiedDate":"2021-11-08"},{"lineNumber":401,"author":{"gitId":"okyntary"},"content":"| `* * *` | user with multiple CCAs | be able to add all the CCAs I am involved in | keep track of them |","lastModifiedDate":"2021-11-08"},{"lineNumber":402,"author":{"gitId":"okyntary"},"content":"| `* * *` | user who changes CCAs over time | be able to delete CCAs | stop keeping track of those CCAs that I am no longer a part of |","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"jovyntls"},"content":"| `* * *` | user | add a person to a CCA | keep track of what CCAs my friends are in |","lastModifiedDate":"2021-09-28"},{"lineNumber":404,"author":{"gitId":"okyntary"},"content":"| `* * *` | user whose friends are joining many CCAs | be able to efficiently add people to CCAs | keep track of my friends from different CCAs |","lastModifiedDate":"2021-11-08"},{"lineNumber":405,"author":{"gitId":"jovyntls"},"content":"| `* * *` | user whose friends are experimenting with CCAs | be able to efficiently remove people from CCAs | update ePoch with the latest information |","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"okyntary"},"content":"| `* * *` | user with many CCA commitments | be able to add reminders associated with CCAs | stay on top of things by organising my CCA-specific commitments |","lastModifiedDate":"2021-11-08"},{"lineNumber":407,"author":{"gitId":"okyntary"},"content":"| `* * *` | user with commitments constantly in flux | delete reminders | delete irrelevant or redundant reminders |","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"okyntary"},"content":"| `* *` | user who loves to experiment | be able to quickly delete all data from ePoch at once | try out different configurations of persons, CCAs and reminders |","lastModifiedDate":"2021-11-08"},{"lineNumber":409,"author":{"gitId":"okyntary"},"content":"| `* *` | forgetful user | find any contact that matches my search terms | easily find any contact(s) that I desire |","lastModifiedDate":"2021-11-08"},{"lineNumber":410,"author":{"gitId":"jovyntls"},"content":"| `* *` | user who meets many fellow students | be able to edit the details of my contacts in ePoch | update ePoch with the latest information, especially since a contact\u0027s details may change regularly |","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"okyntary"},"content":"| `* *` | user with friends in multiple CCAs | be able to quickly view what CCAs my friends are in | keep track of which CCAs to join based on what CCAs my friends are in |","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"okyntary"},"content":"| `* *` | careless user | be able to edit the details of CCAs | fix any mistakes made when adding CCAs |","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"jovyntls"},"content":"| `* *` | user who is overcommitted with many CCAs | be able to find any CCA with a title that matches a given search term | easily filter through my many CCAs |","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"jovyntls"},"content":"| `* *` | user who has many friends from different CCAs | be able to search for a CCA and view all the people who are part of that CCA | remember who is part of that CCA |","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"okyntary"},"content":"| `* *` | user participating in different types of CCAs | add tags to categorise my CCA into categories like \u0027Music\u0027 and \u0027Sports\u0027 | differentiate and organise my different types of CCAs |","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"okyntary"},"content":"| `* *` | visual user | be able to be visually prompted of overdue reminders | visually differentiate what I need to urgently work on |","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"okyntary"},"content":"| `* *` | user who is overcommitted with many upcoming events and commitments | be able to view all the reminders associated with a CCA | see what upcoming events related to that CCA I have |","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"okyntary"},"content":"| `* *` | user who might make typos | edit reminder names | rectify any errors in the names I set for reminders |","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"jovyntls"},"content":"| `* *` | busy user with many recurring meetings | set reminders to repeat at a specific interval | be constantly reminded of my commitments without having to remember to add a new reminder each time |","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"jovyntls"},"content":"| `* *` | busy user with many recurring meetings | set reminders to repeat for a given number of occurrences | efficiently set reminders without wasting time on repeated actions |","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"jovyntls"},"content":"| `* *` | user who is overcommitted with many commitments | search for reminders with names matching given keywords | find more important reminders by their title |","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"okyntary"},"content":"| `* *` | user with many recurring reminders | snooze reminders that I have completed | clear space for reminders that I have not yet completed |","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"okyntary"},"content":"| `*` | user who manages multiple CCAs | view the number of people in each CCA | easily keep track of CCA enrolment","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"okyntary"},"content":"| `*` | organised user | be able to export my contacts to a JSON file | send an organised list of contacts to others |","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"okyntary"},"content":"(For all use cases below, **system** refers to ePoch, unless specified otherwise)","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"okyntary"},"content":"**Use case: UC1 - List all persons, CCAs, and reminders**","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"okyntary"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"okyntary"},"content":"1. User requests to list all persons, CCAs, and reminders.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"okyntary"},"content":"1. The system displays all persons, CCAs, and reminders currently stored in ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"okyntary"},"content":"Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"okyntary"},"content":"**Use case: UC2 - Add a person**","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"okyntary"},"content":"1. User requests to add a person to ePoch by specifying their name, address, email and phone number, optionally specifying additional user tags.","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"okyntary"},"content":"1. The system adds the person with the specified information to ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"okyntary"},"content":"Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":445,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"okyntary"},"content":"Extension:","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"okyntary"},"content":"- 1a. At least one attribute from name, address, email and phone number is missing or specified improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"okyntary"},"content":"  - 1a1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"okyntary"},"content":"**Use case: UC3 - Add a CCA**","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"okyntary"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"weiquu"},"content":"1. User requests to add a CCA to ePoch by specifying the CCA name, optionally specifying additional CCA tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"okyntary"},"content":"1. The system adds the CCA to ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"okyntary"},"content":"Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"okyntary"},"content":"Extension:","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"okyntary"},"content":"- 1a. The CCA name is not specified correctly, or is missing.","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"weiquu"},"content":"  - 1a1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"okyntary"},"content":"**Use case: UC4 - Add a reminder**","lastModifiedDate":"2021-10-27"},{"lineNumber":464,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"justintanyf"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"weiquu"},"content":"1. User requests to add a reminder to ePoch by specifying the id of the CCA to which it is linked, its name, and its start date, optionally specifying its frequency and occurrences.","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"okyntary"},"content":"1. The system adds the reminder to ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"okyntary"},"content":"   Use case ends.","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"okyntary"},"content":"Extension:","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"weiquu"},"content":"- 1a. At least one attribute from CCA id, name, and start date is missing or specified improperly.","lastModifiedDate":"2021-11-08"},{"lineNumber":473,"author":{"gitId":"weiquu"},"content":"    - 1a1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-11-08"},{"lineNumber":474,"author":{"gitId":"weiquu"},"content":"- 1b. Frequency is specified but occurrence is not specified.","lastModifiedDate":"2021-11-08"},{"lineNumber":475,"author":{"gitId":"weiquu"},"content":"    - 1b1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-11-08"},{"lineNumber":476,"author":{"gitId":"weiquu"},"content":"- 1c. Occurrence is specified but frequency is not specified.","lastModifiedDate":"2021-11-08"},{"lineNumber":477,"author":{"gitId":"weiquu"},"content":"    - 1c1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"okyntary"},"content":"**Use case: UC5 - Find a person**","lastModifiedDate":"2021-10-27"},{"lineNumber":480,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"okyntary"},"content":"**MSS**","lastModifiedDate":"2021-10-27"},{"lineNumber":482,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":483,"author":{"gitId":"okyntary"},"content":"1. User requests to find a person based on the specified attributes.","lastModifiedDate":"2021-10-27"},{"lineNumber":484,"author":{"gitId":"weiquu"},"content":"1. The system displays all persons that fit the user\u0027s specifications, as well as related CCAs and reminders. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"okyntary"},"content":"   Use case ends.","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"okyntary"},"content":"- 1a. No attributes are specified, or attributes are specified improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"okyntary"},"content":"  - 1a1. The system throws an error. Use case resumes from step 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"okyntary"},"content":"**Use case: UC6 - Delete a person**","lastModifiedDate":"2021-10-27"},{"lineNumber":494,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"justintanyf"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"justintanyf"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"okyntary"},"content":"1. The system shows a list of persons (UC1).","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"okyntary"},"content":"1. User requests to delete a person by specifying that person\u0027s ID.","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"weiquu"},"content":"1. The system deletes the person. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"justintanyf"},"content":"Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"justintanyf"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":504,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"okyntary"},"content":"- 2a. The list is empty. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"okyntary"},"content":"- 3a. The specified person does not exist (person ID invalid).","lastModifiedDate":"2021-10-27"},{"lineNumber":508,"author":{"gitId":"okyntary"},"content":"  - 3a1. The system throws an error. Use case resumes from step 2.","lastModifiedDate":"2021-10-27"},{"lineNumber":509,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"okyntary"},"content":"**Use case: UC7 - Enrol a person into a CCA**","lastModifiedDate":"2021-10-27"},{"lineNumber":511,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"justintanyf"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"justintanyf"},"content":"1. User requests to list persons and CCAs.","lastModifiedDate":"2021-09-28"},{"lineNumber":515,"author":{"gitId":"okyntary"},"content":"1. The system shows a list of persons and CCAs (UC1).","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"okyntary"},"content":"1. User requests to enrol a person into a CCA by specifying the IDs of the desired person and CCA.","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"okyntary"},"content":"1. The system adds the person to the CCA.","lastModifiedDate":"2021-10-27"},{"lineNumber":518,"author":{"gitId":"justintanyf"},"content":"Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":520,"author":{"gitId":"justintanyf"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":522,"author":{"gitId":"okyntary"},"content":"- 2a. The list of persons is empty. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":523,"author":{"gitId":"justintanyf"},"content":"    * 2a1. The system throws an error message. Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":524,"author":{"gitId":"okyntary"},"content":"- 2b. The list of CCAs is empty. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":525,"author":{"gitId":"justintanyf"},"content":"    * 2b1. The system throws an error message. Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"okyntary"},"content":"- 3a. The specified person does not exist (person ID invalid).","lastModifiedDate":"2021-10-27"},{"lineNumber":527,"author":{"gitId":"okyntary"},"content":"    * 3a1. The system throws an error message. Use case resumes from step 2.","lastModifiedDate":"2021-10-27"},{"lineNumber":528,"author":{"gitId":"okyntary"},"content":"- 3b. The specified CCA does not exist (CCA ID invalid).","lastModifiedDate":"2021-10-27"},{"lineNumber":529,"author":{"gitId":"weiquu"},"content":"    * 3b1. The system throws an error message. Use case resumes from step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":531,"author":{"gitId":"okyntary"},"content":"**Use case: UC8 - Clear all data**","lastModifiedDate":"2021-10-27"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":533,"author":{"gitId":"okyntary"},"content":"**MSS**","lastModifiedDate":"2021-10-27"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":535,"author":{"gitId":"okyntary"},"content":"1. User requests to clear all data.","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"okyntary"},"content":"1. The system clears all data (persons, CCAs, reminders) stored in ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"okyntary"},"content":"   Use case ends.","lastModifiedDate":"2021-10-27"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":539,"author":{"gitId":"jivesh"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-09-29"},{"lineNumber":540,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":541,"author":{"gitId":"okyntary"},"content":"1.  The system should work on any _mainstream OS_ as long as it has Java 11 or above installed.","lastModifiedDate":"2021-11-08"},{"lineNumber":542,"author":{"gitId":"okyntary"},"content":"1.  The system should be able to hold up to 1000 objects (persons, CCAs, reminders) without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"okyntary"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-27"},{"lineNumber":544,"author":{"gitId":"okyntary"},"content":"1.  The JAR file should not exceed 100MB in size.","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"okyntary"},"content":"1.  The system should respond within 2 seconds whenever a command is entered by the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2021-09-29"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":549,"author":{"gitId":"okyntary"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"okyntary"},"content":"* **Person**: A contact that the user wants to save.","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"okyntary"},"content":"* **CCA**: A school-based group that a person may be a member of.","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"okyntary"},"content":"* **Reminder**: A scheduled event associated with a CCA that the user wishes to be notified of.","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":554,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":556,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2021-09-29"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":558,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":560,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-09-29"},{"lineNumber":561,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2021-09-29"},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2021-09-29"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2021-09-29"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":568,"author":{"gitId":"okyntary"},"content":"   1. Download the ePoch JAR file and copy it into an empty folder where you wish to test it.","lastModifiedDate":"2021-11-08"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":570,"author":{"gitId":"okyntary"},"content":"   2. Double-click the JAR file to run it. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":571,"author":{"gitId":"okyntary"},"content":"      Expected: this should show the GUI with a set of sample contacts. The window size may not be optimally set for your monitor size.","lastModifiedDate":"2021-10-27"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2021-09-29"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2021-09-29"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":577,"author":{"gitId":"okyntary"},"content":"   1. Re-launch the app by double-clicking the JAR file.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":578,"author":{"gitId":"okyntary"},"content":"       Expected: The most recent window size and location should be remembered.","lastModifiedDate":"2021-10-27"},{"lineNumber":579,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":580,"author":{"gitId":"okyntary"},"content":"### Adding a person","lastModifiedDate":"2021-10-27"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":582,"author":{"gitId":"okyntary"},"content":"1. Adding a person","lastModifiedDate":"2021-10-27"},{"lineNumber":583,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":584,"author":{"gitId":"okyntary"},"content":"   1. Prerequisites: None.","lastModifiedDate":"2021-10-27"},{"lineNumber":585,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":586,"author":{"gitId":"okyntary"},"content":"   2. Test case: `addp n/Ellen Chua a/Tembusu e/ellenchua@u.nus.edu p/98225832` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":587,"author":{"gitId":"okyntary"},"content":"      Expected: a person named `Ellen Chua`, with address `Tembusu`, email `ellenchua@u.nus.edu`, and phone number `98225832` is added.","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":589,"author":{"gitId":"okyntary"},"content":"   3. Test case: `addp` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":590,"author":{"gitId":"okyntary"},"content":"      Expected: Error thrown, indicating invalid command format.","lastModifiedDate":"2021-10-27"},{"lineNumber":591,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":592,"author":{"gitId":"okyntary"},"content":"   4. Test case: `addp n/Kevin Norton`, i.e. some fields are missing. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":593,"author":{"gitId":"okyntary"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":594,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":595,"author":{"gitId":"okyntary"},"content":"   5. Other incorrect add commands to try: `add`, `addperson` etc. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":596,"author":{"gitId":"okyntary"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2021-09-29"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-09-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":602,"author":{"gitId":"okyntary"},"content":"   1. Prerequisites: List all persons using the `list` command. There must be at least one person in the list to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":604,"author":{"gitId":"okyntary"},"content":"   1. Test case: `deletep 1`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":605,"author":{"gitId":"okyntary"},"content":"      Expected: The first contact in the list is deleted. Details of the deleted contact are shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":607,"author":{"gitId":"jivesh"},"content":"   1. Test case: `deletep 0`\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-29"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":610,"author":{"gitId":"okyntary"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the size of the number of people listed) \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":611,"author":{"gitId":"jivesh"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-09-29"},{"lineNumber":612,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":613,"author":{"gitId":"okyntary"},"content":"### Adding and deleting CCAs","lastModifiedDate":"2021-10-27"},{"lineNumber":614,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":615,"author":{"gitId":"okyntary"},"content":"1. Adding and deleting CCAs can be testing similarly to testing adding and deleting persons, as explained above. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":616,"author":{"gitId":"okyntary"},"content":"   Instead of `addp` and `deletep`, the commands `addc` and `deletec` are used. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":617,"author":{"gitId":"okyntary"},"content":"   When adding a CCA, the only attribute that needs to be specified is its name.","lastModifiedDate":"2021-10-27"},{"lineNumber":618,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":619,"author":{"gitId":"okyntary"},"content":"### Adding a reminder","lastModifiedDate":"2021-10-27"},{"lineNumber":620,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":621,"author":{"gitId":"okyntary"},"content":"1. Adding a reminder to a CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":622,"author":{"gitId":"okyntary"},"content":"   1. Prerequisites: List all CCAs using the `list` command. The CCA that the reminder is to be added to is listed.","lastModifiedDate":"2021-10-27"},{"lineNumber":623,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":624,"author":{"gitId":"okyntary"},"content":"   2. Test case: `addr n/Weekly band practice cid/1 sd/2021-09-20` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":625,"author":{"gitId":"okyntary"},"content":"       Expected: a reminder named `Weekly band practice` which begins on `2021-09-20` is added to the CCA at index 1 (i.e. the first CCA in the list).","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":627,"author":{"gitId":"okyntary"},"content":"   3. Test case: `addr` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":628,"author":{"gitId":"okyntary"},"content":"      Expected: Error thrown, indicating invalid command format.","lastModifiedDate":"2021-10-27"},{"lineNumber":629,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":630,"author":{"gitId":"okyntary"},"content":"   4. Test case: `addr n/Weekly band practice`, i.e. some fields are missing. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":633,"author":{"gitId":"okyntary"},"content":"   5. Other incorrect add commands to try: `add`, `addreminder cid/0`, `addreminder cid/x` where `x` is greater than the number of CCAs listed etc. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":634,"author":{"gitId":"okyntary"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":635,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":636,"author":{"gitId":"okyntary"},"content":"### Deleting a reminder","lastModifiedDate":"2021-10-27"},{"lineNumber":637,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":638,"author":{"gitId":"okyntary"},"content":"1. Deleting a reminder while all reminders are being shown","lastModifiedDate":"2021-10-27"},{"lineNumber":639,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":640,"author":{"gitId":"okyntary"},"content":"    1. Prerequisites: List all reminders using the `list` command. There must be at least one reminder in the list to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":641,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":642,"author":{"gitId":"okyntary"},"content":"    2. Test case: `deleter 1`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":643,"author":{"gitId":"okyntary"},"content":"       Expected: The first reminder in the list is deleted. Details of the deleted contact are shown in the status message.","lastModifiedDate":"2021-10-27"},{"lineNumber":644,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":645,"author":{"gitId":"okyntary"},"content":"    3. Test case: `deletep 0`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":646,"author":{"gitId":"okyntary"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-27"},{"lineNumber":647,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":648,"author":{"gitId":"okyntary"},"content":"    4. Other incorrect delete commands to try: `delete`, `deleter x` (where x is larger than the number of reminders listed) \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":649,"author":{"gitId":"okyntary"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":650,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":651,"author":{"gitId":"okyntary"},"content":"### Enrolling a person into a CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":652,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":653,"author":{"gitId":"okyntary"},"content":"1. Enrolling a person to a CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":654,"author":{"gitId":"okyntary"},"content":"    1. Prerequisites: List all persons and CCAs using the `list` command. The person to be enrolled, and the CCA that they are to be enrolled into must be listed.","lastModifiedDate":"2021-10-27"},{"lineNumber":655,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":656,"author":{"gitId":"okyntary"},"content":"    2. Test case: `enrol pid/1 cid/1` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":657,"author":{"gitId":"okyntary"},"content":"       Expected: the first person in the list of persons is enrolled into the first CCA in the list of CCAs. The number of people in the specified CCA increases by 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":658,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":659,"author":{"gitId":"okyntary"},"content":"    3. Test case: `enrol` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":660,"author":{"gitId":"okyntary"},"content":"       Expected: Error thrown, indicating invalid command format.","lastModifiedDate":"2021-10-27"},{"lineNumber":661,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":662,"author":{"gitId":"okyntary"},"content":"    4. Test case: `enrol cid/1`, i.e. some fields are missing. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":663,"author":{"gitId":"okyntary"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":664,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":665,"author":{"gitId":"okyntary"},"content":"    5. Other incorrect add commands to try: `enrol`, `enrol cid/0`, `addreminder cid/x` where `x` is greater than the number of CCAs listed etc. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":666,"author":{"gitId":"okyntary"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":667,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":668,"author":{"gitId":"okyntary"},"content":"### Expelling a person from a CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":669,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":670,"author":{"gitId":"okyntary"},"content":"1. Expelling a person from a CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":671,"author":{"gitId":"okyntary"},"content":"    1. Prerequisites: List all persons and CCAs using the `list` command. The person to be expelled, and the CCA that they are to be expelled from must be listed. The person to be expelled must already be enrolled inside this CCA.","lastModifiedDate":"2021-10-27"},{"lineNumber":672,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":673,"author":{"gitId":"okyntary"},"content":"    2. Test case: `expel pid/1 cid/1` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":674,"author":{"gitId":"okyntary"},"content":"       Expected: the first person in the list of persons is expelled from the first CCA in the list of CCAs. The number of people in each CCA decreases by 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":676,"author":{"gitId":"okyntary"},"content":"    3. Test case: `expel` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":677,"author":{"gitId":"okyntary"},"content":"       Expected: Error thrown, indicating invalid command format.","lastModifiedDate":"2021-10-27"},{"lineNumber":678,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":679,"author":{"gitId":"okyntary"},"content":"    4. Test case: `expel cid/1`, i.e. some fields are missing. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":680,"author":{"gitId":"okyntary"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":681,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":682,"author":{"gitId":"okyntary"},"content":"    6. Other incorrect add commands to try: `expel`, `expel pid/0`, `expel pid/x` where `x` is greater than the number of persons listed etc. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":683,"author":{"gitId":"okyntary"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-27"},{"lineNumber":684,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":685,"author":{"gitId":"okyntary"},"content":"   5. Test case: `expel pid/1 cid/1` when the person specified is not already enrolled into the CCA specified.","lastModifiedDate":"2021-10-27"},{"lineNumber":686,"author":{"gitId":"okyntary"},"content":"      Expected: Error thrown, indicating invalid command.","lastModifiedDate":"2021-10-27"},{"lineNumber":687,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":688,"author":{"gitId":"okyntary"},"content":"### Saving and reading data","lastModifiedDate":"2021-10-27"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":690,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2021-09-29"},{"lineNumber":691,"author":{"gitId":"okyntary"},"content":"   1. Note: All contact data in ePoch (persons, CCAs, reminders) is stored in `data/addressbook.json`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":692,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":693,"author":{"gitId":"okyntary"},"content":"   2. Simulate missing file","lastModifiedDate":"2021-10-27"},{"lineNumber":694,"author":{"gitId":"okyntary"},"content":"      1. Prerequisites: Delete `addressbook.json`, if it exists, from the `/data` folder in the directory where the JAR file for ePoch is stored.","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":696,"author":{"gitId":"okyntary"},"content":"      2. Test case: Double-click the JAR file to run it. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"okyntary"},"content":"         Expected: this should show the GUI with a set of sample contacts. There should be no `addressbook.json` file in the `/data` at this exact moment.","lastModifiedDate":"2021-10-27"},{"lineNumber":698,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":699,"author":{"gitId":"okyntary"},"content":"      3. Test case: Run the `clear` command in ePoch. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":700,"author":{"gitId":"okyntary"},"content":"         Expected: this should clear all sample contacts from ePoch, and the GUI should contain no data at all. An `addressbook.json` file should be created in the `/data` folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"jovyntls"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"jovyntls"},"content":"## **Appendix: Effort**","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"jovyntls"},"content":"ePoch was a highly challenging project that required a significant amount of effort from our team.","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"jovyntls"},"content":"This could be attributed mainly to our support of multiple entities, along with allowing users to create complex relations between them.","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":709,"author":{"gitId":"jovyntls"},"content":"While AB3 deals with only one entity type (Persons), ePoch deals with three (Persons, CCAs and Reminders).","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"jovyntls"},"content":"As such, the development of ePoch was especially challenging as we had to manage not only these three entities, but also the links between them (Persons/CCAs, CCAs/Reminders).","lastModifiedDate":"2021-11-08"},{"lineNumber":711,"author":{"gitId":"jovyntls"},"content":"This was an obstacle in many ways.","lastModifiedDate":"2021-11-08"},{"lineNumber":712,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"jovyntls"},"content":"Firstly, there was a significant amount of development work needed in creating the three entities, integrating them into the current model, and designing how they would link to each other.","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"jovyntls"},"content":"It was difficult to decide how to allow these different objects to reference each other.","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"jovyntls"},"content":"Due to these associations, a significant amount of care and effort was needed to implement each feature as it could directly affect another feature and cause bugs.","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"jovyntls"},"content":"Testing was also difficult for each feature as we had to test not only the feature itself, but also how it may affect features related to other entities.","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"jovyntls"},"content":"For example, we had to significantly modify the find commands to filter one list by keywords, and the other two lists by their associations.","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":719,"author":{"gitId":"jovyntls"},"content":"Secondly, commands that deleted or edited an entity needed extra effort to implement, as we had to ensure that all associated entities were updated real-time.","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"jovyntls"},"content":"For instance, the `editc` command to edit CCAs must also update the CCA name of associated reminders, if the CCA name is changed.","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"jovyntls"},"content":"Not only must these reminders be updated, the changes needed to be reflected in the UI.","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"jovyntls"},"content":"Thirdly, storing the links between these entities was challenging.","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"jovyntls"},"content":"When an entity was updated, it needed to be updated accordingly in the storage, so that the user would not lose these changes.","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"jovyntls"},"content":"Implementing a feature often required a large change to the storage format, as we would need to preserve the relationships between different entities.","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"jovyntls"},"content":"Finally, due to the large amount of code written to support numerous entities and the relationships between them,","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"jovyntls"},"content":"we needed to write a lot more tests to achieve the same percentage of code coverage.","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"jovyntls"},"content":"We also had to take greater care in writing unit tests and designing stubs, since our entities would normally have references to other entities.","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"jovyntls"},"content":"With numerous challenges faced, our team managed to overcome the technical difficulty of ePoch\u0027s implementation and design.","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"jovyntls"},"content":"We believe a significant achievement of our relatively bug-free support of operations for three distinct entities,","lastModifiedDate":"2021-11-08"},{"lineNumber":733,"author":{"gitId":"jovyntls"},"content":"as well as commands for linking entities and commands that display the links between them","lastModifiedDate":"2021-11-08"},{"lineNumber":734,"author":{"gitId":"jovyntls"},"content":"(e.g., `findc` will display filtered CCAs along with the people and reminders associated with them).","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"justintanyf":35,"jivesh":17,"weiquu":99,"-":252,"jovyntls":82,"okyntary":249}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [ePoch’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"jovyntls":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"It is intended to be used by NUS students, to help keep track of the students and organizations that they encounter.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"![User interface](images/Ui.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"1. Download the JAR file, which can be found [here](https://github.com/AY2122S1-CS2103-T14-2/tp/releases/tag/v1.4).","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ePoch app.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"1. Double-click the file to start the app. The GUI, similar to the one shown above, should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"1. Enter commands in the command box and press Enter to execute them. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"   * **`list`** : Lists all persons, CCAs and reminders currently stored in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"   * **`addp n/Tan Wei Yang a/CAPT e/tanweiyang@u.nus.edu p/94492210`** Adds a person named `Tan Wei Yang`, with address `CAPT`, email `tanweiyang@u.nus.edu`, and phone number `94492210` to ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"   * **`deletep 3`** : Deletes the person with id 3, ie. shown as third in the list of persons.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"   * **`clear`** : Deletes all data (persons, CCAs and reminders) from ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"   * **`exit`** : Exits ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"1. Refer to the [Features](#features) segment below for details of each command.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"## Attributes in ePoch","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"Attribute Name | Type | Argument Tag | Example","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"---------------|------|--------------|--------","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"Index (CCA ID, Person ID or Reminder ID) | Positive integer | (NONE) | `1`, `5`, `10`","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"Name | String (alphanumeric English characters or spaces) | `n/` | `n/Alice`, `n/NUSSO`","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"Phone Number | String containing integers only | `p/` | `p/91234567`, `p/0123`","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"Email | String representing email in RFC822 specification | `e/` | `e/alice@mail.com`, `e/nusso123@nus`","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"Address | String | `a/` | `a/22 College Avenue East`","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"Start date | Date in yyyy-MM-dd format | `sd/` | `sd/2021-10-5`","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"Frequency | A positive integer followed by a time period; the time period is either `d` (daily), `w` (weekly), `m` (monthly) or `y` (yearly); the integer may range from 1 to 100 (inclusive) | `f/` | `f/3d`, `f/2w`, `f/6m`, `f/1y`","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"Occurrences | Positive integer from 1 to 50 (inclusive) | `o/` | `o/10`","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"Person ID | Positive integer | `pid/` | `pid/1`","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"CCA ID | Positive integer | `cid/` | `cid/1`","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"Tag | String (alphanumeric English characters with no spaces) | `t/` | `t/friend`","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"  e.g. in `addc n/CCA_NAME [t/TAG]`, `NAME` is a parameter which can be used as `addc n/NUSSO`.","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/NUSHackers t/cool` or as `n/NUSHackers`.","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"Note: ePoch has a capacity of 1,000,000,000 persons, CCAs and reminders each.","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"okyntary"},"content":"_All commands, with the exception of find-related commands, will refresh the UI to show all data in ePoch, in order to avoid confusing the user._","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"Shows a list of all persons, CCAs, reminders in ePoch.","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"### Adding a person: `addp`","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"Adds a person to ePoch.","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"jivesh"},"content":"Format: `addp n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]... ​`","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"jivesh"},"content":"A person must have at least their name, phone number, email, and address added.","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"* `addp n/Jovyn Tan Li Shyan p/98765432 e/email@mail.com a/NUS`","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"* `addp n/Neo Wei Qing p/91231234 e/wei_qing_official_email_real@gmail.com a/Cinnamon College t/friend`","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"### Editing a person: `editp`","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"Edits an existing person in ePoch.","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"Format: `editp PERSON_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...​`","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"* Edits the person at the specified displayed index. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"jivesh"},"content":"* Existing values will be updated to the input values, while unchanged fields will remain the same.","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"jivesh"},"content":"* If any new tag is added, all existing tags will be replaced with new tags.","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"jivesh"},"content":"*  `editp 1 p/91234567 e/jiveshrealemail@yahoo.com` Edits the phone number and email address of the 1st person to be `91234567` and `jiveshrealemail@yahoo.com` respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"jivesh"},"content":"*  `editp 2 n/weiq t/friend t/groupmate` Edits the name of the 2nd person to be `weiq`, clears existing tags, and sets the person\u0027s tags to `friend` and `groupmate`. ","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"### Deleting a person: `deletep`","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"Deletes the specified person from ePoch.","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"jivesh"},"content":"Format: `deletep PERSON_INDEX`","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"* Deletes the person with the specified displayed index.","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"jivesh"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"okyntary"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"* `deletep 2` deletes the person in ePoch that has an index of 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"### Finding a person: `findp`","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"Finds all the people in ePoch whose name matches any of the search keywords, along with all CCAs they are enrolled in, as well as all reminders associated with these CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"jivesh"},"content":"Format: `findp FIRST_WORD [SECOND_WORD] ....`","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"* Finds the people whose name matches any of the given space-separated keywords (and related CCAs and reminders).","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"jivesh"},"content":"* At least one keyword must be provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"### Adding a CCA: `addc`","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"Adds a CCA to ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"Format: `addc n/CCA_NAME [t/TAG]...`","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"* `addc n/NUSSO`","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"* `addc n/USKick t/USP t/Sports`","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"### Editing a CCA: `editc`","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"Edits the details of a CCA in ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"Format: `editc CCA_INDEX [n/CCA_NAME] [t/TAG]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"* Edits the CCA at the specified displayed index. The index refers to the index number shown in the displayed CCA list.","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"* Existing values will be updated to the input values, while unchanged fields will remain the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"* If any new tag is added, all existing tags will be replaced with new tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"* `editc 1 n/not nusso` Edits the name of the 1st CCA to be `not nusso`.","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"* `editc 2 t/` Clears all existing tags of the 2nd CCA.","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"jovyntls"},"content":"### Deleting a CCA: `deletec`","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"Deletes the specified CCA from ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"Format: `deletec CCA_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"* Deletes the CCA with the specified displayed index. The index refers to the index number shown in the displayed CCA list.","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"* `deletec 2` deletes the CCA in ePoch that has an index of 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"jovyntls"},"content":"### Finding a CCA: `findc`","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"Finds all the CCAs in ePoch with names that match any of the search keywords, as well as people enrolled in these CCAs and reminders associated with these CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"jivesh"},"content":"Format: `findc FIRST_WORD [SECOND_WORD] ....`","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"* Finds the CCAs whose name matches any of the given space-separated keywords (and related people and reminders).","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"* At least one keyword must be provided.","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"okyntary"},"content":"### Enrolling a person from a CCA: `enrol`","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"Enrols a person into a CCA in ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"Format: `enrol cid/CCA_INDEX pid/PERSON_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"weiquu"},"content":"* Enrols the person at the specified person displayed index into the CCA at the specified CCA displayed index. The index refers to the index number shown in the displayed person list and displayed CCA list respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"weiquu"},"content":"* `enrol cid/1 pid/2` Enrols the 2nd person shown into the 1st CCA shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"okyntary"},"content":"### Expelling a person from a CCA: `expel`","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"okyntary"},"content":"Expels a person from a CCA.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"weiquu"},"content":"Format: `expel cid/CCA_INDEX pid/PERSON_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"weiquu"},"content":"* Expels the person at the specified person displayed index from the CCA at the specified CCA displayed index. The index refers to the index number shown in the displayed person list and displayed CCA list respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"weiquu"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"weiquu"},"content":"* `expel cid/1 pid/2` Expels the 2nd person shown from the 1st CCA shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"weiquu"},"content":"### Adding a reminder to a CCA: `addr`","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":228,"author":{"gitId":"weiquu"},"content":"Adds a reminder to a CCA in ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"okyntary"},"content":"If frequency and occurrences are specified, the reminder will repeat at the specified frequency; else, the reminder will be treated as a once-off event.","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"weiquu"},"content":"Format: `addr cid/CCA_ID n/REMINDER_NAME sd/START_DATE [f/FREQUENCY] [o/OCCURRENCES]`","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"jovyntls"},"content":"* A reminder due on the current date will be highlighted in red.","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"jovyntls"},"content":"* The maximum possible number of occurrences is 50.","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"jovyntls"},"content":"* The maximum possible period of the frequency (integer part of the frequency) is 100.","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"jovyntls"},"content":"* The year of the start date of a reminder must be before 3000.","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"weiquu"},"content":"`FREQUENCY` should be specified as an integer followed immediately (no space) by a letter, either d, w, m, or y.","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"weiquu"},"content":"Letter | Meaning","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"weiquu"},"content":"-------|------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"weiquu"},"content":"**d** | day","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"weiquu"},"content":"**w** | week","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"weiquu"},"content":"**m** | month","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"weiquu"},"content":"**y** | year","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":247,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"weiquu"},"content":"* `addr cid/1 n/Rehearsal sd/2021-02-02` Adds a new reminder with name `Rehearsal` and start date 2nd February 2021 to the 1st CCA shown. The reminder is a once-off event.","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"weiquu"},"content":"* `addr cid/2 n/Class sd/2021-11-08 f/1w o/25` Adds a new reminder with name `Class` and start date 8th November 2021 to the 2nd CCA shown. The reminder repeats every week for 25 occurences.","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"weiquu"},"content":"### Editing a reminder: `editr`","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"weiquu"},"content":"Edits a the details of a reminder in ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":255,"author":{"gitId":"weiquu"},"content":"Format: `editr INDEX [n/REMINDER_NAME] [sd/START_DATE] [f/FREQUENCY] [o/OCCURRENCES]`","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":257,"author":{"gitId":"weiquu"},"content":"* Edits the reminder at the specified displayed index. The index refers to the index number shown in the displayed reminder list.","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"weiquu"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"weiquu"},"content":"* If none of the optional fields are specified (e.g. editr 1), then the reminder will not be edited (since no edits have been specified).","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"weiquu"},"content":"* Existing values will be updated to the input values, while unchanged fields will remain the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"weiquu"},"content":"* `editr 1` No edits are made to the 1st reminder shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"weiquu"},"content":"* `editr 2 sd/2021-12-25 f/1y o/2` Edits the 2nd reminder to have start date 25th December 2021 with frequency of 1 year and 2 occurrences.","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"weiquu"},"content":"### Deleting a reminder: `deleter`","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"weiquu"},"content":"Deletes the specified reminder from ePoch.","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"weiquu"},"content":"Format: `deleter REMINDER_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"weiquu"},"content":"* Deletes the reminder with the specified displayed index. The index refers to the index number shown in the displayed reminder list.","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"weiquu"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"weiquu"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"weiquu"},"content":"* `deleter 2` deletes the reminder in ePoch that has an index of 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"justintanyf"},"content":"### Finding the title of a reminder: `findr`","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"weiquu"},"content":"Finds all reminders in ePoch with names that match any of the search keywords, as well as CCAs associated with these reminders.","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"jivesh"},"content":"Format: `findr FIRST_WORD [SECOND_WORD] ....`","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":284,"author":{"gitId":"weiquu"},"content":"* Finds the reminders whose name matches any of the given space-separated keywords (and related CCAs).","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"weiquu"},"content":"* At least one keyword must be provided.","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"justintanyf"},"content":"### Snoozing a reminder: `snoozer`","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"justintanyf"},"content":"Snoozes the reminder.","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"weiquu"},"content":"Snoozing a reminder means that the reminder will be shifted to the date of its next occurrence (if any).","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"weiquu"},"content":"Format: `snoozer REMINDER_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"jovyntls"},"content":"* A reminder with only one occurrence left cannot be snoozed in order to prevent accidental deletion of reminders. The user can choose to delete the reminder instead. ","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"weiquu"},"content":"* If the reminder is not on its last occurrence (occurrences \u003e 1), snoozing the reminder will shift it to the date of its next occurrence.","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"weiquu"},"content":"* The date of next occurrence is calculated from the current date which the reminder occurs and its frequency.","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"jovyntls"},"content":"* If the next occurrence of the reminder is the current date, the reminder will be highlighted in red.","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"justintanyf"},"content":"### Delete all data from ePoch: `clear`","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"justintanyf"},"content":"Deletes all data (persons, CCAs, reminders) from ePoch.","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-09-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"justintanyf"},"content":"ePoch data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"jovyntls"},"content":"ePoch data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"jovyntls"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**Caution:**","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-09-27"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"okyntary"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the `addressbook.json` file that contains the data from your previous ePoch home folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":330,"author":{"gitId":"okyntary"},"content":"**Q**: Can I create a reminder without linking it to a CCA?\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":331,"author":{"gitId":"okyntary"},"content":"**A**: No. We do not support that functionality: all reminders must be linked to a CCA in some way.","lastModifiedDate":"2021-11-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":335,"author":{"gitId":"jovyntls"},"content":"## Summary of commands","lastModifiedDate":"2021-09-27"},{"lineNumber":336,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":337,"author":{"gitId":"jovyntls"},"content":"Action | Format","lastModifiedDate":"2021-09-27"},{"lineNumber":338,"author":{"gitId":"jovyntls"},"content":"-------|------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"okyntary"},"content":"**View help page** | `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"jovyntls"},"content":"**List all data** | `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":341,"author":{"gitId":"weiquu"},"content":"**Add person** | `addp n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"weiquu"},"content":"**Edit person data** | `editp PERSON_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"jivesh"},"content":"**Delete person** | `deletep PERSON_INDEX`","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"weiquu"},"content":"**Find person** | `findp FIRST_WORD [SECOND_WORD]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"jovyntls"},"content":"**Add CCA** | `addc n/CCA_NAME [t/TAG]...`","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"weiquu"},"content":"**Edit CCA** | `editc CCA_INDEX [n/CCA_NAME] [t/TAG]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"weiquu"},"content":"**Delete CCA** | `deletec CCA_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"jivesh"},"content":"**Find CCA** | `findc FIRST_WORD [SECOND_WORD] ....`","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"weiquu"},"content":"**Enrols a person into CCA** | `enrol cid/CCA_INDEX pid/PERSON_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"weiquu"},"content":"**Removes a person from a CCA** | `expel cid/CCA_INDEX pid/PERSON_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"weiquu"},"content":"**Add reminder** | `addr cid/CCA_INDEX n/REMINDER_NAME sd/START_DATE [f/FREQUENCY] [o/OCCURRENCES]`","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"weiquu"},"content":"**Edit reminder** | `editr REMINDER_INDEX [n/REMINDER_NAME] [sd/START_DATE] [f/FREQUENCY] [o/OCCURRENCES]`","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"weiquu"},"content":"**Delete reminder** | `deleter REMINDER_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"weiquu"},"content":"**Find reminder** | `findr FIRST_WORD [SECOND_WORD]...`","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"weiquu"},"content":"**Snooze reminder** | `snoozer REMINDER_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"okyntary"},"content":"**Delete all data** | `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"weiquu"},"content":"**Exit the app** | `exit`","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"justintanyf":18,"jivesh":16,"weiquu":116,"-":117,"jovyntls":61,"okyntary":29}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jovyntls"},"content":"    content: \"ePoch\";","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"jovyntls":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"user -[USER_COLOR]\u003e ui : \"deletep 1\"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deletep 1\")","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"jovyntls":2}},{"path":"docs/diagrams/CcaClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"Package Cca \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"Class Cca","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"Class Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"Class Person","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"Class CcaName","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"Class Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"Cca *--\u003e \"1\" CcaName","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"Cca *--\u003e \"*\" Person","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"Cca *--\u003e \"*\" Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"Cca *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jivesh":20}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"participant \":PersonDeleteCommandParser\" as PersonDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"participant \"d:PersonDeleteCommand\" as PersonDeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"[-\u003e LogicManager : execute(\"deletep 1\")","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletep 1\")","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"create PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"AddressBookParser -\u003e PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"activate PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"deactivate PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"AddressBookParser -\u003e PersonDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"activate PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"create PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommandParser -\u003e PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"activate PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommand --\u003e PersonDeleteCommandParser : d","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"deactivate PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"deactivate PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"destroy PersonDeleteCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"LogicManager -\u003e PersonDeleteCommand : execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"activate PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"Model --\u003e PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"CommandResult --\u003e PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"PersonDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"deactivate PersonDeleteCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jivesh":1,"-":41,"jovyntls":27}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"\u0027Class Address","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"\u0027Class Email","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"\u0027Class Name","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"\u0027Class Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"\u0027Class Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"Class UniqueCcaList","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"Class Cca","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"\u0027Class CcaName","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"class UniqueReminderList","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"class Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jivesh"},"content":"\u0027class ReminderName","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"\u0027class ReminderStartDate","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"jivesh"},"content":"\u0027class ReminderFrequency","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"jivesh"},"content":"\u0027class ReminderOccurrence","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"HiddenOutside .down.\u003e Model","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":54,"author":{"gitId":"jivesh"},"content":"UniquePersonList --\u003e \"~*a\" Person","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"jivesh"},"content":"\u0027Person *--\u003e Name","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"jivesh"},"content":"\u0027Person *--\u003e Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"jivesh"},"content":"\u0027Person *--\u003e Email","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"jivesh"},"content":"\u0027Person *--\u003e Address","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"jivesh"},"content":"\u0027Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"AddressBook *--\u003e \"1\" UniqueCcaList","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jivesh"},"content":"UniqueCcaList --\u003e \"~*a\" Cca","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"\u0027Cca *--\u003e CcaName","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"\u0027Cca *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"AddressBook *--\u003e \"1\" UniqueReminderList","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"UniqueReminderList --\u003e \"~*a\" Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"\u0027Reminder *--\u003e ReminderName","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"\u0027Reminder *--\u003e ReminderStartDate","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"jivesh"},"content":"\u0027Reminder *--\u003e ReminderFrequency","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"jivesh"},"content":"\u0027Reminder *--\u003e ReminderOccurrence","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"Cca *-left-\u003e \"*\" Person","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jivesh"},"content":"Cca *-left-\u003e \"*\" Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jivesh"},"content":"\u0027Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"jivesh"},"content":"\u0027Phone -[hidden]right-\u003e Address","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"jivesh"},"content":"\u0027Address -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"UniqueCcaList -[hidden]down-\u003e Cca","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"jivesh"},"content":"ModelManager --\u003e\"~*f\" Person","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"jivesh"},"content":"ModelManager --\u003e\"~*f\" Cca","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"jivesh"},"content":"ModelManager --\u003e\"~*f\" Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"jivesh"},"content":" legend","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"jivesh"},"content":" |\u003d |\u003d Short-forms |","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"jivesh"},"content":" |\u003cback\u003e a \u003c/back\u003e| all |","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"jivesh"},"content":" |\u003cback\u003e f \u003c/back\u003e| filtered |","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"jivesh"},"content":" endlegend","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jivesh":46,"-":37,"jovyntls":7}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"Class Person","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"Class Address","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"Class Email","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"Class Name","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"Class Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"Class Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jivesh":22}},{"path":"docs/diagrams/ReminderClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"Package Reminder \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"Class Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"Class ReminderName","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"Class ReminderOccurrence","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"Class ReminderStartDate","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"Class ReminderFrequency","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"Reminder *--\u003e \"1\" ReminderName","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"Reminder *--\u003e \"1\" ReminderOccurrence","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"Reminder *--\u003e \"1\" ReminderStartDate","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"Reminder *--\u003e \"1\" ReminderFrequency","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jivesh":20}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"Class JsonAdaptedCca","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"Class JsonAdaptedReminder","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedCca","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedReminder","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"JsonAdaptedCca --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"JsonAdaptedCca --\u003e \"*\" JsonAdaptedReminder","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"JsonAdaptedCca --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"JsonAdaptedReminder --\u003e Frequency","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"JsonAdaptedReminder --\u003e Date","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"okyntary":9}},{"path":"docs/diagrams/StorageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"participant \"storage:StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"participant \"addressBookStorage:JsonAddressBookStorage\" as JsonAddressBookStorage STORAGE_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"participant \":JsonSerializableAddressBook\" as JsonSerializableAddressBook STORAGE_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"box Util STORAGE_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"participant \":JsonUtil\" as JsonUtil STORAGE_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"[-\u003e LogicManager : execute(\"saveAddressBook\")","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"activate LogicManager","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"LogicManager -\u003e StorageManager : saveAddressBook()","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"activate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"StorageManager -\u003e JsonAddressBookStorage : saveAddressBook()","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"activate JsonAddressBookStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"JsonAddressBookStorage -\u003e JsonUtil : saveJsonFile()","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"activate JsonUtil","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"create JsonSerializableAddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"JsonAddressBookStorage -\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"activate JsonSerializableAddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"JsonAddressBookStorage \u003c-- JsonSerializableAddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"deactivate JsonSerializableAddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"JsonAddressBookStorage \u003c-- JsonUtil","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"deactivate JsonUtil","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"StorageManager \u003c-- JsonAddressBookStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"deactivate JsonAddressBookStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"LogicManager \u003c-- StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"deactivate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"okyntary":48}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"Class CcaListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"Class CcaCard","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"Class ReminderListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"Class ReminderCard","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"MainWindow *-down-\u003e \"1\" CcaListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"MainWindow *-down-\u003e \"1\" ReminderListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"CcaListPanel -down-\u003e \"*\" CcaCard","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"ReminderListPanel -down-\u003e \"*\" ReminderCard","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"CcaListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"CcaCard --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"ReminderListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"ReminderCard --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"CcaCard ..\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"ReminderCard ..\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"justintanyf":16,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"title: \"ePoch\"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp/branch/master/graph/badge.svg?token\u003d3AEQ1UY661)](https://codecov.io/gh/AY2122S1-CS2103-T14-2/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"It is intended to be used by NUS students, to help keep track of the students and organizations that they encounter.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"**Acknowledgements**","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"**Credit**","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"This project is based on the _AddressBook-Level3_ project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"justintanyf":11,"-":1,"okyntary":8}},{"path":"docs/team/jivesh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"title: Jivesh Mohan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"### Project: ePoch","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"My contributions to the project are listed below:","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dt14-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djivesh\u0026tabRepo\u003dAY2122S1-CS2103-T14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"  * Added `editr` command to edit reminders","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"  * Added `deletec` command to delete CCAs","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"  * Made every `find` command show associated objects","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"    * `findc` shows matching CCAs, people in the matching CCAs, and reminders attached to those CCAs","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"    * `findp` shows the CCA the matching people are in as well as the reminders attached to those CCAS","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"    * `findr` also shows the CCA attached to that reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"  * Added custom predicates for use in `findc`, `findp` and `findr`","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"  * Added rounded edges for everything in UI","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"    * Updated adding command in feature section of UG [link here](https://github.com/AY2122S1-CS2103-T14-2/tp/issues/15)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"    * Did cosmetic tweaks to existing documentation of a few features","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"    * Enhanced documentation of `find` and `...p` commands","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"    * Added NFRs in DG [link here](https://github.com/AY2122S1-CS2103-T14-2/tp/issues?q\u003dis%3Aissue+is%3Aclosed+assignee%3Ajivesh#:~:text\u003d1-,Add%20NFRs%20for%20DG,-priority.High)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"    * Added UML diagram for models [here](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/296)","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"jivesh"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"  * Made a [project](https://github.com/orgs/AY2122S1-CS2103-T14-2/projects/1) on Github to track issues","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jivesh":34}},{"path":"docs/team/jovyntls.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"title: Jovyn Tan\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"### Project: ePoch","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"- **Code contributed:** [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003djovyntls\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003djovyntls\u0026zR\u003dAY2122S1-CS2103-T14-2%2Ftp%5Bmaster%5D\u0026zACS\u003d207.23809523809524\u0026zS\u003d2021-09-17\u0026zFS\u003djovyntls\u0026zU\u003d2021-11-01\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"- **Project management:**","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"  - Managed releases `v1.1`-`v1.4` (5 releases) on GitHub","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"- **Enhancements implemented:** ","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"  - Light theme and UI improvements (PRs [#219](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/219), [#256](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/256), [#261](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/261), [#269](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/269))","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"  - Skeleton for CCAs (PR [#53](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/53))","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"  - Reminder start dates, Reminder Delete command, Reminder Find command (PRs [#79](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/79), [#83](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/83), [#117](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/117))","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"  - Validation for reminder start dates and Index integer overflows (PRs [#214](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/214), [#131](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/131))","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"  - Tests for CCA commands, CCA model, Reminder model and ReminderList, (PRs [#132](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/214), [#131](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/132), [#136](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/214), [#131](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/136), [#250](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/214), [#131](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/250))","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"- **Documentation:**","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"  - Contributions to the User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    - CCA commands (PR [#172](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/172))","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    - Attributes table","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    - Command summary (PRs [#20](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/20), [#121](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/121), [#253](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/253))","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"  - Contributions to the Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    - Command details for CCAs (PRs [#121](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/121))","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    - Implementation details for CCAs (PR [#92](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/92))","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    - UML diagrams for ArchitectureSequenceDiagram and DeleteSequenceDiagram (PRs [#238](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/238), [#241](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/241))","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    - Product scope section (PR [#33](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/33))","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"- **Contribution to team-based tasks:**","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"  - PRs reviewed: [#106](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/106), [#120](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/120), [#65](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/65),","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"  - Managed and maintained issue tracker","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"justintanyf":10,"jovyntls":24}},{"path":"docs/team/justintanyf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"title: Yan Feng\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"### Project: ePoch","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs; link those persons and CCAs together; and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003djustintanyf\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003djustintanyf\u0026zR\u003dAY2122S1-CS2103-T14-2%2Ftp%5Bmaster%5D\u0026zACS\u003d207.23809523809524\u0026zS\u003d2021-09-17\u0026zFS\u003djustintanyf\u0026zU\u003d2021-11-01\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"- **Project management:**","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"  - Performed all tech demos","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"  - Tested and released ePoch jars on GitHub","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"  - Took charge of all administrative tasks such as establishing the repository and initiated GitHub CI and CodeCov integration","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"  - Added CCA functionality and integration (Pull requests [\\#57](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/57), [\\#59](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/59), [\\#64](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/64), [\\#90](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/90))","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"  - Parallelized functions to improve load and startup times (Pull request [\\#232](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/232))","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"  - Improved and updated sample data (Pull request [\\#245](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/245))","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"  - Various bug fixes (Pull requests [\\#60](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/60), [\\#119](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/119), [\\#227](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/227), [\\#251](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/251))","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"  - Wrote tests for existing and new features to increase coverage (Pull request [\\#263](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/263))","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"  - GitHub pages integration","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"- **Contributions to UG**:","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"  - Fixed GitHub pages not displaying correctly and updated Index.md (Pull request [\\#243](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/243))","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"  - Updated UserGuide.md to better align with our goals (Pull request [\\#118](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/118))","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"  - Updated UG with command implementations with examples (Pull request [\\#29](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/29))","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"  - Added CCA commands from enrol to help","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"  - Improved and updated the UML class diagrams (Pull request [\\#246](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/246))","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"  - Added enrol and expel implementations (Pull request [\\#93](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/93))","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"  - Added user stories (Pull request [\\#36](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/36))","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"- **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"  * Reviewing and merging PRS","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"  * Solving merge conflicts","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"justintanyf":35}},{"path":"docs/team/okyntary.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"title: Teo Keane\u0027s/okyntary\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"### Project: ePoch","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"### Summary of contributions:","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"* **Code contributed**","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"  * [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dt14-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dokyntary\u0026tabRepo\u003dAY2122S1-CS2103-T14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse) ","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"* **Enhancements implemented**","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"  * Implement storage for all new features that require storage between sessions, so that important data is retained between sessions","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"    * Creation of new classes to store new objects and object types","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"      * `JsonAdaptedCca` to match new class `Cca`","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"      * `JsonAdaptedReminder` to match new class `Reminder`","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"    * Modification of existing classes to store new attributes for existing object types","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"      * `JsonSerializableAddressBook` to account for modified class `AddressBook`","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"      * `JsonAdaptedPerson` to match modified class `Person`","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"  * Add `addr` command for creating new `Reminder` objects","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"  * Modify `deletep`. `deletec` and `deleter` commands to match desired behaviour, according to ePoch\u0027s desired data structure","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"    * Added documentation for the features section [\\#31](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/31)","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"    * Proofread and edited lines over the entirety of the User Guide [\\#120](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/120)","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"    * Changed documentation for `addc` and `editc` commands to reflect changes in the parameters accepted * [\\#218](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/218)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"    * Update documentation related to `Storage` component","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"      * Update UML diagram to reflect new and modified classes in `Storage` component [\\#239](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/239) ","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"      * Added Sequence Diagram to illustrate `saveAddressBook()` method call [\\#239](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/239)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"      * Added explanation for `Storage` implementation details [\\#239](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/239)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"    * Added, proofread and edited Use Cases, Non-Functional Requirements, Glossary and Instructions for Manual Testing [\\#35](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/35/files), [\\#120](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/120)","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"- **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"  * Reviewing and merging PRS","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"  * Solving merge conflicts","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"-":12,"okyntary":28}},{"path":"docs/team/weiqing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"title: Wei Qing\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"### Project: ePoch","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"ePoch is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It has been designed for the busy NUS student, allowing the user to create contacts for persons and to create CCAs, link those persons and CCAs together, and to create periodic reminders for those CCAs.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dweiquu\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dweiquu\u0026zR\u003dAY2122S1-CS2103-T14-2%2Ftp%5Bmaster%5D\u0026zACS\u003d367.6923076923077\u0026zS\u003d2021-09-17\u0026zFS\u003dweiquu\u0026zU\u003d2021-11-06\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"  * UI changes to fit our project (Pull request [\\#56](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/56))","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"  * Skeleton for reminders (Pull request [\\#56](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/56))","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"  * Reminder utility - name, frequency, and occurrences (Pull request [\\#94](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/94))","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"  * Reminder commands - add, snooze (Pull requests [\\#63](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/63), [\\#98](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/98))","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"  * Tag colours (removed from final build) (Pull requests [\\#123](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/123), [\\#124](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/124), [\\#126](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/126), [\\#128](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/128))","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"  * Various utility classes for CCA and reminder tests (Pull requests [\\#240](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/240), [\\#264](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/264))","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"  * Wrote tests for existing and new features to increase coverage by 20.97% (Pull requests [\\#240](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/240), [\\#258](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/258), [\\#262](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/262), [\\#264](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/264))","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    * Tests for reminder model","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    * Tests for CCA commands - edit, find","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    * Tests for reminder commands - add, delete, edit, find","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    * Tests for CCA command parsers - edit, find","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    * Tests reminder command parsers - add, delete, edit, find","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    * General tests - address book parser, reminder and cca predicates","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    * Additional tests for reminder name, frequency, occurrence, and start date","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"* **Contributions to UG**:","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"  * Update UI image (Pull request [\\#56](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/56))","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"  * Documentation for reminders (Pull request [\\#129](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/129))","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"  * Standardising command formats between UG and ePoch (Pull request [\\#228](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/228))","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"  * Add explanations and examples for CCA and reminder commands (Pull request [\\#283](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/283))","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"  * NFRs and glossary (Pull request [\\#39](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/39))","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"  * Implementation details of reminder features (Pull requests [\\#97](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/97), [\\#129](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/129))","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"  * Implementation details of person features (Pull request [\\#280](https://github.com/AY2122S1-CS2103-T14-2/tp/pull/280))","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"  * Reviewing and merging PRS","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"  * Solving merge conflicts","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"  * Suggesting improvements","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":41}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Product screenshots in this section will not match the exact UI of ePoch. ","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"The screenshots depict a simplified version (from AB3) with only Persons, to highlight only relevant changes.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":401,"jovyntls":4}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Product screenshots in this section will not match the exact UI of ePoch. ","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"The screenshots depict a simplified version (from AB3) with only Persons, to highlight only relevant changes.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":112,"jovyntls":4}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"Recall from the User Guide that the `editp` command has the format: `editp INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `editp 1 n/Alice Yeoh`.","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"1. When the GUI appears, enter `editp 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"1. Stepping through the `switch` block, we end up at a call to `PersonEditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"    case PersonEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"        return new PersonEditCommandParser().parse(arguments);","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"1. Let’s see what `PersonEditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `PersonEditCommandParser()` and `parse()`.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"jovyntls"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `PersonEditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":"   **`PersonEditCommand#execute()`:**","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"jovyntls"},"content":"1. As you step through the rest of the statements in the `PersonEditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"jovyntls"},"content":"    1.  `reditp 1 n/Alice Yu`","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"jovyntls"},"content":"    2.  `editp 0 n/Alice Yu`","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"jovyntls"},"content":"    3.  `editp 1 n/Alex Yeoh`","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"jovyntls"},"content":"    4.  `editp 1`","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"jovyntls"},"content":"    5.  `editp 1 n/アリス ユー`","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"jovyntls"},"content":"    6.  `editp 1 t/one t/two t/three t/one`","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"jovyntls"},"content":"    2.  Allow `deletep` to remove more than one index at a time","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":285,"jovyntls":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"    public static final String MESSAGE_INVALID_CCA_DISPLAYED_INDEX \u003d \"The CCA index provided is invalid :(\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX \u003d \"The reminder index provided is invalid :(\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MAXIMUM_PERSONS_CAPACITY_REACHED \u003d \"You have already ePoch\u0027s maximum capacity \"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"            + \"for persons. :(\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MAXIMUM_CCAS_CAPACITY_REACHED \u003d \"You have already ePoch\u0027s maximum capacity \"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"            + \"for CCAs. :(\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MAXIMUM_REMINDERS_CAPACITY_REACHED \u003d \"You have already ePoch\u0027s maximum capacity \"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"            + \"for reminders. :(\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_INDEX_EXCEEDS_MAXIMUM_SIZE \u003d \"The index provided \"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"            + \"exceeds the maximum capacity of Epoch :(\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_CCAS_LISTED_OVERVIEW \u003d \"%1$d CCAs listed!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_REMINDERS_LISTED_OVERVIEW \u003d \"%1$d reminders listed!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"justintanyf":1,"jivesh":1,"-":13,"jovyntls":10}},{"path":"src/main/java/seedu/address/commons/exceptions/IndexExceedsCapacityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * Signals that some given index exceeds ePoch\u0027s maximum capacity.","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"public class IndexExceedsCapacityException extends IllegalValueException {","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    public IndexExceedsCapacityException(String message) {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"        super(message);","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * @param cause of the main exception","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public IndexExceedsCapacityException(String message, Throwable cause) {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jovyntls":21}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    /** Returns an unmodifiable view of the filtered list of CCAs */","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    ObservableList\u003cCca\u003e getFilteredCcaList();","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    /** Returns an unmodifiable view of the filtered list of reminders */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    ObservableList\u003cReminder\u003e getFilteredReminderList();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weiquu":4,"-":50,"jovyntls":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"    public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        return model.getFilteredCcaList();","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    public ObservableList\u003cReminder\u003e getFilteredReminderList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        return model.getFilteredReminderList();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weiquu":6,"-":81,"jovyntls":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" * Clears ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"ePoch has been cleared!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"jovyntls":2}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ePoch as requested ...\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"jovyntls":1}},{"path":"src/main/java/seedu/address/logic/commands/GreetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" * Lists all persons in ePoch to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"greet\";","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello! I am ePoch!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"-":20,"jovyntls":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"            + \"To see example use of individual commands, enter that command with no parameters (e.g. \u0027addp\u0027)\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weiquu":1,"-":20,"jovyntls":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":" * Lists all persons, CCAs and reminders in ePoch to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons, CCAs and reminders\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"        model.resetAllFilteredLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jivesh":1,"-":20,"jovyntls":1,"okyntary":1}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAXIMUM_CCAS_CAPACITY_REACHED;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":" * Adds a CCA to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"public class CcaAddCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a CCA to ePoch. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_NAME + \"NUS Symphony Orchestra \"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_TAG + \"Music \"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_TAG + \"InterviewDependent\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New CCA added: %1$s\";","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_CCA \u003d \"This CCA already exists in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CcaAddCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    private final Cca toAdd;","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"     * Creates an CcaAddCommand to add the specified {@code Cca}","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    public CcaAddCommand(Cca cca) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(cca);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        toAdd \u003d cca;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        if (model.hasCca(toAdd)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CCA);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        if (model.getNumberOfCcas() \u003d\u003d model.MAXIMUM_CAPACITY_CCAS) {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(MESSAGE_MAXIMUM_CCAS_CAPACITY_REACHED);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        model.addCca(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"        logger.log(Level.FINE, \"CCA successfully added\");","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof CcaAddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 toAdd.equals(((CcaAddCommand) other).toAdd));","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"justintanyf":12,"weiquu":2,"jovyntls":66}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"public class CcaDeleteCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"            + \": Deletes the CCA identified by the index number used in the displayed CCA list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"    public static final String MESSAGE_DELETE_CCA_SUCCESS \u003d \"Deleted CCA: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"    private final Index targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"    public CcaDeleteCommand(Index targetCcaIndex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"        this.targetCcaIndex \u003d targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"jivesh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"jivesh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"jivesh"},"content":"        List\u003cCca\u003e lastShownList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"        if (targetCcaIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"        Cca ccaToDelete \u003d lastShownList.get(targetCcaIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"        Set\u003cReminder\u003e remindersToDelete \u003d ccaToDelete.getReminders();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"        ObservableList\u003cReminder\u003e reminderList \u003d model.getAddressBook().getReminderList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"        for (int i \u003d 0; i \u003c reminderList.size(); ) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"            Reminder reminder \u003d reminderList.get(i);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"            if (remindersToDelete.contains(reminder)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"                model.deleteReminder(reminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"                i++;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"        model.deleteCca(ccaToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CCA_SUCCESS, ccaToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"                || (other instanceof CcaDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"                \u0026\u0026 targetCcaIndex.equals(((CcaDeleteCommand) other).targetCcaIndex)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justintanyf":8,"jivesh":41,"weiquu":2,"jovyntls":8,"okyntary":13}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":" * Edits the details of an existing CCA in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"public class CcaEditCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the CCA identified \"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"            + \"by the index number used in the displayed CCA list. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000) \"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_NAME + \"New Name \"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_TAG + \"newTag\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_EDIT_CCA_SUCCESS \u003d \"Edited CCA: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_CCA \u003d \"This CCA already exists in ePoch.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"    private final Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    private final EditCcaDescriptor editCcaDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"     * @param index of the CCA in the filtered CCA list to edit","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"     * @param editCcaDescriptor details to edit the person with","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"    public CcaEditCommand(Index index, EditCcaDescriptor editCcaDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(editCcaDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"        this.editCcaDescriptor \u003d new EditCcaDescriptor(editCcaDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"        List\u003cCca\u003e lastShownList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"        Cca ccaToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"        Cca editedCca \u003d createEditedCca(ccaToEdit, editCcaDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"justintanyf"},"content":"        if (!ccaToEdit.isSameCca(editedCca) \u0026\u0026 model.hasCca(editedCca)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CCA);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        ObservableList\u003cReminder\u003e reminderList \u003d model.getAddressBook().getReminderList();","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        for (int i \u003d 0; i \u003c reminderList.size(); i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"            Reminder reminder \u003d reminderList.get(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"            if (reminder.getCcaName().equals(ccaToEdit.getName().fullName)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"                reminder.setCcaName(editedCca.getName().fullName);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"            model.setReminder(reminder, reminder);","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"justintanyf"},"content":"        model.setCca(ccaToEdit, editedCca);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"        editedCca.updateCcaNameForReminders();","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"justintanyf"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"justintanyf"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CCA_SUCCESS, editedCca));","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"justintanyf"},"content":"     * Creates and returns a {@code Cca} with the details of {@code ccaToEdit}","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"justintanyf"},"content":"     * edited with {@code editCcaDescriptor}.","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"justintanyf"},"content":"    private static Cca createEditedCca(Cca ccaToEdit, EditCcaDescriptor editCcaDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"justintanyf"},"content":"        assert ccaToEdit !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"justintanyf"},"content":"        CcaName updatedName \u003d editCcaDescriptor.getName().orElse(ccaToEdit.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"okyntary"},"content":"        Set\u003cPerson\u003e copyOfmembers \u003d ccaToEdit.getMembers();","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"okyntary"},"content":"        Set\u003cReminder\u003e copyOfReminders \u003d ccaToEdit.getReminders();","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"justintanyf"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCcaDescriptor.getTags().orElse(ccaToEdit.getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"okyntary"},"content":"        return new Cca(updatedName, copyOfmembers, copyOfReminders, updatedTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"justintanyf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"justintanyf"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"justintanyf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"justintanyf"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"justintanyf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"justintanyf"},"content":"        if (!(other instanceof CcaEditCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"justintanyf"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"justintanyf"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"justintanyf"},"content":"        CcaEditCommand e \u003d (CcaEditCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"justintanyf"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"justintanyf"},"content":"                \u0026\u0026 editCcaDescriptor.equals(e.editCcaDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"justintanyf"},"content":"     * Stores the details to edit the CCA with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"     * corresponding field value of the CCA.","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"justintanyf"},"content":"    public static class EditCcaDescriptor {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"justintanyf"},"content":"        private CcaName name;","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"justintanyf"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"justintanyf"},"content":"        public EditCcaDescriptor() {}","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"justintanyf"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"justintanyf"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"justintanyf"},"content":"        public EditCcaDescriptor(EditCcaDescriptor toCopy) {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"justintanyf"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"justintanyf"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"justintanyf"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"justintanyf"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"justintanyf"},"content":"            return CollectionUtil.isAnyNonNull(name, tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"justintanyf"},"content":"        public void setName(CcaName name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"justintanyf"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"justintanyf"},"content":"        public Optional\u003cCcaName\u003e getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"justintanyf"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"justintanyf"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"justintanyf"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"justintanyf"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"justintanyf"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"justintanyf"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"justintanyf"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"justintanyf"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"justintanyf"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"justintanyf"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"justintanyf"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"justintanyf"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"justintanyf"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"justintanyf"},"content":"                return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"justintanyf"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"justintanyf"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"justintanyf"},"content":"            if (!(other instanceof EditCcaDescriptor)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"justintanyf"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"justintanyf"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"justintanyf"},"content":"            // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"justintanyf"},"content":"            EditCcaDescriptor e \u003d (EditCcaDescriptor) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"justintanyf"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"justintanyf"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justintanyf":177,"weiquu":10,"jovyntls":12,"okyntary":4}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaEnrolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"public class CcaEnrolCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"enrol\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Enrols a person into a CCA. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_CCA_ID + \"CCA_ID \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_PERSON_ID + \"CCA_ID \\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_CCA_ID + \"1 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_PERSON_ID + \"1 \";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully enrolled %1$s into %2$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MISSING_CCA \u003d \"This CCA does not exist in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MISSING_PERSON \u003d \"This person does not exist in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_PRESENT_PERSON \u003d \"This person(%1$s) is already part of that CCA(%2$s)\";","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"    private Cca ccaToEnrolInto;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"    private final Index targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"    private Person personToEnrol;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"     * Creates an CcaAddCommand to add the specified {@code Cca}","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"    public CcaEnrolCommand(Index targetCcaIndex, Index targetPersonIndex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"        this.targetCcaIndex \u003d targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"        List\u003cCca\u003e lastShownCcaList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"        if (targetCcaIndex.getZeroBased() \u003e\u003d lastShownCcaList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"        this.ccaToEnrolInto \u003d lastShownCcaList.get(targetCcaIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"        this.personToEnrol \u003d lastShownPersonList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"        if (ccaToEnrolInto \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(MESSAGE_MISSING_CCA);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"justintanyf"},"content":"        if (personToEnrol \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(MESSAGE_MISSING_PERSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"        boolean success \u003d model.enrolPersonIntoCca(ccaToEnrolInto, personToEnrol);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"        if (success) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"            model.setCca(ccaToEnrolInto, ccaToEnrolInto);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"justintanyf"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, personToEnrol.getName(), ccaToEnrolInto.getName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"justintanyf"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"justintanyf"},"content":"                    String.format(MESSAGE_PRESENT_PERSON, personToEnrol.getName(), ccaToEnrolInto.getName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"justintanyf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"justintanyf"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"justintanyf"},"content":"                || (other instanceof CcaEnrolCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 targetCcaIndex.equals(((CcaEnrolCommand) other).targetCcaIndex)","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 targetPersonIndex.equals(((CcaEnrolCommand) other).targetPersonIndex));","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justintanyf":85,"weiquu":2,"jovyntls":9}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaExpelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"public class CcaExpelCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"expel\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Expels a person from a CCA. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_CCA_ID + \"CCA_ID \"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_PERSON_ID + \"CCA_ID \\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_CCA_ID + \"1 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"            + PREFIX_PERSON_ID + \"1 \";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully expelled %1$s from %2$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MISSING_CCA \u003d \"This CCA does not exist in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_MISSING_PERSON \u003d \"This person does not exist in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_MISSING_PERSON_FROM_CCA \u003d \"This person(%1$s) is not enrolled in this CCA(%2$s)\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"    private Cca ccaToExpelFrom;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"    private final Index targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"    private Person personToExpel;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"     * Creates an CcaAddCommand to add the specified {@code Cca}","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"    public CcaExpelCommand(Index targetCcaIndex, Index targetPersonIndex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"        this.targetCcaIndex \u003d targetCcaIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"        List\u003cCca\u003e lastShownCcaList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        List\u003cReminder\u003e lastShownReminderList \u003d model.getFilteredReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"        if (targetCcaIndex.getZeroBased() \u003e\u003d lastShownCcaList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"        this.ccaToExpelFrom \u003d lastShownCcaList.get(targetCcaIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"        this.personToExpel \u003d lastShownPersonList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"        if (ccaToExpelFrom \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(MESSAGE_MISSING_CCA);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"        if (personToExpel \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(MESSAGE_MISSING_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"justintanyf"},"content":"        boolean success \u003d model.expelPersonFromCca(ccaToExpelFrom, personToExpel);","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"justintanyf"},"content":"        if (success) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"            model.setCca(ccaToExpelFrom, ccaToExpelFrom);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"            model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"justintanyf"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, personToExpel.getName(), ccaToExpelFrom.getName()));","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"justintanyf"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"justintanyf"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"justintanyf"},"content":"                    String.format(MESSAGE_MISSING_PERSON_FROM_CCA, personToExpel.getName(), ccaToExpelFrom.getName()));","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"justintanyf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"justintanyf"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"justintanyf"},"content":"                || (other instanceof CcaExpelCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 targetCcaIndex.equals(((CcaExpelCommand) other).targetCcaIndex)","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 targetPersonIndex.equals(((CcaExpelCommand) other).targetPersonIndex));","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"justintanyf":84,"weiquu":2,"jovyntls":12}},{"path":"src/main/java/seedu/address/logic/commands/cca/CcaFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.person.PersonIsInCcaPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderContainsCcaNamePredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":" * Finds and lists all CCAs in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"public class CcaFindCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all CCAs whose names contain any of \"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"            + \"Example: \" + COMMAND_WORD + \" string choir orchestra\";","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"    private final CcaNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"    public CcaFindCommand(CcaNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"        model.resetAllFilteredLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"        model.updateFilteredCcaList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"        PersonIsInCcaPredicate personPredicate \u003d getFilterForPersonList(model.getFilteredCcaList());","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"        ReminderContainsCcaNamePredicate reminderPredicate \u003d getFilterForRemainderList(model.getFilteredCcaList());","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredReminderList(reminderPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"                String.format(Messages.MESSAGE_CCAS_LISTED_OVERVIEW, model.getFilteredCcaList().size()));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"                || (other instanceof CcaFindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"                \u0026\u0026 predicate.equals(((CcaFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"jivesh"},"content":"    private PersonIsInCcaPredicate getFilterForPersonList(ObservableList\u003cCca\u003e ccaList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"        return new PersonIsInCcaPredicate(ccaList);","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"    private ReminderContainsCcaNamePredicate getFilterForRemainderList(ObservableList\u003cCca\u003e ccaList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"        List\u003cString\u003e ccaNameList \u003d ccaList.parallelStream()","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"                .map(cca -\u003e cca.getName().toString()).collect(Collectors.toList());","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"        return new ReminderContainsCcaNamePredicate(ccaNameList);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"justintanyf":43,"jivesh":27,"jovyntls":1}},{"path":"src/main/java/seedu/address/logic/commands/person/PersonAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAXIMUM_PERSONS_CAPACITY_REACHED;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":" * Adds a person to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"public class PersonAddCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to ePoch. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"     * Creates a PersonAddCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    public PersonAddCommand(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        if (model.getNumberOfPersons() \u003d\u003d model.MAXIMUM_CAPACITY_PERSONS) {","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(MESSAGE_MAXIMUM_PERSONS_CAPACITY_REACHED);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof PersonAddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 toAdd.equals(((PersonAddCommand) other).toAdd));","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"justintanyf":1,"weiquu":9,"jovyntls":15,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/person/PersonDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":" * Deletes a person identified using it\u0027s displayed index from ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"public class PersonDeleteCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"    public static final String COMMAND_WORD \u003d \"deletep\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    public PersonDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        ObservableList\u003cCca\u003e ccaList \u003d model.getAddressBook().getCcaList();","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        for (Cca cca : ccaList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"            if (cca.containsEnrolledPerson(personToDelete)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"                cca.expelPerson(personToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"                model.setCca(cca, cca);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof PersonDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 targetIndex.equals(((PersonDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"justintanyf":3,"jivesh":1,"weiquu":8,"jovyntls":14,"-":45,"okyntary":3}},{"path":"src/main/java/seedu/address/logic/commands/person/PersonEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":" * Edits the details of an existing person in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"public class PersonEditCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000) \"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in ePoch.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    public PersonEditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        if (!(other instanceof PersonEditCommand)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand e \u003d (PersonEditCommand) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"justintanyf":1,"weiquu":6,"jovyntls":10,"-":217}},{"path":"src/main/java/seedu/address/logic/commands/person/PersonFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.CcaContainsPersonPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderContainsCcaNamePredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"public class PersonFindCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    public PersonFindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"jivesh"},"content":"        model.resetAllFilteredLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"jivesh"},"content":"        CcaContainsPersonPredicate ccaPredicate \u003d getFilterForCcaList(model.getFilteredPersonList());","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredCcaList(ccaPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jivesh"},"content":"        ReminderContainsCcaNamePredicate reminderPredicate \u003d getFilterForRemainderList(model.getFilteredCcaList());","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredReminderList(reminderPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"jivesh"},"content":"    private CcaContainsPersonPredicate getFilterForCcaList(List\u003cPerson\u003e personList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"jivesh"},"content":"        return new CcaContainsPersonPredicate(personList);","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"jivesh"},"content":"    private ReminderContainsCcaNamePredicate getFilterForRemainderList(List\u003cCca\u003e ccaList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"jivesh"},"content":"        List\u003cString\u003e ccaNameList \u003d ccaList.parallelStream()","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"jivesh"},"content":"                .map(cca -\u003e cca.getName().toString()).collect(Collectors.toList());","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"jivesh"},"content":"        return new ReminderContainsCcaNamePredicate(ccaNameList);","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof PersonFindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 predicate.equals(((PersonFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jivesh":28,"jovyntls":7,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/reminder/ReminderAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAXIMUM_REMINDERS_CAPACITY_REACHED;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":" * Adds a Reminder to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"public class ReminderAddCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public static final String COMMAND_WORD \u003d \"addr\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Reminder to ePoch. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"            + PREFIX_CCA_ID + \"CCA_ID \"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"            + PREFIX_NAME + \"REMINDER_NAME \"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"            + PREFIX_START_DATE + \"START_DATE \"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_FREQUENCY + \"FREQUENCY] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_OCCURRENCES + \"OCCURRENCES]\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"            + PREFIX_CCA_ID + \"1 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            + PREFIX_NAME + \"NUSSO rehearsal \"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"            + PREFIX_START_DATE + \"2021-10-31 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"            + PREFIX_FREQUENCY + \"1w \"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"            + PREFIX_OCCURRENCES + \"5\";","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Reminder added: %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"            \"Please input either both frequency and occurrence or neither of them.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_REMINDER \u003d \"This Reminder already exists in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    private static final String MESSAGE_MISSING_CCA \u003d \"This CCA does not exist in ePoch\";","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"    private static final String MESSAGE_PRESENT_REMINDER \u003d \"This reminder (%1$s) is already part of this CCA (%2$s)\";","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    private final Reminder toAdd;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"    private Cca ccaToAddInto;","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"    private final Index targetCcaIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"     * Creates an ReminderAddCommand to add the specified {@code Reminder}","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"okyntary"},"content":"    public ReminderAddCommand(Reminder reminder, Index targetCcaIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"okyntary"},"content":"        this.toAdd \u003d reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"okyntary"},"content":"        this.targetCcaIndex \u003d targetCcaIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"        List\u003cCca\u003e lastShownCcaList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"        if (targetCcaIndex.getZeroBased() \u003e\u003d lastShownCcaList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"        this.ccaToAddInto \u003d lastShownCcaList.get(targetCcaIndex.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"        if (ccaToAddInto \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"okyntary"},"content":"            throw new CommandException(MESSAGE_MISSING_CCA);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        if (model.hasReminder(toAdd)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_REMINDER);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        if (model.getNumberOfReminders() \u003d\u003d model.MAXIMUM_CAPACITY_REMINDERS) {","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(MESSAGE_MAXIMUM_REMINDERS_CAPACITY_REACHED);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"okyntary"},"content":"        boolean success \u003d model.addReminder(toAdd, ccaToAddInto);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"okyntary"},"content":"        if (success) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"            toAdd.setCcaName(ccaToAddInto.getName().fullName);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"            model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"            model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"okyntary"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getName(), ccaToAddInto.getName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"okyntary"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"okyntary"},"content":"                    String.format(MESSAGE_PRESENT_REMINDER, toAdd.getName(), ccaToAddInto.getName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"                || (other instanceof seedu.address.logic.commands.reminder.ReminderAddCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 toAdd.equals(((seedu.address.logic.commands.reminder.ReminderAddCommand) other).toAdd));","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"weiquu":62,"jovyntls":17,"okyntary":29}},{"path":"src/main/java/seedu/address/logic/commands/reminder/ReminderDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class ReminderDeleteCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    public static final String COMMAND_WORD \u003d \"deleter\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"            + \": Deletes the Reminder identified by the index number used in the displayed Reminder list.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DELETE_REMINDER_SUCCESS \u003d \"Deleted Reminder: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    private final Index targetReminderIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public ReminderDeleteCommand(Index targetReminderIndex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        this.targetReminderIndex \u003d targetReminderIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        List\u003cReminder\u003e lastShownList \u003d model.getFilteredReminderList();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        if (targetReminderIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        Reminder reminderToDelete \u003d lastShownList.get(targetReminderIndex.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"        for (Cca cca : model.getAddressBook().getCcaList()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"            if (cca.getName().fullName \u003d\u003d reminderToDelete.getCcaName()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"                cca.removeReminder(reminderToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        model.deleteReminder(reminderToDelete);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_REMINDER_SUCCESS, reminderToDelete));","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof ReminderDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 targetReminderIndex.equals(((ReminderDeleteCommand) other).targetReminderIndex)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weiquu":9,"jovyntls":50,"okyntary":6}},{"path":"src/main/java/seedu/address/logic/commands/reminder/ReminderEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CCAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_REMINDERS;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":" * Edits the details of an existing person in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"jivesh"},"content":"public class ReminderEditCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"jivesh"},"content":"    public static final String COMMAND_WORD \u003d \"editr\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jivesh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the reminder identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"jivesh"},"content":"            + \"by the index number used in the displayed reminder list. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000) \"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_NAME + \"REMINDER_NAME] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_START_DATE + \"START_DATE] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_FREQUENCY + \"FREQUENCY] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"            + \"[\" + PREFIX_OCCURRENCES + \"OCCURRENCES]\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"jivesh"},"content":"            + PREFIX_NAME + \"NUSSO rehearsal \"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jivesh"},"content":"            + PREFIX_START_DATE + \"2021-10-31\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"    public static final String MESSAGE_EDIT_REMINDER_SUCCESS \u003d \"Edited Reminder: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"            \"Please input either both frequency and occurrence or neither of them.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_DUPLICATE_EDIT \u003d \"This reminder already exists in ePoch.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jivesh"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"jivesh"},"content":"    private final EditReminderDescriptor editReminderDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"jivesh"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"jivesh"},"content":"     * @param editReminderDescriptor details to edit the reminder with","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"jivesh"},"content":"    public ReminderEditCommand(Index index, EditReminderDescriptor editReminderDescriptor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"jivesh"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"        requireNonNull(editReminderDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"        this.editReminderDescriptor \u003d editReminderDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"jivesh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"jivesh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"jivesh"},"content":"        List\u003cReminder\u003e lastShownList \u003d model.getFilteredReminderList();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jivesh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"jivesh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"jivesh"},"content":"        Reminder reminderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"jivesh"},"content":"        if (editReminderDescriptor.getCcaIndex().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"jivesh"},"content":"            Index ccaIndex \u003d editReminderDescriptor.getCcaIndex().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"jivesh"},"content":"            List\u003cCca\u003e lastShownCcaList \u003d model.getFilteredCcaList();","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"jivesh"},"content":"            if (ccaIndex.getZeroBased() \u003e\u003d lastShownCcaList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"jivesh"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"jivesh"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"            editReminderDescriptor.setCca(lastShownCcaList.get(ccaIndex.getZeroBased()).getName().fullName);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"jivesh"},"content":"        Reminder editedReminder \u003d createEditedReminder(reminderToEdit, editReminderDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"jivesh"},"content":"        if (!reminderToEdit.isSameReminder(editedReminder) \u0026\u0026 model.hasReminder(editedReminder)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"jivesh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EDIT);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"jivesh"},"content":"        model.setReminder(reminderToEdit, editedReminder);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"jivesh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_REMINDER_SUCCESS, editedReminder));","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"jivesh"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"jivesh"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"jivesh"},"content":"    private static Reminder createEditedReminder(Reminder remToEdit, EditReminderDescriptor editRemDescriptor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"jivesh"},"content":"        assert editRemDescriptor !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"jivesh"},"content":"        ReminderName updatedName \u003d editRemDescriptor.getReminderName().orElse(remToEdit.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"jivesh"},"content":"        ReminderStartDate updatedReminderStartDate \u003d editRemDescriptor","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"jivesh"},"content":"                .getReminderStartDate().orElse(remToEdit.getStartDate());","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jivesh"},"content":"        ReminderFrequency updatedFreq \u003d editRemDescriptor","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"jivesh"},"content":"                .getReminderFrequency().orElse(remToEdit.getFrequency());","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"jivesh"},"content":"        ReminderOccurrence updatedReminderOccurrence \u003d editRemDescriptor","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"jivesh"},"content":"                .getReminderOccurrence().orElse(remToEdit.getOccurrences());","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"        String updatedCca \u003d editRemDescriptor","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"                .getCca().orElse(remToEdit.getCcaName());","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"jivesh"},"content":"        Reminder newReminder \u003d new Reminder(updatedName, updatedReminderStartDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"jivesh"},"content":"                updatedFreq, updatedReminderOccurrence);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"        newReminder.setCcaName(updatedCca);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"jivesh"},"content":"        return newReminder;","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"jivesh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"jivesh"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"jivesh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"jivesh"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"jivesh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"jivesh"},"content":"        if (!(other instanceof ReminderEditCommand)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"jivesh"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"jivesh"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"jivesh"},"content":"        ReminderEditCommand e \u003d (ReminderEditCommand) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"jivesh"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"jivesh"},"content":"                \u0026\u0026 editReminderDescriptor.equals(e.editReminderDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"jivesh"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"jivesh"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"jivesh"},"content":"    public static class EditReminderDescriptor {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"jivesh"},"content":"        private ReminderName reminderName;","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"jivesh"},"content":"        private ReminderStartDate reminderStartDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"jivesh"},"content":"        private ReminderFrequency reminderFrequency;","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"jivesh"},"content":"        private ReminderOccurrence reminderOccurrence;","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"jivesh"},"content":"        private Index ccaIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"        private String ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"jivesh"},"content":"        public EditReminderDescriptor() {}","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"jivesh"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"jivesh"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"jivesh"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"jivesh"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"jivesh"},"content":"        public EditReminderDescriptor(EditReminderDescriptor toCopy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"jivesh"},"content":"            setReminderName(toCopy.reminderName);","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"jivesh"},"content":"            setReminderStartDate(toCopy.reminderStartDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"jivesh"},"content":"            setReminderFrequency(toCopy.reminderFrequency);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"jivesh"},"content":"            setReminderOccurrence(toCopy.reminderOccurrence);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"jivesh"},"content":"            setCcaIndex(toCopy.ccaIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"            setCca(toCopy.ccaName);","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"jivesh"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"jivesh"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"jivesh"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"jivesh"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"jivesh"},"content":"            return CollectionUtil","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"                    .isAnyNonNull(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence, ccaName);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"jivesh"},"content":"        public void setReminderName(ReminderName reminderName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"jivesh"},"content":"            this.reminderName \u003d reminderName;","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"jivesh"},"content":"        public Optional\u003cReminderName\u003e getReminderName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"jivesh"},"content":"            return Optional.ofNullable(reminderName);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"jivesh"},"content":"        public void setReminderStartDate(ReminderStartDate reminderStartDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"jivesh"},"content":"            this.reminderStartDate \u003d reminderStartDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"jivesh"},"content":"        public Optional\u003cReminderStartDate\u003e getReminderStartDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"jivesh"},"content":"            return Optional.ofNullable(reminderStartDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"jivesh"},"content":"        public void setReminderFrequency(ReminderFrequency reminderFrequency) {","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"jivesh"},"content":"            this.reminderFrequency \u003d reminderFrequency;","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"jivesh"},"content":"        public Optional\u003cReminderFrequency\u003e getReminderFrequency() {","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"jivesh"},"content":"            return Optional.ofNullable(reminderFrequency);","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"jivesh"},"content":"        public void setReminderOccurrence(ReminderOccurrence reminderOccurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"jivesh"},"content":"            this.reminderOccurrence \u003d reminderOccurrence;","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"jivesh"},"content":"        public Optional\u003cReminderOccurrence\u003e getReminderOccurrence() {","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"jivesh"},"content":"            return Optional.ofNullable(reminderOccurrence);","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"jivesh"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"jivesh"},"content":"         * Sets {@code ccaIndex} to this object\u0027s {@code ccaIndex}.","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"jivesh"},"content":"         * A defensive copy of {@code ccaIndex} is used internally.","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"jivesh"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"jivesh"},"content":"        public void setCcaIndex(Index ccaIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"jivesh"},"content":"            this.ccaIndex \u003d ccaIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"jivesh"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"jivesh"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"jivesh"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"jivesh"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"jivesh"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"jivesh"},"content":"        public Optional\u003cIndex\u003e getCcaIndex() {","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"jivesh"},"content":"            return Optional.ofNullable(ccaIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"jivesh"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"jivesh"},"content":"         * Sets {@code cca} to this object\u0027s {@code cca}.","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"jivesh"},"content":"         * A defensive copy of {@code ccaIndex} is used internally.","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"jivesh"},"content":"         * This is done only when model is accessible.","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"jivesh"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"weiquu"},"content":"        public void setCca(String ccaName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"weiquu"},"content":"            this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"weiquu"},"content":"        public Optional\u003cString\u003e getCca() {","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"weiquu"},"content":"            return Optional.ofNullable(ccaName);","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"jivesh"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"jivesh"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"jivesh"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"jivesh"},"content":"                return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"jivesh"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"jivesh"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"jivesh"},"content":"            if (!(other instanceof EditReminderDescriptor)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"jivesh"},"content":"                return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"jivesh"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"jivesh"},"content":"            // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"jivesh"},"content":"            EditReminderDescriptor e \u003d (EditReminderDescriptor) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"jivesh"},"content":"            return getReminderName().equals(e.getReminderName())","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"jivesh"},"content":"                    \u0026\u0026 getReminderStartDate().equals(e.getReminderStartDate())","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"jivesh"},"content":"                    \u0026\u0026 getReminderFrequency().equals(e.getReminderFrequency())","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"jivesh"},"content":"                    \u0026\u0026 getReminderOccurrence().equals(e.getReminderOccurrence())","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"jivesh"},"content":"                    \u0026\u0026 getCcaIndex().equals(e.getCcaIndex())","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"jivesh"},"content":"                    \u0026\u0026 getCca().equals(e.getCca());","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"jivesh":234,"weiquu":28,"jovyntls":2}},{"path":"src/main/java/seedu/address/logic/commands/reminder/ReminderFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_NO_PERSONS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.CcaContainsReminderPredicate;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class ReminderFindCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    public static final String COMMAND_WORD \u003d \"findr\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all reminders whose titles contain any of \"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            + \"Example: \" + COMMAND_WORD + \" meeting\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    private final ReminderNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    public ReminderFindCommand(ReminderNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jivesh"},"content":"        model.resetFiltersForReminderList();","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jivesh"},"content":"        model.resetFiltersForCcaList();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredReminderList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate filteredCcaPredicate \u003d getFilterForCcaList((model.getFilteredReminderList()));","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"        model.updateFilteredCcaList(filteredCcaPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_NO_PERSONS);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"                String.format(Messages.MESSAGE_REMINDERS_LISTED_OVERVIEW, model.getFilteredReminderList().size()));","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"jivesh"},"content":"    private CcaContainsReminderPredicate getFilterForCcaList(ObservableList\u003cReminder\u003e reminderList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"jivesh"},"content":"        return new CcaContainsReminderPredicate(reminderList);","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof ReminderFindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 predicate.equals(((ReminderFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jivesh":14,"jovyntls":46}},{"path":"src/main/java/seedu/address/logic/commands/reminder/ReminderSnoozeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"public class ReminderSnoozeCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    public static final String COMMAND_WORD \u003d \"snoozer\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"            + \": Snoozes the Reminder identified by the index number used in the displayed Reminder list.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"            + \"Parameters: INDEX (must be a positive integer less than 1,000,000,000)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_SNOOZE_LAST_OCCURRENCE_ERROR \u003d \"You can\u0027t snooze this reminder \"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            + \"since it has only 1 occurrence left. You can use the deleter command to delete it instead.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_SNOOZE_REMINDER_SUCCESS \u003d \"Snoozed Reminder: %1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    private final Index targetReminderIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    public ReminderSnoozeCommand(Index targetReminderIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        this.targetReminderIndex \u003d targetReminderIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        List\u003cReminder\u003e lastShownList \u003d model.getFilteredReminderList();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        if (targetReminderIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        Reminder reminderToSnooze \u003d lastShownList.get(targetReminderIndex.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        if (reminderToSnooze.getOccurrences().getOccurrences() \u003d\u003d 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"            throw new CommandException(MESSAGE_SNOOZE_LAST_OCCURRENCE_ERROR);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        model.snoozeReminder(reminderToSnooze);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        return new CommandResult(String.format(MESSAGE_SNOOZE_REMINDER_SUCCESS, reminderToSnooze));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"                || (other instanceof ReminderSnoozeCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 targetReminderIndex.equals(((ReminderSnoozeCommand) other).targetReminderIndex)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weiquu":50,"jovyntls":8}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.GreetCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.cca.CcaAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.cca.CcaDeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaEnrolCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaExpelCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaFindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonFindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderAddCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.reminder.ReminderDeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.reminder.ReminderFindCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderSnoozeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.cca.CcaAddCommandParser;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.cca.CcaDeleteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.cca.CcaEditCommandParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.cca.CcaEnrolCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.cca.CcaExpelCommandParser;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.cca.CcaFindCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.person.PersonAddCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.person.PersonDeleteCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.person.PersonEditCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.person.PersonFindCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.reminder.ReminderAddCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.reminder.ReminderDeleteCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.reminder.ReminderEditCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.reminder.ReminderFindCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.reminder.ReminderSnoozeCommandParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        case PersonAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"            return new PersonAddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        case PersonEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"            return new PersonEditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        case PersonDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"            return new PersonDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        case PersonFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"            return new PersonFindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"justintanyf"},"content":"        case CcaFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"justintanyf"},"content":"            return new CcaFindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"        case CcaAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"            return new CcaAddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"justintanyf"},"content":"        case CcaEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"justintanyf"},"content":"            return new CcaEditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"jivesh"},"content":"        case CcaDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"jivesh"},"content":"            return new CcaDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"justintanyf"},"content":"        case CcaEnrolCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"justintanyf"},"content":"            return new CcaEnrolCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"justintanyf"},"content":"        case CcaExpelCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"justintanyf"},"content":"            return new CcaExpelCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        case ReminderAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"            return new ReminderAddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        case ReminderDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"            return new ReminderDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        case ReminderFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"            return new ReminderFindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"jivesh"},"content":"        case ReminderEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"jivesh"},"content":"            return new ReminderEditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        case ReminderSnoozeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"            return new ReminderSnoozeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        case GreetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return new GreetCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"justintanyf":19,"jivesh":9,"weiquu":9,"-":66,"jovyntls":37}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"    public static final Prefix PREFIX_CCA_ID \u003d new Prefix(\"cid/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"pid/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    public static final Prefix PREFIX_FREQUENCY \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    public static final Prefix PREFIX_OCCURRENCES \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"justintanyf":2,"weiquu":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INDEX_EXCEEDS_MAXIMUM_SIZE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"     * @throws IndexExceedsCapacityException if the specified index is exceeds ePoch\u0027s capacity of 999999999.","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException, IndexExceedsCapacityException {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        if (trimmedIndex.length() \u003e 9 \u0026\u0026 Pattern.compile(\"\\\\d+\").matcher(trimmedIndex).matches()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"            throw new IndexExceedsCapacityException(MESSAGE_INDEX_EXCEEDS_MAXIMUM_SIZE);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"     * Parses a {@code String name} into a {@code CcaName}.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    // we be kinda repeating code here","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"     * Parses a {@code String name} into a {@code CcaName}.","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"    public static CcaName parseCcaName(String name) throws ParseException {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        return new CcaName(trimmedName);","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"     * Parses a {@code String name} into a {@code ReminderName}.","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"    public static ReminderName parseReminderName(String name) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        return new ReminderName(trimmedName);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"     * Parses a {@code String date} into a {@code ReminderStartDate}.","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"    public static ReminderStartDate parseReminderStartDate(String date) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"        String trimmedDateText \u003d date.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        if (!ReminderStartDate.isValidDate(trimmedDateText)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(ReminderStartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        Date startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"            startDate \u003d ReminderStartDate.PARSE_INPUT_DATE_FORMAT.parse(trimmedDateText);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(startDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"        reminderStartDate.validate(trimmedDateText);","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"        return reminderStartDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"     * Parses a {@code String frequency} into a {@code ReminderFrequency}.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the given {@code frequency} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    public static ReminderFrequency parseReminderFrequency(String frequency) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        String trimmedFrequency \u003d frequency.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"        boolean empty \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"        if (trimmedFrequency.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"            trimmedFrequency \u003d \"1d\"; // to pass the check","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"            empty \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"        if (!ReminderFrequency.isValidFrequency(trimmedFrequency)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderFrequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"        if (empty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"            trimmedFrequency \u003d \"1o\";","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"        String timePeriodString \u003d trimmedFrequency.substring(trimmedFrequency.length() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"        String numTimePeriodString \u003d trimmedFrequency.substring(0, trimmedFrequency.length() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"        int numTimePeriod \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"            numTimePeriod \u003d Integer.parseInt(numTimePeriodString);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderFrequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"        if (numTimePeriod \u003c\u003d 0 || numTimePeriod \u003e 100) {","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderFrequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"        Frequency timePeriod \u003d Frequency.getFrequency(timePeriodString);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"        return new ReminderFrequency(timePeriod, numTimePeriod);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"     * Parses an {@code String occurrence} into a {@code ReminderOccurrence}.","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the given {@code occurrence} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"    public static ReminderOccurrence parseReminderOccurrence(String occurrence) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        requireNonNull(occurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        String trimmedOccurrence \u003d occurrence.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        if (trimmedOccurrence.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"            trimmedOccurrence \u003d \"1\";","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        int numOccurrences \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"            numOccurrences \u003d Integer.parseInt(trimmedOccurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderOccurrence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"jovyntls"},"content":"        if (numOccurrences \u003c\u003d 0 || numOccurrences \u003e 50) {","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderOccurrence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"        return new ReminderOccurrence(numOccurrences);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weiquu":80,"-":122,"jovyntls":50}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.cca.CcaAddCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"public class CcaAddCommandParser implements Parser\u003cCcaAddCommand\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaAddCommand","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * and returns an CcaAddCommand object for execution.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    public CcaAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        CcaName ccaName \u003d ParserUtil.parseCcaName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"        // Create a new CCA here","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"        Cca cca \u003d new Cca(ccaName, tagList);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        return new CcaAddCommand(cca);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"justintanyf":7,"jovyntls":46}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.cca.CcaDeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new CcaDeleteCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"public class CcaDeleteCommandParser implements Parser\u003cCcaDeleteCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaDeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"     * and returns a CcaDeleteCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"    public CcaDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"            return new CcaDeleteCommand(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justintanyf":5,"jivesh":21,"jovyntls":6}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new CcaEditCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"public class CcaEditCommandParser implements Parser\u003cCcaEditCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaEditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"     * and returns an CcaEditCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"    public CcaEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"        Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"                CcaEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"        EditCcaDescriptor editCcaDescriptor \u003d new EditCcaDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"            editCcaDescriptor.setName(ParserUtil.parseCcaName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCcaDescriptor::setTags);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"        if (!editCcaDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"            throw new ParseException(CcaEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"        return new CcaEditCommand(index, editCcaDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"justintanyf"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justintanyf":74,"jovyntls":4}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaEnrolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaEnrolCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class CcaEnrolCommandParser implements Parser\u003cCcaEnrolCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaEnrolCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"     * and returns an CcaEnrolCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"    public CcaEnrolCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CCA_ID, PREFIX_PERSON_ID);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CCA_ID, PREFIX_PERSON_ID)","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaEnrolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        Index ccaIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"            ccaIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CCA_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iie) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iie.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"        return new CcaEnrolCommand(ccaIndex, personIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justintanyf":40,"jovyntls":13}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaExpelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaExpelCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class CcaExpelCommandParser implements Parser\u003cCcaExpelCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaEnrolCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"     * and returns an CcaEnrolCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"    public CcaExpelCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CCA_ID, PREFIX_PERSON_ID);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CCA_ID, PREFIX_PERSON_ID)","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaExpelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        Index ccaIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"            ccaIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CCA_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iie) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iie.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"        return new CcaExpelCommand(ccaIndex, personIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"justintanyf":40,"jovyntls":13}},{"path":"src/main/java/seedu/address/logic/parser/cca/CcaFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.commands.cca.CcaFindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new CcaFindCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"public class CcaFindCommandParser implements Parser\u003cCcaFindCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"     * Parses the given {@code String} of arguments in the context of the CcaFindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"     * and returns a CcaFindCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"    public CcaFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"        return new CcaFindCommand(new CcaNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"justintanyf":33,"jovyntls":1}},{"path":"src/main/java/seedu/address/logic/parser/person/PersonAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new PersonAddCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"public class PersonAddCommandParser implements Parser\u003cPersonAddCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the PersonAddCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"     * and returns a PersonAddCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public PersonAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        return new PersonAddCommand(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"weiquu":1,"jovyntls":13,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/person/PersonDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new PersonDeleteCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"public class PersonDeleteCommandParser implements Parser\u003cPersonDeleteCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the PersonDeleteCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     * and returns a PersonDeleteCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    public PersonDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            return new PersonDeleteCommand(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jovyntls":14,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/person/PersonEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new PersonEditCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"public class PersonEditCommandParser implements Parser\u003cPersonEditCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the PersonEditCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"     * and returns an PersonEditCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public PersonEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"                PersonEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(PersonEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        return new PersonEditCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jovyntls":19,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/person/PersonFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonFindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new PersonFindCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"public class PersonFindCommandParser implements Parser\u003cPersonFindCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the PersonFindCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * and returns a PersonFindCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public PersonFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        return new PersonFindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jovyntls":10,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/reminder/ReminderAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderAddCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"public class ReminderAddCommandParser implements Parser\u003cReminderAddCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderAddCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"     * and returns an ReminderAddCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    public ReminderAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CCA_ID, PREFIX_NAME, PREFIX_START_DATE,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"                PREFIX_FREQUENCY, PREFIX_OCCURRENCES);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CCA_ID, PREFIX_NAME, PREFIX_START_DATE)","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        if ((argMultimap.getValue(PREFIX_FREQUENCY).isPresent()","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"                    \u0026\u0026 !argMultimap.getValue(PREFIX_OCCURRENCES).isPresent())","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"                || (!argMultimap.getValue(PREFIX_FREQUENCY).isPresent()","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"                    \u0026\u0026 argMultimap.getValue(PREFIX_OCCURRENCES).isPresent())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"                    ReminderAddCommand.MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        ReminderName reminderName \u003d ParserUtil.parseReminderName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        ReminderStartDate reminderStartDate \u003d ParserUtil.parseReminderStartDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"                argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        Index ccaIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"            ccaIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CCA_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iie) {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(MESSAGE_INVALID_CCA_DISPLAYED_INDEX + \"\\n\" + iie.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency reminderFrequency \u003d argMultimap.getValue(PREFIX_FREQUENCY).isPresent()","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"                ? ParserUtil.parseReminderFrequency(argMultimap.getValue(PREFIX_FREQUENCY).get())","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"                : ParserUtil.parseReminderFrequency(\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        ReminderOccurrence reminderOccurrence \u003d argMultimap.getValue(PREFIX_OCCURRENCES).isPresent()","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"                ? ParserUtil.parseReminderOccurrence(argMultimap.getValue(PREFIX_OCCURRENCES).get())","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"                : ParserUtil.parseReminderOccurrence(\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        // Create a new reminder","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new Reminder(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"        assert(reminder.isSameReminder(reminder));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"        return new ReminderAddCommand(reminder, ccaIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"weiquu":64,"jovyntls":13,"okyntary":10}},{"path":"src/main/java/seedu/address/logic/parser/reminder/ReminderDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.reminder.ReminderDeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new ReminderDeleteCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"public class ReminderDeleteCommandParser implements Parser\u003cReminderDeleteCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderDeleteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"     * and returns a ReminderDeleteCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    public ReminderDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            return new ReminderDeleteCommand(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weiquu":2,"jovyntls":30}},{"path":"src/main/java/seedu/address/logic/parser/reminder/ReminderEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"public class ReminderEditCommandParser implements Parser\u003cReminderEditCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderEditCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"     * and returns an PersonEditCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"    public ReminderEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"                .tokenize(args, PREFIX_NAME, PREFIX_START_DATE, PREFIX_FREQUENCY, PREFIX_OCCURRENCES);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"jivesh"},"content":"        Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jivesh"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"jivesh"},"content":"            index \u003d ParserUtil.parseIndex((argMultimap.getPreamble()));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"jivesh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"                    ReminderEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"jivesh"},"content":"        EditReminderDescriptor editReminderDescriptor \u003d new EditReminderDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jivesh"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"            editReminderDescriptor.setReminderName(ParserUtil","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"                    .parseReminderName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"jivesh"},"content":"        if (argMultimap.getValue(PREFIX_START_DATE).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"jivesh"},"content":"            editReminderDescriptor.setReminderStartDate(ParserUtil","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jivesh"},"content":"                    .parseReminderStartDate(argMultimap.getValue(PREFIX_START_DATE).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        if ((argMultimap.getValue(PREFIX_FREQUENCY).isPresent()","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_OCCURRENCES).isPresent())","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"                || (!argMultimap.getValue(PREFIX_FREQUENCY).isPresent()","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_OCCURRENCES).isPresent())) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"                    ReminderEditCommand.MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE));","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"        if (argMultimap.getValue(PREFIX_FREQUENCY).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"            editReminderDescriptor.setReminderFrequency(ParserUtil","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"                    .parseReminderFrequency(argMultimap.getValue(PREFIX_FREQUENCY).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"        if (argMultimap.getValue(PREFIX_OCCURRENCES).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"            editReminderDescriptor.setReminderOccurrence(ParserUtil","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"jivesh"},"content":"                    .parseReminderOccurrence(argMultimap.getValue(PREFIX_OCCURRENCES).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"jivesh"},"content":"        return new ReminderEditCommand(index, editReminderDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"jivesh":63,"weiquu":10,"jovyntls":3}},{"path":"src/main/java/seedu/address/logic/parser/reminder/ReminderFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.reminder.ReminderFindCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Parses input arguments and creates a new ReminderFindCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"public class ReminderFindCommandParser implements Parser\u003cReminderFindCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderFindCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * and returns a ReminderFindCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public ReminderFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        return new ReminderFindCommand(new ReminderNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jovyntls":34}},{"path":"src/main/java/seedu/address/logic/parser/reminder/ReminderSnoozeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.exceptions.IndexExceedsCapacityException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderSnoozeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":" * Parses input arguments and creates a new ReminderSnoozeCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"public class ReminderSnoozeCommandParser implements Parser\u003cReminderSnoozeCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderSnoozeCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"     * and returns a ReminderSnoozeCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    public ReminderSnoozeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"            return new ReminderSnoozeCommand(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        } catch (IndexExceedsCapacityException iece) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(iece.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderSnoozeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weiquu":29,"jovyntls":3}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.UniqueCcaList;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.UniqueReminderList;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    private final UniqueCcaList ccas;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    private final UniqueReminderList reminders;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        ccas \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        reminders \u003d new UniqueReminderList();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"     * Replaces the contents of the CCA list with {@code ccas}.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"     * {@code ccas} must not contain duplicate CCAs.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"okyntary"},"content":"    public void setCcas(List\u003cCca\u003e ccas) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"okyntary"},"content":"        this.ccas.setCcas(ccas);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"okyntary"},"content":"     * Replaces the contents of the reminder list with {@code reminders}.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"okyntary"},"content":"     * {@code reminders} must not contain duplicate reminders.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"    public void setReminders(List\u003cReminder\u003e reminders) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"        this.reminders.setReminders(reminders);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"okyntary"},"content":"        setCcas(newData.getCcaList());","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"okyntary"},"content":"        setReminders(newData.getReminderList());","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a person with the same identity as {@code person} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"     * Adds a person to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"     * The person must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"justintanyf"},"content":"        ccas.setEnrolledPerson(target, editedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"     * {@code key} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"    //// cca-level operations","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a CCA with the same identity as {@code cca} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"    public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(cca);","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"        return ccas.contains(cca);","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"     * Adds a CCA to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"     * The CCA must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"justintanyf"},"content":"    public void addCca(Cca cca) {","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"justintanyf"},"content":"        ccas.add(cca);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"     * Replaces the given CCA {@code target} in the list with {@code editedCca}.","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"     * The CCA identity of {@code editedCca} must not be the same as another existing CCA in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"        ccas.setCca(target, editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-04"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"     * {@code key} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"    public void removeCca(Cca key) {","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"        ccas.remove(key);","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"    //// reminder-level operations","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a reminder with the same identity as {@code reminder} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"    public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        return reminders.contains(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"     * Adds a reminder to ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"     * The reminder must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"    public void addReminder(Reminder reminder) {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"        reminders.add(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"     * {@code key} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"    public void removeReminder(Reminder key) {","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"weiquu"},"content":"        reminders.remove(key);","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"     * Snoozes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":"     * {@code key} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder(Reminder key) {","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"        if (key.isAtLastOccurrence()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"            removeReminder(key);","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"            setReminder(key, key.getSnoozedReminder());","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"weiquu"},"content":"     * Replaces the given Reminder {@code target} in the list with {@code editedReminder}.","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"     * The Reminder identity of {@code editedReminder} must not be the same as another existing","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"jovyntls"},"content":"     * Reminder in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"    public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"        requireNonNull(editedReminder);","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"        reminders.setReminder(target, editedReminder);","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"okyntary"},"content":"        String result \u003d persons.asUnmodifiableObservableList().size() + \" persons, \"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"jovyntls"},"content":"                + ccas.asUnmodifiableObservableList().size() + \" CCAs, \"","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"okyntary"},"content":"                + reminders.asUnmodifiableObservableList().size() + \" reminders\";","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"okyntary"},"content":"        return result;","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":223,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":224,"author":{"gitId":"jovyntls"},"content":"    public ObservableList\u003cCca\u003e getCcaList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"        return ccas.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-04"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":227,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":228,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"weiquu"},"content":"    public ObservableList\u003cReminder\u003e getReminderList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"weiquu"},"content":"        return reminders.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"justintanyf":3,"weiquu":51,"-":112,"jovyntls":59,"okyntary":19}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    public static final int MAXIMUM_CAPACITY_PERSONS \u003d 999999999;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public static final int MAXIMUM_CAPACITY_CCAS \u003d 999999999;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    public static final int MAXIMUM_CAPACITY_REMINDERS \u003d 999999999;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    Predicate\u003cCca\u003e PREDICATE_SHOW_ALL_CCAS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    Predicate\u003cReminder\u003e PREDICATE_SHOW_ALL_REMINDERS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_NO_PERSONS \u003d unused -\u003e false;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a person with the same identity as {@code person} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"     * The person must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"     * {@code person} must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a CCA with the same identity as {@code CCA} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"    boolean hasCca(Cca cca);","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"     * Deletes the given CCA.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"     * The CCA must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    void deleteCca(Cca target);","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"     * Adds the given CCA.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"     * {@code cca} must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"    void addCca(Cca cca);","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"     * Replaces the given CCA {@code target} with {@code editedCca}.","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"     * The CCA identity of {@code editedCca} must not be the same as another existing CCA in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"    void setCca(Cca target, Cca editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"    /** Returns an unmodifiable view of the filtered CCA list */","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"    ObservableList\u003cCca\u003e getFilteredCcaList();","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"     * Updates the filter of the filtered CCA list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"    void updateFilteredCcaList(Predicate\u003cCca\u003e predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"     * Updates the filter of the filtered reminder list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"    void updateFilteredReminderList(Predicate\u003cReminder\u003e predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"     * Returns the number of persons in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"     * @return the number of persons in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"    int getNumberOfPersons();","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"     * Returns the number of CCAs in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"     * @return the number of CCAs in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"    int getNumberOfCcas();","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"     * Returns the number of reminders in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"     * @return the number of reminders in ePoch.","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"    int getNumberOfReminders();","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"jivesh"},"content":"     * Resets person list by removing all filters.","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"jivesh"},"content":"    void resetFiltersForPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"jivesh"},"content":"     * Resets CCA list by removing all filters.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"jivesh"},"content":"    void resetFiltersForCcaList();","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"jivesh"},"content":"     * Resets reminder list by removing all filters.","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"jivesh"},"content":"    void resetFiltersForReminderList();","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"jivesh"},"content":"     * Resets the CCA, Person, and Reminder lists by removing all filters.","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"jivesh"},"content":"    void resetAllFilteredLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"justintanyf"},"content":"     * Enrols a person into a CCA","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"justintanyf"},"content":"    boolean enrolPersonIntoCca(Cca ccaToEnrolInto, Person personToEnrol);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"justintanyf"},"content":"     * Expels a person from a CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"justintanyf"},"content":"    boolean expelPersonFromCca(Cca ccaToExpelFrom, Person personToExpel);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"jovyntls"},"content":"    /** Returns an unmodifiable view of the filtered CCA list */","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"    ObservableList\u003cReminder\u003e getFilteredReminderList();","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a reminder with the same identity as {@code reminder} exists in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"    boolean hasReminder(Reminder reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"     * Deletes the given reminder.","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"jovyntls"},"content":"     * The reminder must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"weiquu"},"content":"    void deleteReminder(Reminder target);","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"     * Snoozes the given reminder.","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"jovyntls"},"content":"     * The reminder must exist n ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"    void snoozeReminder(Reminder target);","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"weiquu"},"content":"     * Replaces the given Reminder {@code target} with {@code editedReminder}.","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"weiquu"},"content":"     * The Reminder identity of {@code editedReminder} must not be the same as another existing","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"jovyntls"},"content":"     * Reminder in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"weiquu"},"content":"    void setReminder(Reminder target, Reminder editedReminder);","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"weiquu"},"content":"     * Adds the given reminder.","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"jovyntls"},"content":"     * {@code reminder} must not already exist in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"okyntary"},"content":"    boolean addReminder(Reminder reminder, Cca ccaToAddInto);","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"justintanyf":11,"jivesh":20,"weiquu":26,"-":83,"jovyntls":78,"okyntary":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":" * Represents the in-memory model of ePoch data.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    private final FilteredList\u003cCca\u003e filteredCcas;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    private final FilteredList\u003cReminder\u003e filteredReminders;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        filteredCcas \u003d new FilteredList\u003c\u003e(this.addressBook.getCcaList());","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        filteredReminders \u003d new FilteredList\u003c\u003e(this.addressBook.getReminderList());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"    public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"        requireNonNull(cca);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"        return addressBook.hasCca(cca);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"    public void deleteCca(Cca target) {","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"        addressBook.removeCca(target);","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"    public void addCca(Cca cca) {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"        addressBook.addCca(cca);","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"        updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"    public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"        requireAllNonNull(target, editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"        addressBook.setCca(target, editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"    public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"        return addressBook.hasReminder(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"    public void deleteReminder(Reminder target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"        addressBook.removeReminder(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"okyntary"},"content":"    public boolean addReminder(Reminder reminder, Cca ccaToAddInto) {","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(reminder, ccaToAddInto);","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"        addressBook.addReminder(reminder);","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"okyntary"},"content":"        boolean success \u003d ccaToAddInto.addReminder(reminder);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"okyntary"},"content":"        if (success) {","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"            updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"okyntary"},"content":"        logger.log(Level.INFO, \"About to add reminder to address book\");","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"okyntary"},"content":"        return success;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder(Reminder target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"        addressBook.snoozeReminder(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"    public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(target, editedReminder);","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"        addressBook.setReminder(target, editedReminder);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"jovyntls"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Cca List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":198,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":199,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"     * Returns an unmodifiable view of the list of {@code Cca} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"jovyntls"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":203,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":204,"author":{"gitId":"jovyntls"},"content":"    public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":205,"author":{"gitId":"jovyntls"},"content":"        return filteredCcas;","lastModifiedDate":"2021-10-04"},{"lineNumber":206,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":207,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":208,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":209,"author":{"gitId":"jovyntls"},"content":"    public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-10-04"},{"lineNumber":210,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":211,"author":{"gitId":"jovyntls"},"content":"        filteredCcas.setPredicate(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":212,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":213,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":214,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"justintanyf"},"content":"     * Enrols a person into a CCA","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"weiquu"},"content":"     * {@code cca} must exist in ePoch.","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"justintanyf"},"content":"     * @param ccaToEnrolInto CCA to enrol into","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"justintanyf"},"content":"     * @param personToEnrol Person enrolling into CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"justintanyf"},"content":"    public boolean enrolPersonIntoCca(Cca ccaToEnrolInto, Person personToEnrol) {","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(ccaToEnrolInto, personToEnrol);","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"justintanyf"},"content":"        return ccaToEnrolInto.enrolPerson(personToEnrol);","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"justintanyf"},"content":"     * Expels a person from a CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":229,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"justintanyf"},"content":"    public boolean expelPersonFromCca(Cca ccaToExpelFrom, Person personToExpel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(ccaToExpelFrom, personToExpel);","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"justintanyf"},"content":"        return ccaToExpelFrom.expelPerson(personToExpel);","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":251,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-04"},{"lineNumber":252,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 filteredCcas.equals(other.filteredCcas);","lastModifiedDate":"2021-10-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"weiquu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Reminder List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"weiquu"},"content":"     * Returns an unmodifiable view of the list of {@code Reminder} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"weiquu"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"weiquu"},"content":"    public ObservableList\u003cReminder\u003e getFilteredReminderList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"weiquu"},"content":"        return filteredReminders;","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"jovyntls"},"content":"    public void updateFilteredReminderList(Predicate\u003cReminder\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"jovyntls"},"content":"        filteredReminders.setPredicate(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"jovyntls"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Getters for number of entries \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"jovyntls"},"content":"    public int getNumberOfPersons() {","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"jovyntls"},"content":"        return getFilteredPersonList().size();","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"jovyntls"},"content":"    public int getNumberOfCcas() {","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"jovyntls"},"content":"        return getFilteredCcaList().size();","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"jovyntls"},"content":"    public int getNumberOfReminders() {","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"jovyntls"},"content":"        return getFilteredReminderList().size();","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"jivesh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Reset Functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"jivesh"},"content":"    public void resetFiltersForPersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"jivesh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"jivesh"},"content":"    public void resetFiltersForCcaList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"jivesh"},"content":"        updateFilteredCcaList(PREDICATE_SHOW_ALL_CCAS);","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"jivesh"},"content":"    public void resetFiltersForReminderList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"jivesh"},"content":"        updateFilteredReminderList(PREDICATE_SHOW_ALL_REMINDERS);","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"jivesh"},"content":"    public void resetAllFilteredLists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"jivesh"},"content":"        this.resetFiltersForPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"jivesh"},"content":"        this.resetFiltersForCcaList();","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"jivesh"},"content":"        this.resetFiltersForReminderList();","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"justintanyf":18,"jivesh":24,"weiquu":51,"-":149,"jovyntls":63,"okyntary":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     * Returns an unmodifiable view of the CCA list.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     * This list will not contain any duplicate CCAs.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    ObservableList\u003cCca\u003e getCcaList();","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     * Returns an unmodifiable view of the reminders list.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     * This list will not contain any duplicate reminders.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    ObservableList\u003cReminder\u003e getReminderList();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weiquu":6,"-":17,"jovyntls":6}},{"path":"src/main/java/seedu/address/model/cca/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"public class Cca {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    // Identity fields","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    private final CcaName ccaName;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"    // Data fields","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"    private Set\u003cPerson\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"    private Set\u003cReminder\u003e reminders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    public Cca(CcaName ccaName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        requireAllNonNull(ccaName);","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"        this.members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"     * Constructor using ccaName and tags","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"     * @param ccaName Name of CCA","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"     * @param tags Tags to initialize CCA with","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"    public Cca(CcaName ccaName, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"        requireAllNonNull(ccaName);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"        this.members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"     * Constructor using ccaName, members, reminders, and tags","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"     * @param ccaName Name of CCA","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"     * @param members list of associated members","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"     * @param reminders list of associated reminders","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"     * @param tags CCA tags","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"    public Cca(CcaName ccaName, Set\u003cPerson\u003e members, Set\u003cReminder\u003e reminders, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"        requireAllNonNull(ccaName);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"        this.members \u003d members;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"        this.reminders \u003d reminders;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"     * Returns the name of this CCA.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"     * @return the name of this CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"    public CcaName getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        return ccaName;","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"okyntary"},"content":"     * Returns the members of this CCA.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"     * @return the members of this CCA","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"    public Set\u003cPerson\u003e getMembers() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"        return members;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"     * Returns the number of people in this CCA.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"     * @return the number of members of this CCA","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    public int getNumberOfMembers() {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"okyntary"},"content":"        return members.size();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"okyntary"},"content":"     * Returns the reminders of this CCA.","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"okyntary"},"content":"     * @return the reminders of this CCA","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"okyntary"},"content":"    public Set\u003cReminder\u003e getReminders() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"okyntary"},"content":"        return reminders;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"     * Returns the number of reminders in this CCA.","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"okyntary"},"content":"     * @return the number of reminders of this CCA","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"okyntary"},"content":"    public int getNumberOfReminders() {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"        return reminders.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"justintanyf"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"justintanyf"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"justintanyf"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"justintanyf"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"justintanyf"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"justintanyf"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"     * Returns true if both CCAs have the same ccaName.","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"     * This defines a weaker notion of equality between two CCAs.","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    public boolean isSameCca(seedu.address.model.cca.Cca otherCca) {","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"        if (otherCca \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        return otherCca !\u003d null","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 otherCca.getName().equals(getName());","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"     * Returns true if both CCAs have the same identity and data fields.","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"     * This defines a stronger notion of equality between two CCAs.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        if (!(other instanceof seedu.address.model.cca.Cca)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"        seedu.address.model.cca.Cca otherCca \u003d (seedu.address.model.cca.Cca) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"justintanyf"},"content":"        return otherCca.getName().equals(this.getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"okyntary"},"content":"                \u0026\u0026 otherCca.getMembers().equals(this.getMembers())","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"justintanyf"},"content":"                \u0026\u0026 otherCca.getTags().equals(this.getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"        return Objects.hash(ccaName);","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"justintanyf"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"justintanyf"},"content":"                .append(\"; Number of enrolled persons: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"okyntary"},"content":"                .append(this.getMembers().size());","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"justintanyf"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"justintanyf"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"justintanyf"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"justintanyf"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"justintanyf"},"content":"    // Enrol a Person","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"justintanyf"},"content":"    public boolean enrolPerson(Person newPerson) {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"okyntary"},"content":"        return this.members.add(newPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"justintanyf"},"content":"    // Check if Person Exists but should not need as it is a Set\u003c\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"okyntary"},"content":"    public boolean containsEnrolledPerson(Person personToCheck) {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"okyntary"},"content":"        return this.members.contains(personToCheck);","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"justintanyf"},"content":"    // Expel a Person","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"justintanyf"},"content":"    public boolean expelPerson(Person personToExpel) {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"okyntary"},"content":"        return this.members.remove(personToExpel);","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"okyntary"},"content":"    // Add a reminder","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"okyntary"},"content":"    public boolean addReminder(Reminder reminder) {","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"okyntary"},"content":"        return this.reminders.add(reminder);","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"okyntary"},"content":"    // Remove a reminder","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"okyntary"},"content":"    public boolean removeReminder(Reminder reminder) {","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"okyntary"},"content":"        return this.reminders.remove(reminder);","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"     * Updates the CCA name for all reminders that is linked to this CCA.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"     * Should only be called the editc command is executed.","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"    public void updateCcaNameForReminders() {","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"        for (Reminder reminder : reminders) {","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"            reminder.setCcaName(this.ccaName.fullName);","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justintanyf":44,"weiquu":10,"jovyntls":77,"okyntary":63}},{"path":"src/main/java/seedu/address/model/cca/CcaContainsPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":" * Tests that a {@code Person}\u0027s {@code CcaName} matches any of the keywords given.","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":" * To be used by findCcaCommand, but not implemented yet","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"public class CcaContainsPersonPredicate implements Predicate\u003cCca\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"    private final List\u003cPerson\u003e persons;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"    public CcaContainsPersonPredicate(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"    public boolean test(Cca cca) {","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"        requireNonNull(cca);","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"        return persons.stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"                .anyMatch(person -\u003e cca.containsEnrolledPerson(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"                || (other instanceof CcaContainsPersonPredicate // instanceof handles nulls","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 persons.equals(((CcaContainsPersonPredicate) other).persons)); // state check","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"jivesh":27,"weiquu":7}},{"path":"src/main/java/seedu/address/model/cca/CcaContainsReminderPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"public class CcaContainsReminderPredicate implements Predicate\u003cCca\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"    private final List\u003cReminder\u003e reminders;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"    public CcaContainsReminderPredicate(List\u003cReminder\u003e reminders) {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"        this.reminders \u003d reminders;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"    public boolean test(Cca cca) {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"        requireNonNull(cca);","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"        return reminders.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"                .anyMatch(reminder -\u003e reminder.getCcaName().equals(cca.getName().toString()));","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"        return other \u003d\u003d this // short circuitif same object","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"            || (other instanceof CcaContainsReminderPredicate) // handles nulls","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"            \u0026\u0026 reminders.equals(((CcaContainsReminderPredicate) other).reminders);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"jivesh":30}},{"path":"src/main/java/seedu/address/model/cca/CcaName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a CCA\u0027s name in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCcaName(String)}","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"public class CcaName {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    /*","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * Constructs a {@code CcaName}.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    public CcaName(String name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        checkArgument(isValidCcaName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public static boolean isValidCcaName(String test) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        return fullName;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof CcaName // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 fullName.equals(((CcaName) other).fullName)); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jovyntls":59}},{"path":"src/main/java/seedu/address/model/cca/CcaNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":" * Tests that a {@code Person}\u0027s {@code CcaName} matches any of the keywords given.","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":" * To be used by findCcaCommand, but not implemented yet","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"public class CcaNameContainsKeywordsPredicate implements Predicate\u003cCca\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"    public CcaNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    public boolean test(Cca cca) {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"        for (int i \u003d 0; i \u003c keywords.size(); i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"            String keyword \u003d keywords.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"            String ccaName \u003d cca.getName().fullName;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"            if (StringUtil.containsWordIgnoreCase(ccaName, keyword)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"        return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"                || (other instanceof CcaNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"                \u0026\u0026 keywords.equals(((CcaNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"justintanyf":30,"okyntary":8}},{"path":"src/main/java/seedu/address/model/cca/UniqueCcaList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.exceptions.CcaNotFoundException;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.exceptions.DuplicateCcaException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":" * A list of CCAs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":" * A CCA is considered unique by comparing using {@code Cca#isSameCca(Cca)}. As such, adding and updating of","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":" * CCAs uses Cca#isSameCca(Cca) for equality so as to ensure that the CCA being added or updated is","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":" * unique in terms of identity in the UniqueCcaList. However, the removal of a CCA uses Cca#equals(Object) so","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":" * as to ensure that the CCA with exactly the same fields will be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":" *","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":" * @see Cca#isSameCca(Cca)","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"public class UniqueCcaList implements Iterable\u003cCca\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    private final ObservableList\u003cCca\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    private final ObservableList\u003cCca\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"     * Returns true if the list contains an equivalent CCA as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    public boolean contains(Cca toCheck) {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     * Adds a CCA to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"     * The CCA must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    public void add(Cca toAdd) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"            throw new DuplicateCcaException();","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"     * Replaces the CCA {@code target} in the list with {@code editedCca}.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"     * The CCA identity of {@code editedCca} must not be the same as another existing CCA in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        requireAllNonNull(target, editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"            throw new CcaNotFoundException();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        if (!target.isSameCca(editedCca) \u0026\u0026 contains(editedCca)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"            throw new DuplicateCcaException();","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        internalList.set(index, editedCca);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"    public void setEnrolledPerson(Person enrolledTarget, Person editedPersonToBeEnrolled) {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"        internalList.parallelStream().forEach(cca -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"            if (cca.containsEnrolledPerson(enrolledTarget)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"                cca.expelPerson(enrolledTarget);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"                cca.enrolPerson(editedPersonToBeEnrolled);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"justintanyf"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"justintanyf"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"jivesh"},"content":"     * Changes any instances of {@code originalReminder} in any CCA\u0027s reminder list","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"jivesh"},"content":"     * to the {@code editedReminder}","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"jivesh"},"content":"    public void setAssociatedReminder(Reminder originalReminder, Reminder editedReminder) {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"jivesh"},"content":"        internalList.parallelStream().forEach(cca -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"jivesh"},"content":"            if (cca.getName().toString().equals(originalReminder.getCcaName())) {","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"jivesh"},"content":"                cca.removeReminder(originalReminder);","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"jivesh"},"content":"                cca.addReminder(editedReminder);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"jivesh"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"jivesh"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"     * Removes the equivalent CCA from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"     * The CCA must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"    public void remove(Cca toRemove) {","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"            throw new CcaNotFoundException();","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    public void setCcas(UniqueCcaList replacement) {","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"     * Replaces the contents of this list with {@code CCAs}.","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"     * {@code CCAs} must not contain duplicate CCAs.","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"    public void setCcas(List\u003cCca\u003e ccas) {","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        requireAllNonNull(ccas);","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        if (!ccasAreUnique(ccas)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"            throw new DuplicateCcaException();","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        internalList.setAll(ccas);","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"    public ObservableList\u003cCca\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"    public Iterator\u003cCca\u003e iterator() {","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof seedu.address.model.cca.UniqueCcaList // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"                        \u0026\u0026 internalList.equals(((seedu.address.model.cca.UniqueCcaList) other).internalList));","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"     * Returns true if {@code CCAs} contains only unique CCAs.","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"    private boolean ccasAreUnique(List\u003cCca\u003e ccas) {","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"        for (int i \u003d 0; i \u003c ccas.size() - 1; i++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"            for (int j \u003d i + 1; j \u003c ccas.size(); j++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"                if (ccas.get(i).isSameCca(ccas.get(j))) {","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"                    return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"                }","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"        return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"justintanyf":10,"jivesh":14,"jovyntls":137}},{"path":"src/main/java/seedu/address/model/cca/exceptions/CcaNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"public class CcaNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jovyntls":6}},{"path":"src/main/java/seedu/address/model/cca/exceptions/DuplicateCcaException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":" * identity).","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"public class DuplicateCcaException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    public DuplicateCcaException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"        super(\"Operation would result in duplicate CCAs\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jovyntls":11}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a Person\u0027s address in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a Person\u0027s email in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a Person\u0027s name in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":" * Tests that a {@code Person}\u0027s {@code CcaName} matches any of the keywords given.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"                    Arrays.stream(keyword.split(\" \"))","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"                        .anyMatch(word -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, word)));","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"weiquu":4,"-":29,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * Represents a Person in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":122,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/PersonIsInCcaPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":" * Tests that a {@code Person} is enroled in any cca contained in {@code ccaList}","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"public class PersonIsInCcaPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"    private final List\u003cCca\u003e ccaList;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"    public PersonIsInCcaPredicate(List\u003cCca\u003e ccaList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"        this.ccaList \u003d ccaList;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"        return ccaList.parallelStream().anyMatch(cca -\u003e cca.containsEnrolledPerson(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"jivesh":25}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a Person\u0027s phone number in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":" * unique in terms of identity in the UniqueCcaList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":136,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/reminder/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"public class Reminder implements Comparable\u003cReminder\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private static final SimpleDateFormat PARSE_DATE_TO_STRING_FORMAT \u003d new SimpleDateFormat(\"E, dd MMM yyyy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    // Identity fields","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    private final ReminderName reminderName;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    private final ReminderStartDate reminderStartDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    private final ReminderFrequency reminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    private final ReminderOccurrence reminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    // Data fields","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    // Assumes a reminder can be tagged to at most 1 CCA","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    private String ccaName \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    private ArrayList\u003cDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    public Reminder(ReminderName reminderName, ReminderStartDate reminderStartDate,","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"                    ReminderFrequency reminderFrequency, ReminderOccurrence reminderOccurrence) {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        this.reminderName \u003d reminderName;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        this.reminderStartDate \u003d reminderStartDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        this.reminderFrequency \u003d reminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        this.reminderOccurrence \u003d reminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        fillAllUpcomingDates();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"    public Reminder(ReminderName reminderName, ReminderStartDate reminderStartDate,","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"                    ReminderFrequency reminderFrequency, ReminderOccurrence reminderOccurrence,","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"                    String ccaName, ArrayList\u003cDate\u003e dates) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"        requireAllNonNull(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"        this.reminderName \u003d reminderName;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"        this.reminderStartDate \u003d reminderStartDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"        this.reminderFrequency \u003d reminderFrequency;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"        this.reminderOccurrence \u003d reminderOccurrence;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    private void setAllUpcomingDates(ArrayList\u003cDate\u003e dates) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"    private void fillAllUpcomingDates() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        int occurrences \u003d reminderOccurrence.getOccurrences();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assert occurrences \u003e 0 : \"An error occurred getting the dates for the Reminder\";","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        dates.add(reminderStartDate.getDate());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        occurrences--;","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        Frequency frequency \u003d reminderFrequency.getTimePeriod();","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        int numFrequency \u003d reminderFrequency.getNumTimePeriod();","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        while (occurrences \u003e 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"            Date prevDate \u003d dates.get(dates.size() - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"            Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"            calendar.setTime(prevDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"            switch (frequency) {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"            case DAY:","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"                calendar.add(Calendar.DAY_OF_YEAR, numFrequency);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"            case WEEK:","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"                calendar.add(Calendar.WEEK_OF_YEAR, numFrequency);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"            case MONTH:","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"                calendar.add(Calendar.MONTH, numFrequency);","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"            case YEAR:","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"                calendar.add(Calendar.YEAR, numFrequency);","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"            default:","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"            dates.add(calendar.getTime());","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"            occurrences--;","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"okyntary"},"content":"    public ArrayList\u003cDate\u003e getDates() {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"        return this.dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    /*","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"    public void setDates(ArrayList\u003cDate\u003e dates) {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"okyntary"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"    */","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"    public String getNextDate() {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"        return PARSE_DATE_TO_STRING_FORMAT.format(dates.get(0));","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"    public ReminderName getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"        return reminderName;","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    public ReminderStartDate getStartDate() {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"        return reminderStartDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    public ReminderFrequency getFrequency() {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        return reminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"    public ReminderOccurrence getOccurrences() {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"        return reminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    public String getCcaName() {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        return ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"    public void setCcaName(String ccaName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"    public boolean isAtLastOccurrence() {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        return reminderOccurrence.isAtLastOccurrence();","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"     * Gets the snoozed Reminder","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"     * This decrements the occurrences remaining.","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"     * @return A new Reminder representing the previous Reminder that has been snoozed.","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"    public Reminder getSnoozedReminder() {","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"        Reminder snoozedReminder \u003d new Reminder(getName(), getStartDate(), getFrequency(),","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"                new ReminderOccurrence(getOccurrences().getOccurrences() - 1));","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"        dates.remove(0);","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"        snoozedReminder.setAllUpcomingDates(dates);","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"        snoozedReminder.setCcaName(getCcaName());","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"        return snoozedReminder;","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"     * Returns true if both Reminders have the same reminderName.","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"     * This defines a weaker notion of equality between two Reminders.","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"    public boolean isSameReminder(seedu.address.model.reminder.Reminder otherReminder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"        if (otherReminder \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"        return otherReminder !\u003d null","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 otherReminder.getName().equals(getName())","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 otherReminder.getStartDate().toString().equals(getStartDate().toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"     * Compares reminders based on their start date.","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"     * @param otherReminder The reminder to be compared with","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"     * @return 1, 0 or -1 if the 1st reminder is earlier, on the same day, or later than the 2nd reminder respectively.","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"jovyntls"},"content":"    public int compareTo(Reminder otherReminder) {","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"jovyntls"},"content":"        return this.getStartDate().compareTo(otherReminder.getStartDate());","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"     * Returns true if both Reminders have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"     * This defines a stronger notion of equality between two Reminders.","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"weiquu"},"content":"        if (!(other instanceof seedu.address.model.reminder.Reminder)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"        // Same if they have the same name, associated cca, start date, frequency, and occurrences","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"        seedu.address.model.reminder.Reminder otherReminder \u003d (seedu.address.model.reminder.Reminder) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"        return otherReminder.getName().equals(getName()) \u0026\u0026 otherReminder.getCcaName().equals(getCcaName())","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 otherReminder.getStartDate().equals(getStartDate())","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 otherReminder.getFrequency().equals(getFrequency())","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 otherReminder.getOccurrences().equals(getOccurrences());","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"weiquu"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"        return Objects.hash(reminderName);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"weiquu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"        builder.append(getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":165,"jovyntls":19,"okyntary":23}},{"path":"src/main/java/seedu/address/model/reminder/ReminderContainsCcaNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":" * Tests that a {@code Reminder}\u0027s {@code CcaName} matches any of the keywords given.","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"public class ReminderContainsCcaNamePredicate implements Predicate\u003cReminder\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"    private final List\u003cString\u003e ccaNames;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"    public ReminderContainsCcaNamePredicate(List\u003cString\u003e ccaNames) {","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"        this.ccaNames \u003d ccaNames;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"    public boolean test(Reminder reminder) {","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"        return this.ccaNames.parallelStream()","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"                .anyMatch(ccaName -\u003e ccaName.equals(reminder.getCcaName()));","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"                || (other instanceof ReminderContainsCcaNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"                \u0026\u0026 ccaNames.equals(((ReminderContainsCcaNamePredicate) other).ccaNames)); // state check","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"jivesh":31}},{"path":"src/main/java/seedu/address/model/reminder/ReminderFrequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"public class ReminderFrequency {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"            \"Frequency should be entered in [Positive number][Type] format, e.g. 2d\"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"                    + \"\\nThe maximum value of the number is 100 (inclusive).\";","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"     * The frequency should be in [Positive number][Type] format.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+[dwmy]$\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    public final Frequency timePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    public final int numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     * Constructs a {@code ReminderFrequency}.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     * @param timePeriod The time period of the frequency, i.e. days, weeks, months, or years.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"     * @param numTimePeriod The number of the period of time to be used e.g. 1 day or 3 months.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    public ReminderFrequency(Frequency timePeriod, int numTimePeriod) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        requireNonNull(timePeriod);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        requireNonNull(numTimePeriod);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        assert numTimePeriod \u003e 0 : \"Frequency parsing incorrect\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        this.numTimePeriod \u003d numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"     * Returns true if a given string is a valid frequency.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    public static boolean isValidFrequency(String test) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public Frequency getTimePeriod() {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        return timePeriod;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    public int getNumTimePeriod() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        return numTimePeriod;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        return !timePeriod.equals(Frequency.ONE_OFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        if (isRecurring()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"            return \"Every \" + numTimePeriod + \" \" + timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"            return \"Once only\";","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"                || (other instanceof ReminderFrequency // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"                    \u0026\u0026 timePeriod.toString().equals(((ReminderFrequency) other).timePeriod.toString())","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"                    \u0026\u0026 numTimePeriod \u003d\u003d ((ReminderFrequency) other).numTimePeriod); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        return timePeriod.hashCode() + numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weiquu":62,"jovyntls":12}},{"path":"src/main/java/seedu/address/model/reminder/ReminderName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"public class ReminderName {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     * Constructs a {@code ReminderName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public ReminderName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        return fullName;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"                || (other instanceof ReminderName // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 fullName.equals(((ReminderName) other).fullName)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":53}},{"path":"src/main/java/seedu/address/model/reminder/ReminderNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":" * Tests that a {@code Reminder}\u0027s {@code CcaName} matches any of the keywords given.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"public class ReminderNameContainsKeywordsPredicate implements Predicate\u003cReminder\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    public ReminderNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    public boolean test(Reminder reminder) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"                        Arrays.stream(keyword.split(\" \"))","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"                            .anyMatch(word -\u003e StringUtil.containsWordIgnoreCase(reminder.getName().fullName, word)));","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof ReminderNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 keywords.equals(((ReminderNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weiquu":4,"jovyntls":30}},{"path":"src/main/java/seedu/address/model/reminder/ReminderOccurrence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class ReminderOccurrence {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Occurrences should be entered as a positive integer from \"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"            + \"1 to 50 (inclusive), e.g. 2\";","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"    private int occurrences;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"     * Constructs a {@code ReminderOccurrence}.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"     * @param occurrences The number of times the reminder occurs.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    public ReminderOccurrence(int occurrences) {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"        assert occurrences \u003e 0 : \"Occurrence parsing incorrect\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        this.occurrences \u003d occurrences;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"    public int getOccurrences() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"        return occurrences;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public boolean isAtLastOccurrence() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        return occurrences \u003d\u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        return Integer.toString(occurrences);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"                || (other instanceof ReminderOccurrence","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"                    \u0026\u0026 occurrences \u003d\u003d ((ReminderOccurrence) other).occurrences);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        return occurrences;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weiquu":36,"jovyntls":2,"okyntary":5}},{"path":"src/main/java/seedu/address/model/reminder/ReminderStartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"public class ReminderStartDate implements Comparable\u003cReminderStartDate\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"            \"Dates should be entered in YYYY-MM-DD format, e.g. 2021-5-23\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    public static final String PARSE_DATE_CONSTRAINTS \u003d \"This date could not be parsed. Is it a valid date?\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public static final String DATE_YEAR_TOO_LARGE_CONSTRAINTS \u003d \"It looks like you\u0027ve made a typo - \"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"            + \"this date is way too far in the future! The year should be less than 3000.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"     * The date must be in YYYY-MM-DD format.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    public static final SimpleDateFormat PARSE_INPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    public static final SimpleDateFormat PARSE_DATE_TO_STRING_FORMAT \u003d new SimpleDateFormat(\"E, dd MMM yyyy\");","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    public final Date startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"     * Constructs a {@code ReminderStartDate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"     * @param date A valid date in YYYY-MM-DD format.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public ReminderStartDate(Date date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        startDate \u003d date;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        return this.startDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"     * Checks that the parsed date matches with the given string representation.","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"     * @param dateString The string representation of the date in yyyy-MM-dd format","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    public void validate(String dateString) throws ParseException {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        int year;","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        int month;","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        int day;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        String[] fields \u003d dateString.split(\"-\");","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        if (fields.length !\u003d 3) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"            throw new ParseException(ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"            year \u003d Integer.parseInt(fields[0]);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"            month \u003d Integer.parseInt(fields[1]);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"            day \u003d Integer.parseInt(fields[2]);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        if (year \u003e\u003d 3000) {","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(ReminderStartDate.DATE_YEAR_TOO_LARGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        if (year !\u003d getYear() || month !\u003d getMonth() || day !\u003d startDate.getDate()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"            throw new ParseException(ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"     * A getter for the year of the startDate.","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"     * This is implemented as the getYear() method of the Date object starts counting from 1900.","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"     * @return an integer representing the year of the startDate.","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    public int getYear() {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        int padding \u003d 1900;","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"        return startDate.getYear() + padding;","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"     * A getter for the month of the startDate.","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"     * This is implemented as the getMonth() method of the Date object is zero-indexed.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"     * @return an integer representing the month of the startDate.","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"    public int getMonth() {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"        int padding \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        return startDate.getMonth() + padding;","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"     * Compares start dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"     * @param otherStartDate The start date to be compared with","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"     * @return 1, 0 or -1 if the 1st date is earlier, on the same day, or later than the 2nd date respectively.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    public int compareTo(ReminderStartDate otherStartDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"        return this.startDate.compareTo(otherStartDate.startDate);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        return PARSE_DATE_TO_STRING_FORMAT.format(startDate);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"                || (other instanceof ReminderStartDate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 startDate.toString().equals(((ReminderStartDate) other).startDate.toString())); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        return startDate.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weiquu":8,"jovyntls":114}},{"path":"src/main/java/seedu/address/model/reminder/UniqueReminderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.exceptions.DuplicateReminderException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.exceptions.ReminderNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":" * A list of Reminders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":" * A Reminder is considered unique by comparing using {@code Reminder#isSameReminder(Reminder)}. As such, adding and","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":" * updating of Reminder uses Reminder#isSameReminder(Reminder) for equality so as to ensure that the Reminder being","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":" * added or updated is unique in terms of identity in the UniqueReminderList. However, the removal of a Reminder uses","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":" * Reminder#equals(Object) so as to ensure that the Reminder with exactly the same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":" * @see Reminder#isSameReminder(Reminder)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"public class UniqueReminderList implements Iterable\u003cReminder\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    private final ObservableList\u003cReminder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    private final ObservableList\u003cReminder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"            FXCollections.unmodifiableObservableList(internalList.sorted());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"     * Returns true if the list contains an equivalent Reminder as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    public boolean contains(Reminder toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        return internalList.stream().anyMatch(toCheck::isSameReminder);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"     * Adds a Reminder to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"     * The Reminder must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    public void add(Reminder toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"            throw new DuplicateReminderException();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"     * Replaces the Reminder {@code target} in the list with {@code editedReminder}.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"     * The Reminder identity of {@code editedReminder} must not be the same as another existing Reminder in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(target, editedReminder);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"            throw new ReminderNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        if (!target.isSameReminder(editedReminder) \u0026\u0026 contains(editedReminder)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"            throw new DuplicateReminderException();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        internalList.set(index, editedReminder);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"jivesh"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"jivesh"},"content":"     * Checks for reminders attached to {@code originalCca} and changes","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"jivesh"},"content":"     * them to be associated with {@code newCca}","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"jivesh"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"jivesh"},"content":"    public void setAssociatedCca(Cca originalCca, Cca newCca) {","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"jivesh"},"content":"        internalList.parallelStream().forEach(reminder -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"jivesh"},"content":"            if (reminder.getCcaName().equals(originalCca.getName().toString())) {","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"jivesh"},"content":"                reminder.setCcaName(newCca.getName().toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"jivesh"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"jivesh"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"     * Removes the equivalent Reminder from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"     * The Reminder must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"    public void remove(Reminder toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"            throw new ReminderNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    public void setReminders(UniqueReminderList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"     * Replaces the contents of this list with {@code Reminders}.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     * {@code Reminders} must not contain duplicate Reminders.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    public void setReminders(List\u003cReminder\u003e reminders) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        requireAllNonNull(reminders);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"        if (!remindersAreUnique(reminders)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"            throw new DuplicateReminderException();","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"        internalList.setAll(reminders);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"    public ObservableList\u003cReminder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    public Iterator\u003cReminder\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"                || (other instanceof seedu.address.model.reminder.UniqueReminderList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.reminder.UniqueReminderList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"     * Returns true if {@code Reminders} contains only unique reminders.","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"    private boolean remindersAreUnique(List\u003cReminder\u003e reminders) {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        for (int i \u003d 0; i \u003c reminders.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"            for (int j \u003d i + 1; j \u003c reminders.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"                if (reminders.get(i).isSameReminder(reminders.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"jivesh":13,"weiquu":136,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/reminder/exceptions/DuplicateReminderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":" * Signals that the operation will result in duplicate Reminders (Reminders are considered duplicates if they have the","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":" * same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"public class DuplicateReminderException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    public DuplicateReminderException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"        super(\"Operation would result in duplicate Reminders\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":11}},{"path":"src/main/java/seedu/address/model/reminder/exceptions/ReminderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"public class ReminderNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":" * Represents a Tag in ePoch.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"jovyntls":1}},{"path":"src/main/java/seedu/address/model/util/Frequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public enum Frequency {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    ONE_OFF, DAY, WEEK, MONTH, YEAR;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"        return name().charAt(0) + name().substring(1).toLowerCase() + \"(s)\";","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"    public static Frequency getFrequency(String frequencyStr) {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"        Frequency frequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"        switch (frequencyStr) {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"        case \"d\":","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"            frequency \u003d Frequency.DAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"        case \"w\":","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"            frequency \u003d Frequency.WEEK;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"        case \"m\":","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"            frequency \u003d Frequency.MONTH;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        case \"y\":","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"            frequency \u003d Frequency.YEAR;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"            frequency \u003d Frequency.ONE_OFF;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        return frequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weiquu":31}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"    public static Cca[] getSampleCcas() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"        return new Cca[] {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"            new Cca(new CcaName(\"NUSSO\"), getTagSet(\"BringYourOwnInstrument\")),","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"            new Cca(new CcaName(\"The NUSChoir\"), getTagSet(\"Choral\", \"NeedsTenors\"))","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"        };","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"        for (Cca sampleCca : getSampleCcas()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"            sampleAb.addCca(sampleCca);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"justintanyf":12,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":" * Jackson-friendly version of {@link Cca}.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"public class JsonAdaptedCca {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Cca\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"    private final String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"    private final Set\u003cJsonAdaptedPerson\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"    private final Set\u003cJsonAdaptedReminder\u003e reminders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"     * Constructs a {@code JsonAdaptedCca} with the given CCA details.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"    public JsonAdaptedCca(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"                          @JsonProperty(\"members\")Set\u003cJsonAdaptedPerson\u003e members,","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"                          @JsonProperty(\"reminders\")Set\u003cJsonAdaptedReminder\u003e reminders,","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"                          @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"        if (members !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"            this.members.addAll(members);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"        if (reminders !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"            this.reminders.addAll(reminders);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"     * Converts a given {@code Cca} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"    public JsonAdaptedCca(Cca source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"        members.addAll(source.getMembers().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"okyntary"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"okyntary"},"content":"        reminders.addAll(source.getReminders().stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"okyntary"},"content":"                .map(JsonAdaptedReminder::new)","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"okyntary"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"okyntary"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Cca} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"okyntary"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"    public Cca toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"        final List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"        final List\u003cReminder\u003e reminderList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"        for (JsonAdaptedPerson member : members) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"            personList.add(member.toModelType());","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"okyntary"},"content":"        for (JsonAdaptedReminder reminder: reminders) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"okyntary"},"content":"            reminderList.add(reminder.toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"justintanyf"},"content":"        final List\u003cTag\u003e ccaTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"justintanyf"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"justintanyf"},"content":"            ccaTags.add(tag.toModelType());","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"okyntary"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"okyntary"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, CcaName.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"        if (!CcaName.isValidCcaName(name)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"okyntary"},"content":"            throw new IllegalValueException(CcaName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"        final CcaName modelName \u003d new CcaName(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"okyntary"},"content":"        final Set\u003cPerson\u003e members \u003d new HashSet\u003c\u003e(personList);","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"okyntary"},"content":"        final Set\u003cReminder\u003e reminders \u003d new HashSet\u003c\u003e(reminderList);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"okyntary"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(ccaTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"okyntary"},"content":"        return new Cca(modelName, members, reminders, tags);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justintanyf":12,"jovyntls":2,"okyntary":85}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":" * Jackson-friendly version of {@link Reminder}.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"class JsonAdaptedReminder {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Reminder\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"    private final String name;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"    private final Date startDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"    private final Frequency timePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"    private final int numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"    private final int occurrences;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"    private final String ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"    private final ArrayList\u003cDate\u003e dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"     * Constructs a {@code JsonAdaptedReminder} with the given person details.","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"    public JsonAdaptedReminder(@JsonProperty(\"name\") String name, @JsonProperty(\"startDate\") Date startDate,","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"                               @JsonProperty(\"frequency\") Frequency timePeriod,","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"                               @JsonProperty(\"numTimePeriod\") int numTimePeriod,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"                               @JsonProperty(\"occurrences\") int occurrences,","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"                               @JsonProperty(\"ccaName\") String ccaName,","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"                               @JsonProperty(\"dates\") ArrayList\u003cDate\u003e dates) {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"        this.numTimePeriod \u003d numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"        this.occurrences \u003d occurrences;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"     * Converts a given {@code Reminder} into this class for Jackson use.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"    public JsonAdaptedReminder(Reminder source) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"okyntary"},"content":"        startDate \u003d source.getStartDate().startDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"okyntary"},"content":"        timePeriod \u003d source.getFrequency().timePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"okyntary"},"content":"        numTimePeriod \u003d source.getFrequency().numTimePeriod;","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"okyntary"},"content":"        occurrences \u003d source.getOccurrences().getOccurrences();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"okyntary"},"content":"        ccaName \u003d source.getCcaName();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"okyntary"},"content":"        dates \u003d source.getDates();","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"okyntary"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"okyntary"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"    public Reminder toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"                    ReminderName.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"        if (!ReminderName.isValidName(name)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"okyntary"},"content":"            throw new IllegalValueException(ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"okyntary"},"content":"        final ReminderName reminderName \u003d new ReminderName(name);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"okyntary"},"content":"        final ReminderStartDate reminderStartDate \u003d new ReminderStartDate(startDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"okyntary"},"content":"        final ReminderFrequency reminderFrequency \u003d new ReminderFrequency(this.timePeriod, this.numTimePeriod);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"okyntary"},"content":"        final ReminderOccurrence reminderOccurrence \u003d new ReminderOccurrence(occurrences);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"okyntary"},"content":"        return new Reminder(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence, ccaName,","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"okyntary"},"content":"                dates);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"okyntary":87}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"    public static final String MESSAGE_DUPLICATE_CCA \u003d \"Ccas list contains duplicate cca(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"    public static final String MESSAGE_DUPLICATE_REMINDER \u003d \"Reminder list contains duplicate reminder(s).\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"    private final List\u003cJsonAdaptedCca\u003e ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"    private final List\u003cJsonAdaptedReminder\u003e reminders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"                                       @JsonProperty(\"ccas\") List\u003cJsonAdaptedCca\u003e ccas,","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"                                       @JsonProperty(\"reminders\") List\u003cJsonAdaptedReminder\u003e reminders) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"        this.ccas.addAll(ccas);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"        this.reminders.addAll(reminders);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"        ccas.addAll(source.getCcaList().stream().map(JsonAdaptedCca::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"        reminders.addAll(source.getReminderList().stream().map(JsonAdaptedReminder::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"        for (JsonAdaptedCca jsonAdaptedCca : ccas) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"            Cca cca \u003d jsonAdaptedCca.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"            if (addressBook.hasCca(cca)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CCA);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"            addressBook.addCca(cca);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"        for (JsonAdaptedReminder jsonAdaptedReminder : reminders) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"okyntary"},"content":"            Reminder reminder \u003d jsonAdaptedReminder.toModelType();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"okyntary"},"content":"            if (addressBook.hasReminder(reminder)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"okyntary"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_REMINDER);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"okyntary"},"content":"            addressBook.addReminder(reminder);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":59,"okyntary":27}},{"path":"src/main/java/seedu/address/ui/CcaCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":" * An UI component that displays information of a {@code Cca}.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"public class CcaCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    private static final String FXML \u003d \"CcaListCard.fxml\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    public final Cca cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    private Label name;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    private Label id;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    private Label numPeople;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"     * Creates a {@code CcaCode} with the given {@code Cca} and index to display.","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public CcaCard(Cca cca, int displayedIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        super(FXML);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        this.cca \u003d cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        this.name.setText(cca.getName().fullName);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        this.numPeople.setText(\"No. of people: \" + cca.getNumberOfMembers());","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        cca.getTags().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        if (!(other instanceof CcaCard)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        CcaCard card \u003d (CcaCard) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"                \u0026\u0026 cca.equals(card.cca);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"weiquu":11,"jovyntls":63}},{"path":"src/main/java/seedu/address/ui/CcaListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * Panel containing the list of CCAs.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"public class CcaListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    private static final String FXML \u003d \"CcaListPanel.fxml\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CcaListPanel.class);","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    private ListView\u003cCca\u003e ccaListView;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"     * Creates a {@code CcaListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    public CcaListPanel(ObservableList\u003cCca\u003e ccaList) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        super(FXML);","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"        ccaListView.setItems(ccaList);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        ccaListView.setCellFactory(listView -\u003e new CcaListPanel.CcaListViewCell());","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Cca} using a {@code CcaCard}.","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    class CcaListViewCell extends ListCell\u003cCca\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        protected void updateItem(Cca cca, boolean empty) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"            super.updateItem(cca, empty);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"            if (empty || cca \u003d\u003d null) {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"                setText(null);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"            } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"                setGraphic(new CcaCard(cca, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jovyntls":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-t14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weiquu":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    private CcaListPanel ccaListPanel;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    private ReminderListPanel reminderListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    private StackPane ccaListPanelPlaceholder;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    private StackPane reminderListPanelPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"        ccaListPanel \u003d new CcaListPanel(logic.getFilteredCcaList());","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"        ccaListPanelPlaceholder.getChildren().add(ccaListPanel.getRoot());","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"        reminderListPanel \u003d new ReminderListPanel(logic.getFilteredReminderList());","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"        reminderListPanelPlaceholder.getChildren().add(reminderListPanel.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weiquu":7,"-":196,"jovyntls":7}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        phone.setText(\"\\uD83D\\uDCDE\" + person.getPhone().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        address.setText(\"\\uD83C\\uDFE0\" + person.getAddress().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        email.setText(\"\\uD83D\\uDCE8\" + person.getEmail().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        phone.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        address.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        email.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":74,"jovyntls":8}},{"path":"src/main/java/seedu/address/ui/ReminderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.TimeZone;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":" * An UI component that displays information of a {@code Reminder}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"public class ReminderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    private static final String FXML \u003d \"ReminderListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    public final Reminder reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    private Label name;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    private Label date;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    private Label id;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    private Label frequency;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    private Label occurrences;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"     * Creates a {@code ReminderCode} with the given {@code Reminder} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    public ReminderCard(Reminder reminder, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        this.name.setText(reminder.getName().fullName);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        this.date.setText(reminder.getNextDate());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        this.frequency.setText(\"Frequency: \" + reminder.getFrequency().toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        this.occurrences.setText(\"Occurrences Left: \" + reminder.getOccurrences().toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        tags.getChildren().add(new Label(this.reminder.getCcaName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        // if reminder.getNextDate() is today, then change colour","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"E, dd MMM yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        df.setTimeZone(TimeZone.getTimeZone(\"Singapore\")); // check if this is needed","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        String currDate \u003d df.format(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        if (reminder.getNextDate().equals(currDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"            this.cardPane.backgroundProperty().bind(Bindings.createObjectBinding(() -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"                new Background(new BackgroundFill(Color.rgb(255, 40, 0, 0.7),","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"                        CornerRadii.EMPTY, Insets.EMPTY))));","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        if (!(other instanceof CcaCard)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        ReminderCard card \u003d (ReminderCard) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"                \u0026\u0026 reminder.equals(card.reminder);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":94,"jovyntls":3}},{"path":"src/main/java/seedu/address/ui/ReminderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"public class ReminderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private static final String FXML \u003d \"ReminderListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ReminderListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    private ListView\u003cReminder\u003e reminderListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     * Creates a {@code ReminderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public ReminderListPanel(ObservableList\u003cReminder\u003e reminderList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        reminderListView.setItems(reminderList);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        reminderListView.setCellFactory(listView -\u003e new ReminderListPanel.ReminderListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Reminder} using a {@code ReminderCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    class ReminderListViewCell extends ListCell\u003cReminder\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        protected void updateItem(Reminder reminder, boolean empty) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"            super.updateItem(reminder, empty);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"            if (empty || reminder \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"                setText(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"                setGraphic(new ReminderCard(reminder, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":45}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"jovyntls":1}},{"path":"src/main/resources/view/CcaListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"            \u003cLabel fx:id\u003d\"numPeople\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numPeople\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"weiquu":2,"jovyntls":32}},{"path":"src/main/resources/view/CcaListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    \u003cListView fx:id\u003d\"ccaListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jovyntls":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"    -fx-background-radius: 30px;","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"jivesh"},"content":"    -fx-border-radius: 30px;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"    -fx-border-radius: 10 10 0 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"jivesh"},"content":"    -fx-background-radius: 30px;","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"jivesh"},"content":"    -fx-border-radius: 30px;","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"jivesh"},"content":"    -fx-background-radius: 12pt;","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"jivesh"},"content":"    -fx-border-radius: 10 10 0 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"jivesh"},"content":"    -fx-font-family: \"Courier\";","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jivesh":8,"-":351}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    -fx-background: #ebebeb;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"jovyntls":1}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":".background {","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"    background-color: #ebebeb; /* Used in the default.html file */","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":".label {","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #ababab;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":".label-bright {","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":".label-header {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":".text-field {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":".tab-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":".table-view {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    -fx-base: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    -fx-control-inner-background: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color:","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        transparent","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        transparent","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":".split-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":".list-view {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":".list-cell {","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"jivesh"},"content":".list-cell:filled {","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"jivesh"},"content":"    -fx-background-radius: 12px;","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #d1dce0;","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #bfd1d9;","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":".list-cell .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":".cell_big_label {","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":".cell_small_label {","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":".stack-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"     -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":".pane-with-border {","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"     -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"     -fx-border-color: derive(#f7f7f7, 10%);","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":".status-bar {","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":".result-display {","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":".result-display .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":".status-bar .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":".status-bar-with-border {","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: derive(#f7f7f7, 25%);","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"jovyntls"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"jovyntls"},"content":".grid-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"jovyntls"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":".context-menu {","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 50%);","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"jovyntls"},"content":".context-menu .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"jovyntls"},"content":".menu-bar {","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #e2e2e2;","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"jovyntls"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"jovyntls"},"content":".menu .left-container {","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"jovyntls"},"content":"/*","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"jovyntls"},"content":" * Metro style Push Button","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"jovyntls"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"jovyntls"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"jovyntls"},"content":".button {","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #363636;","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"jovyntls"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"jovyntls"},"content":".button:hover {","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #c4c4c4;","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"jovyntls"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"jovyntls"},"content":"  -fx-background-color: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"jovyntls"},"content":"  -fx-text-fill: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"jovyntls"},"content":".button:focused {","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"jovyntls"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"jovyntls"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"jovyntls"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"jovyntls"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"jovyntls"},"content":".button:default {","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"jovyntls"},"content":".button:default:hover {","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"jovyntls"},"content":".dialog-pane {","lastModifiedDate":"2021-10-31"},{"lineNumber":260,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"jovyntls"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":266,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"jovyntls"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"jovyntls"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":271,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":273,"author":{"gitId":"jovyntls"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-10-31"},{"lineNumber":274,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#f7f7f7, 25%);","lastModifiedDate":"2021-10-31"},{"lineNumber":275,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":276,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":277,"author":{"gitId":"jovyntls"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-10-31"},{"lineNumber":278,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-10-31"},{"lineNumber":279,"author":{"gitId":"jovyntls"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-10-31"},{"lineNumber":280,"author":{"gitId":"jovyntls"},"content":"    -fx-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"jovyntls"},"content":".scroll-bar {","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#d1d1d1, 20%);","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":288,"author":{"gitId":"jovyntls"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-31"},{"lineNumber":289,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: derive(#d1d1d1, 50%);","lastModifiedDate":"2021-10-31"},{"lineNumber":290,"author":{"gitId":"jovyntls"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":291,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":292,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":293,"author":{"gitId":"jovyntls"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-31"},{"lineNumber":294,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":295,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":296,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":297,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":298,"author":{"gitId":"jovyntls"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-31"},{"lineNumber":299,"author":{"gitId":"jovyntls"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":302,"author":{"gitId":"jovyntls"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-31"},{"lineNumber":303,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-31"},{"lineNumber":304,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":305,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":306,"author":{"gitId":"jovyntls"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-31"},{"lineNumber":307,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":308,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":310,"author":{"gitId":"jovyntls"},"content":"#cardPane {","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":313,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":316,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"jovyntls"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-10-31"},{"lineNumber":318,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-10-31"},{"lineNumber":319,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-10-31"},{"lineNumber":320,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":321,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":322,"author":{"gitId":"jovyntls"},"content":"#commandTextField {","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent #ebebeb transparent #ebebeb;","lastModifiedDate":"2021-10-31"},{"lineNumber":324,"author":{"gitId":"jovyntls"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":325,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: #ebebeb #ebebeb #ffffff #ebebeb;","lastModifiedDate":"2021-10-31"},{"lineNumber":326,"author":{"gitId":"jovyntls"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"jovyntls"},"content":"    -fx-font-family: \"Courier\";","lastModifiedDate":"2021-10-31"},{"lineNumber":329,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: linear-gradient(from 41px 34px to 52px 52px, reflect, #f5faff 50%, white 50%);","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":333,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":334,"author":{"gitId":"jovyntls"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-10-31"},{"lineNumber":335,"author":{"gitId":"jovyntls"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-10-31"},{"lineNumber":336,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":337,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":338,"author":{"gitId":"jovyntls"},"content":"#reminderListView, #personListView, #ccaListView {","lastModifiedDate":"2021-10-31"},{"lineNumber":339,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2021-10-31"},{"lineNumber":340,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":341,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":342,"author":{"gitId":"jovyntls"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: transparent, #ebebeb, transparent, #ebebeb;","lastModifiedDate":"2021-10-31"},{"lineNumber":344,"author":{"gitId":"jivesh"},"content":"    -fx-background-radius: 12pt;","lastModifiedDate":"2021-11-07"},{"lineNumber":345,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":346,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":347,"author":{"gitId":"jovyntls"},"content":"#tags {","lastModifiedDate":"2021-10-31"},{"lineNumber":348,"author":{"gitId":"jovyntls"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-31"},{"lineNumber":349,"author":{"gitId":"jovyntls"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":350,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":351,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":352,"author":{"gitId":"jovyntls"},"content":"#tags .label {","lastModifiedDate":"2021-10-31"},{"lineNumber":353,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-31"},{"lineNumber":354,"author":{"gitId":"jovyntls"},"content":"    -fx-background-color: #78bdd6;","lastModifiedDate":"2021-10-31"},{"lineNumber":355,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":356,"author":{"gitId":"jovyntls"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":357,"author":{"gitId":"jovyntls"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":358,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-31"},{"lineNumber":359,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":360,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"jovyntls"},"content":".panel-header {","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"jovyntls"},"content":"    -fx-border-color: lightblue;","lastModifiedDate":"2021-11-07"},{"lineNumber":363,"author":{"gitId":"jovyntls"},"content":"    -fx-border-width: 0 0 4 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":364,"author":{"gitId":"jovyntls"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2021-11-07"},{"lineNumber":365,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":366,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"jovyntls"},"content":".panel-header-text {","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"jovyntls"},"content":"    -fx-effect: dropshadow(gaussian, rgba(20, 100, 100, 0.5), 10, 0.5, 0.0, 0.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"jovyntls"},"content":"    -fx-font-size: 24;","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"jovyntls"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"jivesh":5,"jovyntls":366}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"         title\u003d\"ePoch\" minWidth\u003d\"920\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        \u003cHBox fx:id\u003d\"lists\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"              \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"            \u003cHBox styleClass\u003d\"panel-header\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"              \u003cLabel styleClass\u003d\"panel-header-text\"\u003e Persons\u003c/Label\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"          \u003cVBox fx:id\u003d\"ccaList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"              \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"            \u003cHBox styleClass\u003d\"panel-header\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"              \u003cLabel styleClass\u003d\"panel-header-text\"\u003e CCAs\u003c/Label\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"            \u003cStackPane fx:id\u003d\"ccaListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"          \u003cVBox fx:id\u003d\"reminderList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"              \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"            \u003cHBox styleClass\u003d\"panel-header\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"              \u003cLabel styleClass\u003d\"panel-header-text\"\u003e Reminders\u003c/Label\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"            \u003cStackPane fx:id\u003d\"reminderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"weiquu":9,"-":58,"jovyntls":24}},{"path":"src/main/resources/view/ReminderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"            \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$date\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"            \u003cLabel fx:id\u003d\"frequency\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$frequency\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"            \u003cLabel fx:id\u003d\"occurrences\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$occurrences\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":35,"jovyntls":1}},{"path":"src/main/resources/view/ReminderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    \u003cListView fx:id\u003d\"reminderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weiquu":8}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        assertTrue(expected.equals(expected));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertFalse(expected.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertFalse(expected.equals(parametersStub));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"weiquu":14,"-":58}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"jivesh"},"content":"        String deleteCommand \u003d \"deletep 9\";","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        String addCommand \u003d PersonAddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"    public void getFilteredCcaList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCcaList().remove(0));","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"    public void getFilteredReminderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredReminderList().remove(0));","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jivesh":1,"weiquu":10,"-":159,"jovyntls":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditCcaDescriptorBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditReminderDescriptorBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_TAG_MUSIC \u003d \"Music\";","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_TAG_USP \u003d \"USP\";","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_TAG_SPORTS \u003d \"sports\";","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    public static final String VALID_CCA_NAME_NUSSO \u003d \"NUSSO\";","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    public static final String VALID_CCA_NAME_USKICK \u003d \"USKick\";","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    public static final String VALID_CCA_NAME_TRACK \u003d \"USP Track\";","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"    public static final String VALID_CCA_NAME_USP_ULTIMATE \u003d \"USP Ultimate\";","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_CID_FIRST_CCA \u003d \"1\";","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_CID_SECOND_CCA \u003d \"2\";","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"    public static final String VALID_CCA_TAG_INTEREST_GROUP \u003d \"InterestGroup\";","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"    public static final String VALID_CCA_TAG_DISC_PROVIDED \u003d \"DiscProvided\";","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"    public static final String VALID_CCA_TAG_INTERVIEW_NEEDED \u003d \"InterviewNeeded\";","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_REMINDER_NAME_MEETING \u003d \"Meeting\";","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_REMINDER_NAME_REHEARSAL \u003d \"rehearsal\";","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_REMINDER_NAME_PROJECT \u003d \"project\";","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_REMINDER_NAME_CLASS \u003d \"Class\";","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_START_DATE_MEETING \u003d \"2021-10-30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_START_DATE_CLASS \u003d \"2021-11-01\";","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_FREQUENCY_MEETING \u003d \"1w\";","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_FREQUENCY_CLASS \u003d \"2d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_OCCURRENCES_MEETING \u003d \"30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    public static final String VALID_OCCURRENCES_CLASS \u003d \"50\";","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"    public static final Frequency VALID_TIME_PERIOD_DAY \u003d Frequency.DAY;","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    public static final Frequency VALID_TIME_PERIOD_WEEK \u003d Frequency.WEEK;","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    public static final Frequency VALID_TIME_PERIOD_YEAR \u003d Frequency.YEAR;","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_NUM_TIME_PERIOD_1 \u003d 1;","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_NUM_TIME_PERIOD_10 \u003d 10;","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_NUM_TIME_PERIOD_2 \u003d 2;","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_OCCURENCES_5 \u003d 5;","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_OCCURENCES_10 \u003d 10;","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_OCCURENCES_30 \u003d 30;","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    public static final int VALID_OCCURRENCES_50 \u003d 50;","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"    public static final String CCA_NAME_DESC_NUSSO \u003d \" \" + PREFIX_NAME + VALID_CCA_NAME_NUSSO;","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"    public static final String CCA_NAME_DESC_TRACK \u003d \" \" + PREFIX_NAME + VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    public static final String CCA_NAME_DESC_USKICK \u003d \" \" + PREFIX_NAME + VALID_CCA_NAME_USKICK;","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"    public static final String TAG_DESC_USP \u003d \" \" + PREFIX_TAG + VALID_TAG_USP;","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    public static final String TAG_DESC_MUSIC \u003d \" \" + PREFIX_TAG + VALID_TAG_MUSIC;","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"    public static final String TAG_DESC_SPORTS \u003d \" \" + PREFIX_TAG + VALID_TAG_SPORTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_CID_FIRST_CCA \u003d \" \" + PREFIX_CCA_ID + VALID_CID_FIRST_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_CID_SECOND_CCA \u003d \" \" + PREFIX_CCA_ID + VALID_CID_SECOND_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_NAME_DESC_MEETING \u003d \" \" + PREFIX_NAME + VALID_REMINDER_NAME_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_NAME_DESC_CLASS \u003d \" \" + PREFIX_NAME + VALID_REMINDER_NAME_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_START_DATE_DESC_MEETING \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_START_DATE_DESC_CLASS \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_FREQUENCY_DESC_MEETING \u003d \" \" + PREFIX_FREQUENCY + VALID_FREQUENCY_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_FREQUENCY_DESC_CLASS \u003d \" \" + PREFIX_FREQUENCY + VALID_FREQUENCY_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_OCCURRENCES_DESC_MEETING \u003d \" \" + PREFIX_OCCURRENCES + VALID_OCCURRENCES_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"    public static final String REMINDER_OCCURRENCES_DESC_CLASS \u003d \" \" + PREFIX_OCCURRENCES + VALID_OCCURRENCES_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"    public static final String INVALID_REMINDER_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Meeting\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"    public static final String INVALID_START_DATE_DESC \u003d \" \" + PREFIX_START_DATE + \"2020-02-30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    public static final String INVALID_FREQUENCY_DESC \u003d \" \" + PREFIX_FREQUENCY + \"1dw\";","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    public static final String INVALID_OCCURRENCES_DESC \u003d \" \" + PREFIX_OCCURRENCES + \"1w0\";","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"    public static final String INVALID_CCA_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in CCA names","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"    public static final PersonEditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"    public static final PersonEditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    public static final ReminderEditCommand.EditReminderDescriptor DESC_REHEARSAL;","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"    public static final ReminderEditCommand.EditReminderDescriptor DESC_MEETING;","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"    public static final CcaEditCommand.EditCcaDescriptor DESC_TRACK;","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"    public static final CcaEditCommand.EditCcaDescriptor DESC_USKICK;","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        DESC_REHEARSAL \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_REHEARSAL)","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"                .withStartDate(new Date()).withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_10)","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"                .withOccurrence(VALID_OCCURENCES_5).withCcaName(VALID_CCA_NAME_NUSSO).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"        DESC_MEETING \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_MEETING)","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"                .withStartDate(new Date()).withFrequency(VALID_TIME_PERIOD_YEAR, VALID_NUM_TIME_PERIOD_2)","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"                .withOccurrence(VALID_OCCURENCES_10).withCcaName(VALID_CCA_NAME_USKICK).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"        DESC_TRACK \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_TRACK)","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"                .withTags(VALID_TAG_SPORTS).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"        DESC_USKICK \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_USKICK)","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"                .withTags(VALID_TAG_USP, VALID_TAG_SPORTS).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"weiquu"},"content":"     * Updates {@code model}\u0027s filtered list to show only the CCA at the given {@code targetIndex} in the","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"jovyntls"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"jovyntls"},"content":"    public static void showCcaAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"jovyntls"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCcaList().size());","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"weiquu"},"content":"        Cca cca \u003d model.getFilteredCcaList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"weiquu"},"content":"        final String[] splitName \u003d cca.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"        model.updateFilteredCcaList(new CcaNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"jovyntls"},"content":"        assertEquals(1, model.getFilteredCcaList().size());","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"weiquu"},"content":"     * Updates {@code model}\u0027s filtered list to show only the reminder at the given {@code targetIndex} in the","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"weiquu"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"weiquu"},"content":"    public static void showReminderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"weiquu"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredReminderList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d model.getFilteredReminderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"weiquu"},"content":"        final String[] splitName \u003d reminder.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredReminderList(new ReminderNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"weiquu"},"content":"        assertEquals(1, model.getFilteredReminderList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"justintanyf":6,"weiquu":87,"-":127,"jovyntls":23}},{"path":"src/test/java/seedu/address/logic/commands/cca/CcaAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"public class CcaAddCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    public void constructor_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CcaAddCommand(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"    public void execute_ccaAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        ModelStubAcceptingCcaAdded modelStub \u003d new ModelStubAcceptingCcaAdded();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        Cca validCca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        CommandResult commandResult \u003d new CcaAddCommand(validCca).execute(modelStub);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        assertEquals(String.format(CcaAddCommand.MESSAGE_SUCCESS, validCca), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        assertEquals(Arrays.asList(validCca), modelStub.ccasAdded);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    public void execute_duplicateCca_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        Cca validCca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        CcaAddCommand ccaAddCommand \u003d new CcaAddCommand(validCca);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        ModelStub modelStub \u003d new ModelStubWithCca(validCca);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"                CcaAddCommand.MESSAGE_DUPLICATE_CCA, () -\u003e ccaAddCommand.execute(modelStub));","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        Cca alice \u003d new CcaBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        Cca bob \u003d new CcaBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        CcaAddCommand addAliceCommand \u003d new CcaAddCommand(alice);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        CcaAddCommand addBobCommand \u003d new CcaAddCommand(bob);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        CcaAddCommand addAliceCommandCopy \u003d new CcaAddCommand(alice);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        // different cca -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        public void addCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfPersons() {","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"        public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"        public void deleteCca(Cca target) {","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"jovyntls"},"content":"        public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfCcas() {","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"jovyntls"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"jovyntls"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"jovyntls"},"content":"         * Enrols a cca into a CCA","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"jovyntls"},"content":"         *","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"jovyntls"},"content":"         *  @param ccaToEnrolInto CCA to enrol into","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"jovyntls"},"content":"         * @param personToEnrol cca enrolling into CCA","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"jovyntls"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"jovyntls"},"content":"        public boolean enrolPersonIntoCca(Cca ccaToEnrolInto, Person personToEnrol) {","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"jovyntls"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"jovyntls"},"content":"         * Expels a cca from a CCA","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"jovyntls"},"content":"         *","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"jovyntls"},"content":"         * @param ccaToExpelFrom CCA to expel from","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"jovyntls"},"content":"         * @param personToExpel Person to be expelled from CCA","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"jovyntls"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"jovyntls"},"content":"        public boolean expelPersonFromCca(Cca ccaToExpelFrom, Person personToExpel) {","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cReminder\u003e getFilteredReminderList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfReminders() {","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"jovyntls"},"content":"        public void updateFilteredReminderList(Predicate\u003cReminder\u003e reminderPredicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"jovyntls"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"jovyntls"},"content":"        public void resetFiltersForPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"jovyntls"},"content":"        public void resetFiltersForCcaList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"jovyntls"},"content":"        public void resetFiltersForReminderList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"jovyntls"},"content":"        public void resetAllFilteredLists() {","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"jovyntls"},"content":"        public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"jovyntls"},"content":"        public void deleteReminder(Reminder target) {","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"jovyntls"},"content":"        public boolean addReminder(Reminder reminder, Cca ccaToAddInto) {","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"jovyntls"},"content":"        public void snoozeReminder(Reminder target) {","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"jovyntls"},"content":"        public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"jovyntls"},"content":"     * A Model stub that contains a single cca.","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"jovyntls"},"content":"    private class ModelStubWithCca extends ModelStub {","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"jovyntls"},"content":"        private final Cca cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"jovyntls"},"content":"        ModelStubWithCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"jovyntls"},"content":"            requireNonNull(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"jovyntls"},"content":"            this.cca \u003d cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"jovyntls"},"content":"        public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"jovyntls"},"content":"            requireNonNull(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"jovyntls"},"content":"            return this.cca.isSameCca(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":292,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"jovyntls"},"content":"     * A Model stub that always accept the cca being added.","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"jovyntls"},"content":"    private class ModelStubAcceptingCcaAdded extends ModelStub {","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"jovyntls"},"content":"        final ArrayList\u003cCca\u003e ccasAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"jovyntls"},"content":"        public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"jovyntls"},"content":"            requireNonNull(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"jovyntls"},"content":"            return ccasAdded.stream().anyMatch(cca::isSameCca);","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"jovyntls"},"content":"        public void addCca(Cca cca) {","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"jovyntls"},"content":"            requireNonNull(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"jovyntls"},"content":"            ccasAdded.add(cca);","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfCcas() {","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"jovyntls"},"content":"            return 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"jovyntls"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"jovyntls"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"weiquu":7,"jovyntls":322}},{"path":"src/test/java/seedu/address/logic/commands/cca/CcaDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCcaAtIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalCcas.getTypicalAddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CCA;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":" * {@code PersonDeleteCommand}.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"public class CcaDeleteCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        Cca ccaToDelete \u003d model.getFilteredCcaList().get(INDEX_FIRST_CCA.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand ccaDeleteCommand \u003d new CcaDeleteCommand(INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(CcaDeleteCommand.MESSAGE_DELETE_CCA_SUCCESS, ccaToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        expectedModel.deleteCca(ccaToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(ccaDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCcaList().size() + 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand ccaDeleteCommand \u003d new CcaDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(ccaDeleteCommand, model, Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        showCcaAtIndex(model, INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        Cca ccaToDelete \u003d model.getFilteredCcaList().get(INDEX_FIRST_CCA.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand ccaDeleteCommand \u003d new CcaDeleteCommand(INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(CcaDeleteCommand.MESSAGE_DELETE_CCA_SUCCESS, ccaToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        expectedModel.deleteCca(ccaToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        showAllCcas(expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(ccaDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        showCcaAtIndex(model, INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CCA;","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCcaList().size());","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand ccaDeleteCommand \u003d new CcaDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(ccaDeleteCommand, model, Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand deleteFirstCommand \u003d new CcaDeleteCommand(INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand deleteSecondCommand \u003d new CcaDeleteCommand(INDEX_SECOND_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"        CcaDeleteCommand deleteFirstCommandCopy \u003d new CcaDeleteCommand(INDEX_FIRST_CCA);","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"        // different cca -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     * Updates {@code model}\u0027s filtered list to show everyone.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    private void showAllCcas(Model model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredCcaList(p -\u003e true);","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"weiquu":5,"jovyntls":102}},{"path":"src/test/java/seedu/address/logic/commands/cca/CcaEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TRACK;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_USKICK;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_NUSSO;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCcaAtIndex;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.getTypicalAddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CCA;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditCcaDescriptorBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CcaEditCommand.","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"public class CcaEditCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        Cca editedCca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder(editedCca).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(INDEX_FIRST_CCA, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(CcaEditCommand.MESSAGE_EDIT_CCA_SUCCESS, editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        expectedModel.setCca(model.getFilteredCcaList().get(0), editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(ccaEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        Index indexLastCca \u003d Index.fromOneBased(model.getFilteredCcaList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        Cca lastCca \u003d model.getFilteredCcaList().get(indexLastCca.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        CcaBuilder ccaInList \u003d new CcaBuilder(lastCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        Cca editedCca \u003d ccaInList.withName(VALID_CCA_NAME_TRACK).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_TRACK).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(indexLastCca, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(CcaEditCommand.MESSAGE_EDIT_CCA_SUCCESS, editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        expectedModel.setCca(lastCca, editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(ccaEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(INDEX_FIRST_CCA, new EditCcaDescriptor());","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        Cca editedCca \u003d model.getFilteredCcaList().get(INDEX_FIRST_CCA.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(CcaEditCommand.MESSAGE_EDIT_CCA_SUCCESS, editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(ccaEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        showCcaAtIndex(model, INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        Cca ccaInFilteredList \u003d model.getFilteredCcaList().get(INDEX_FIRST_CCA.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        Cca editedCca \u003d new CcaBuilder(ccaInFilteredList).withName(VALID_CCA_NAME_NUSSO).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(INDEX_FIRST_CCA,","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"                new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_NUSSO).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(CcaEditCommand.MESSAGE_EDIT_CCA_SUCCESS, editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        expectedModel.setCca(model.getFilteredCcaList().get(0), editedCca);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(ccaEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"    public void execute_duplicateCcaUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"        Cca firstCca \u003d model.getFilteredCcaList().get(INDEX_FIRST_CCA.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder(firstCca).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(INDEX_SECOND_CCA, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(ccaEditCommand, model, CcaEditCommand.MESSAGE_DUPLICATE_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"    public void execute_duplicateCcaFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"        showCcaAtIndex(model, INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"        // edit cca in filtered list into a duplicate in address book","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        Cca ccaInList \u003d model.getAddressBook().getCcaList().get(INDEX_SECOND_CCA.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(INDEX_FIRST_CCA,","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"                new EditCcaDescriptorBuilder(ccaInList).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(ccaEditCommand, model, CcaEditCommand.MESSAGE_DUPLICATE_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidCcaIndexUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCcaList().size() + 1);","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_NUSSO).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(ccaEditCommand, model, Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidCcaIndexFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"        showCcaAtIndex(model, INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CCA;","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCcaList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand ccaEditCommand \u003d new CcaEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"                new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_NUSSO).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(ccaEditCommand, model, Messages.MESSAGE_INVALID_CCA_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"        final CcaEditCommand standardCommand \u003d new CcaEditCommand(INDEX_FIRST_CCA, DESC_TRACK);","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor copyDescriptor \u003d new EditCcaDescriptor(DESC_TRACK);","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand commandWithSameValues \u003d new CcaEditCommand(INDEX_FIRST_CCA, copyDescriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new CcaEditCommand(INDEX_SECOND_CCA, DESC_TRACK)));","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new CcaEditCommand(INDEX_FIRST_CCA, DESC_USKICK)));","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":171}},{"path":"src/test/java/seedu/address/logic/commands/cca/CcaFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.cca;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CCAS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.USC;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.USCOFFEE;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.getTypicalAddressBook;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"public class CcaFindCommandTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        CcaNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"                new CcaNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        CcaNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"                new CcaNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand findFirstCommand \u003d new CcaFindCommand(firstPredicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand findSecondCommand \u003d new CcaFindCommand(secondPredicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand findFirstCommandCopy \u003d new CcaFindCommand(firstPredicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // different cca -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    public void execute_zeroKeywords_noCcaFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CCAS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        CcaNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand command \u003d new CcaFindCommand(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        expectedModel.updateFilteredCcaList(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCcaList());","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    public void execute_oneKeyword_oneCcaFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CCAS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        CcaNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"nusso\");","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand command \u003d new CcaFindCommand(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        expectedModel.updateFilteredCcaList(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertEquals(Arrays.asList(NUSSO), model.getFilteredCcaList());","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    public void execute_multipleKeywords_multipleCcasFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CCAS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        CcaNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"nuSSo uscoFFee USC\");","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand command \u003d new CcaFindCommand(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        expectedModel.updateFilteredCcaList(predicate);","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        assertEquals(Arrays.asList(NUSSO, USCOFFEE, USC), model.getFilteredCcaList());","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    private CcaNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        return new CcaNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":90}},{"path":"src/test/java/seedu/address/logic/commands/person/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"weiquu":1,"-":56,"jovyntls":1}},{"path":"src/test/java/seedu/address/logic/commands/person/PersonAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":" * Contains integration tests (interaction with the Model) for {@code PersonAddCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class PersonAddCommandIntegrationTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(new PersonAddCommand(validPerson), model,","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"                String.format(PersonAddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(new PersonAddCommand(personInList), model, PersonAddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"weiquu":1,"-":39,"jovyntls":5}},{"path":"src/test/java/seedu/address/logic/commands/person/PersonAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"public class PersonAddCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PersonAddCommand(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        CommandResult commandResult \u003d new PersonAddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        assertEquals(String.format(PersonAddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        PersonAddCommand personAddCommand \u003d new PersonAddCommand(validPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"            PersonAddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e personAddCommand.execute(modelStub));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        PersonAddCommand addAliceCommand \u003d new PersonAddCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        PersonAddCommand addBobCommand \u003d new PersonAddCommand(bob);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        PersonAddCommand addAliceCommandCopy \u003d new PersonAddCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        public void addCca(Cca person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfPersons() {","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"        public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"        public void deleteCca(Cca target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"jovyntls"},"content":"        public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfCcas() {","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"jovyntls"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"jovyntls"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"justintanyf"},"content":"         * Enrols a person into a CCA","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"justintanyf"},"content":"         *","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"justintanyf"},"content":"         *  @param ccaToEnrolInto CCA to enrol into","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"justintanyf"},"content":"         * @param personToEnrol person enrolling into CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"justintanyf"},"content":"        public boolean enrolPersonIntoCca(Cca ccaToEnrolInto, Person personToEnrol) {","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"justintanyf"},"content":"         * Expels a person from a CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"justintanyf"},"content":"         *","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"justintanyf"},"content":"         * @param ccaToExpelFrom CCA to expel from","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"justintanyf"},"content":"         * @param personToExpel Person to be expelled from CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"justintanyf"},"content":"        public boolean expelPersonFromCca(Cca ccaToExpelFrom, Person personToExpel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"okyntary"},"content":"        public ObservableList\u003cReminder\u003e getFilteredReminderList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfReminders() {","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"okyntary"},"content":"        public void updateFilteredReminderList(Predicate\u003cReminder\u003e reminderPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"jovyntls"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForPersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForCcaList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForReminderList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"jivesh"},"content":"        public void resetAllFilteredLists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"weiquu"},"content":"        public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"weiquu"},"content":"        public void deleteReminder(Reminder target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"okyntary"},"content":"        public boolean addReminder(Reminder reminder, Cca ccaToAddInto) {","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"weiquu"},"content":"        public void snoozeReminder(Reminder target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"weiquu"},"content":"        public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":313,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfPersons() {","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"jovyntls"},"content":"            return 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"justintanyf":26,"jivesh":20,"weiquu":34,"-":184,"jovyntls":62,"okyntary":3}},{"path":"src/test/java/seedu/address/logic/commands/person/PersonDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":" * {@code PersonDeleteCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"public class PersonDeleteCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand personDeleteCommand \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand personDeleteCommand \u003d new PersonDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand personDeleteCommand \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        showAllPeople(expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand personDeleteCommand \u003d new PersonDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand deleteFirstCommand \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand deleteSecondCommand \u003d new PersonDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand deleteFirstCommandCopy \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     * Updates {@code model}\u0027s filtered list to show everyone.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    private void showAllPeople(Model model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"weiquu":5,"-":87,"jovyntls":15}},{"path":"src/test/java/seedu/address/logic/commands/person/PersonEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":" * Contains integration tests (interaction with the Model) and unit tests for PersonEditCommand.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"public class PersonEditCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(PersonEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"        assertCommandSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personEditCommand, model, PersonEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personEditCommand, model, PersonEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personEditCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"        assertCommandFailure(personEditCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"        final PersonEditCommand standardCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand commandWithSameValues \u003d new PersonEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"jovyntls"},"content":"        assertFalse(standardCommand.equals(new PersonEditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"        assertFalse(standardCommand.equals(new PersonEditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"weiquu":2,"-":145,"jovyntls":27}},{"path":"src/test/java/seedu/address/logic/commands/person/PersonFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":" * Contains integration tests (interaction with the Model) for {@code PersonFindCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"public class PersonFindCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand findFirstCommand \u003d new PersonFindCommand(firstPredicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand findSecondCommand \u003d new PersonFindCommand(secondPredicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand findFirstCommandCopy \u003d new PersonFindCommand(firstPredicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand command \u003d new PersonFindCommand(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand command \u003d new PersonFindCommand(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"weiquu":1,"-":75,"jovyntls":7}},{"path":"src/test/java/seedu/address/logic/commands/reminder/ReminderAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.UniqueCcaList;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"public class ReminderAddCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    public void constructor_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReminderAddCommand(null, null));","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public void execute_reminderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        ModelStubAcceptingReminderAdded modelStub \u003d new ModelStubAcceptingReminderAdded();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        Reminder validReminder \u003d new ReminderBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        CommandResult commandResult \u003d new ReminderAddCommand(validReminder, TypicalIndexes.INDEX_FIRST_CCA)","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"                .execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertEquals(String.format(ReminderAddCommand.MESSAGE_SUCCESS, validReminder),","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        assertEquals(Arrays.asList(validReminder), modelStub.remindersAdded);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    public void execute_duplicateReminder_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        Reminder validReminder \u003d new ReminderBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        ReminderAddCommand reminderAddCommand \u003d new ReminderAddCommand(validReminder, TypicalIndexes.INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        ModelStub modelStub \u003d new ModelStubWithReminder(validReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"                ReminderAddCommand.MESSAGE_DUPLICATE_REMINDER, () -\u003e reminderAddCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        Reminder reminder1 \u003d new ReminderBuilder().withName(\"reminder1\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        Reminder reminder2 \u003d new ReminderBuilder().withName(\"reminder2\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        ReminderAddCommand addReminder1Command \u003d new ReminderAddCommand(reminder1, TypicalIndexes.INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        ReminderAddCommand addReminder2Command \u003d new ReminderAddCommand(reminder2, TypicalIndexes.INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertTrue(addReminder1Command.equals(addReminder1Command));","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        ReminderAddCommand addReminder1CommandCopy \u003d new ReminderAddCommand(reminder1, TypicalIndexes.INDEX_FIRST_CCA);","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        assertTrue(addReminder1Command.equals(addReminder1CommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        assertFalse(addReminder1Command.equals(1));","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        assertFalse(addReminder1Command.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        assertFalse(addReminder1Command.equals(addReminder2Command));","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"        public void addCca(Cca person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfPersons() {","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"jovyntls"},"content":"        public boolean hasCca(Cca cca) {","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"jovyntls"},"content":"        public void deleteCca(Cca target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"jovyntls"},"content":"        public void setCca(Cca target, Cca editedCca) {","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfCcas() {","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"jovyntls"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"justintanyf"},"content":"         * Enrols a person into a CCA","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"justintanyf"},"content":"         *","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"justintanyf"},"content":"         *  @param ccaToEnrolInto CCA to enrol into","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"justintanyf"},"content":"         * @param personToEnrol person enrolling into CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"justintanyf"},"content":"        public boolean enrolPersonIntoCca(Cca ccaToEnrolInto, Person personToEnrol) {","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"justintanyf"},"content":"        /**","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"justintanyf"},"content":"         * Expels a person from a CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"justintanyf"},"content":"         *","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"justintanyf"},"content":"         * @param ccaToExpelFrom CCA to expel from","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"justintanyf"},"content":"         * @param personToExpel Person to be expelled from CCA","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"justintanyf"},"content":"         */","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"justintanyf"},"content":"        public boolean expelPersonFromCca(Cca ccaToExpelFrom, Person personToExpel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"justintanyf"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"okyntary"},"content":"        public ObservableList\u003cReminder\u003e getFilteredReminderList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"justintanyf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"jovyntls"},"content":"        public int getNumberOfReminders() {","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"jovyntls"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"okyntary"},"content":"        public void updateFilteredReminderList(Predicate\u003cReminder\u003e reminderPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForPersonList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForCcaList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"jivesh"},"content":"        public void resetFiltersForReminderList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"jivesh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"jivesh"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"jivesh"},"content":"        public void resetAllFilteredLists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"jivesh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"weiquu"},"content":"        public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"weiquu"},"content":"        public void deleteReminder(Reminder target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"okyntary"},"content":"        public boolean addReminder(Reminder reminder, Cca ccaToAddInto) {","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"weiquu"},"content":"        public void snoozeReminder(Reminder target) {","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"weiquu"},"content":"        public void setReminder(Reminder target, Reminder editedReminder) {","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"weiquu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"weiquu"},"content":"     * A Model stub that contains a single reminder.","lastModifiedDate":"2021-11-03"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"weiquu"},"content":"    private class ModelStubWithReminder extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"weiquu"},"content":"        private final Reminder reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"weiquu"},"content":"        ModelStubWithReminder(Reminder reminder) {","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"weiquu"},"content":"            requireNonNull(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":291,"author":{"gitId":"weiquu"},"content":"            this.reminder \u003d reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"weiquu"},"content":"        public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"weiquu"},"content":"            requireNonNull(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":297,"author":{"gitId":"weiquu"},"content":"            return this.reminder.isSameReminder(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":299,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":300,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"weiquu"},"content":"        public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":302,"author":{"gitId":"weiquu"},"content":"            UniqueCcaList ccas \u003d new UniqueCcaList();","lastModifiedDate":"2021-11-03"},{"lineNumber":303,"author":{"gitId":"weiquu"},"content":"            CcaBuilder ccaBuilder \u003d new CcaBuilder();","lastModifiedDate":"2021-11-03"},{"lineNumber":304,"author":{"gitId":"weiquu"},"content":"            ccas.add(ccaBuilder.build());","lastModifiedDate":"2021-11-03"},{"lineNumber":305,"author":{"gitId":"weiquu"},"content":"            return ccas.asUnmodifiableObservableList();","lastModifiedDate":"2021-11-03"},{"lineNumber":306,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":307,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":308,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":309,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":310,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-03"},{"lineNumber":311,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":313,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":314,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredReminderList(Predicate\u003cReminder\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":315,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-03"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":322,"author":{"gitId":"weiquu"},"content":"    private class ModelStubAcceptingReminderAdded extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":323,"author":{"gitId":"weiquu"},"content":"        final ArrayList\u003cReminder\u003e remindersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":326,"author":{"gitId":"weiquu"},"content":"        public boolean hasReminder(Reminder reminder) {","lastModifiedDate":"2021-11-03"},{"lineNumber":327,"author":{"gitId":"weiquu"},"content":"            requireNonNull(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":328,"author":{"gitId":"weiquu"},"content":"            return remindersAdded.stream().anyMatch(reminder::isSameReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":332,"author":{"gitId":"weiquu"},"content":"        public boolean addReminder(Reminder reminder, Cca ccaToAddInto) {","lastModifiedDate":"2021-11-03"},{"lineNumber":333,"author":{"gitId":"weiquu"},"content":"            requireAllNonNull(reminder, ccaToAddInto);","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"weiquu"},"content":"            remindersAdded.add(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":335,"author":{"gitId":"weiquu"},"content":"            return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":338,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"weiquu"},"content":"        public int getNumberOfReminders() {","lastModifiedDate":"2021-11-03"},{"lineNumber":340,"author":{"gitId":"jovyntls"},"content":"            return 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":344,"author":{"gitId":"weiquu"},"content":"        public ObservableList\u003cCca\u003e getFilteredCcaList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":345,"author":{"gitId":"weiquu"},"content":"            UniqueCcaList ccas \u003d new UniqueCcaList();","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"weiquu"},"content":"            CcaBuilder ccaBuilder \u003d new CcaBuilder();","lastModifiedDate":"2021-11-03"},{"lineNumber":347,"author":{"gitId":"weiquu"},"content":"            ccas.add(ccaBuilder.build());","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"weiquu"},"content":"            return ccas.asUnmodifiableObservableList();","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":350,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":357,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredCcaList(Predicate\u003cCca\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":358,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-03"},{"lineNumber":359,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":360,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":361,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":362,"author":{"gitId":"weiquu"},"content":"        public void updateFilteredReminderList(Predicate\u003cReminder\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":363,"author":{"gitId":"weiquu"},"content":"            // do nothing","lastModifiedDate":"2021-11-03"},{"lineNumber":364,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"justintanyf":26,"jivesh":20,"weiquu":124,"-":143,"jovyntls":55,"okyntary":3}},{"path":"src/test/java/seedu/address/logic/commands/reminder/ReminderDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showReminderAtIndex;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.getTypicalAddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":" * {@code ReminderDeleteCommand}.","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"public class ReminderDeleteCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        Reminder reminderToDelete \u003d model.getFilteredReminderList().get(INDEX_FIRST_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand reminderDeleteCommand \u003d new ReminderDeleteCommand(INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderDeleteCommand.MESSAGE_DELETE_REMINDER_SUCCESS, reminderToDelete);","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        expectedModel.deleteReminder(reminderToDelete);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReminderList().size() + 1);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand reminderDeleteCommand \u003d new ReminderDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderDeleteCommand, model, Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        showReminderAtIndex(model, INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        Reminder reminderToDelete \u003d model.getFilteredReminderList().get(INDEX_FIRST_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand reminderDeleteCommand \u003d new ReminderDeleteCommand(INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderDeleteCommand.MESSAGE_DELETE_REMINDER_SUCCESS, reminderToDelete);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        expectedModel.deleteReminder(reminderToDelete);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        showNoReminder(expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        showReminderAtIndex(model, INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getReminderList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand reminderDeleteCommand \u003d new ReminderDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderDeleteCommand, model, Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand deleteFirstCommand \u003d new ReminderDeleteCommand(INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand deleteSecondCommand \u003d new ReminderDeleteCommand(INDEX_SECOND_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand deleteFirstCommandCopy \u003d new ReminderDeleteCommand(INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        // different reminder -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    private void showNoReminder(Model model) {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        model.updateFilteredReminderList(p -\u003e false);","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"        assertTrue(model.getFilteredReminderList().isEmpty());","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":109}},{"path":"src/test/java/seedu/address/logic/commands/reminder/ReminderEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEETING;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_REHEARSAL;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUM_TIME_PERIOD_10;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_MEETING;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_PROJECT;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_REHEARSAL;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_PERIOD_DAY;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showReminderAtIndex;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.getTypicalAddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditReminderDescriptorBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ReminderEditCommand.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"public class ReminderEditCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        Reminder editedReminder \u003d new ReminderBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder(editedReminder).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderEditCommand.MESSAGE_EDIT_REMINDER_SUCCESS, editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        expectedModel.setReminder(model.getFilteredReminderList().get(0), editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        Index indexLastReminder \u003d Index.fromOneBased(model.getFilteredReminderList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        Reminder lastReminder \u003d model.getFilteredReminderList().get(indexLastReminder.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        ReminderBuilder reminderInList \u003d new ReminderBuilder(lastReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        Reminder editedReminder \u003d reminderInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"                .withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_10).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"                .withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_10).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(indexLastReminder, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderEditCommand.MESSAGE_EDIT_REMINDER_SUCCESS, editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        expectedModel.setReminder(lastReminder, editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER,","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"                new EditReminderDescriptor());","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        Reminder editedReminder \u003d model.getFilteredReminderList().get(INDEX_FIRST_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderEditCommand.MESSAGE_EDIT_REMINDER_SUCCESS, editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        showReminderAtIndex(model, INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        Reminder reminderInFilteredList \u003d model.getFilteredReminderList().get(INDEX_FIRST_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        Reminder editedReminder \u003d new ReminderBuilder(reminderInFilteredList)","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"                .withName(VALID_REMINDER_NAME_PROJECT).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER,","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"                new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_PROJECT).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(ReminderEditCommand.MESSAGE_EDIT_REMINDER_SUCCESS, editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        expectedModel.setReminder(model.getFilteredReminderList().get(0), editedReminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(reminderEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    public void execute_duplicateReminderUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"        Reminder firstReminder \u003d model.getFilteredReminderList().get(INDEX_FIRST_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder(firstReminder).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(INDEX_SECOND_REMINDER, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderEditCommand, model, ReminderEditCommand.MESSAGE_DUPLICATE_EDIT);","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"    public void execute_duplicateReminderFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        showReminderAtIndex(model, INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"        // edit reminder in filtered list into a duplicate in address book","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"        Reminder reminderInList \u003d model.getAddressBook().getReminderList().get(INDEX_SECOND_REMINDER.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER,","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"                new EditReminderDescriptorBuilder(reminderInList).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderEditCommand, model, ReminderEditCommand.MESSAGE_DUPLICATE_EDIT);","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidReminderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReminderList().size() + 1);","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder()","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"                .withName(VALID_REMINDER_NAME_REHEARSAL).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderEditCommand, model, Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"    public void execute_invalidReminderIndexFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"        showReminderAtIndex(model, INDEX_FIRST_REMINDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getReminderList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand reminderEditCommand \u003d new ReminderEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"                new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_MEETING).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"        assertCommandFailure(reminderEditCommand, model, Messages.MESSAGE_INVALID_REMINDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"        final ReminderEditCommand standardCommand \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER, DESC_REHEARSAL);","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor copyDescriptor \u003d new EditReminderDescriptor(DESC_REHEARSAL);","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand commandWithSameValues \u003d new ReminderEditCommand(INDEX_FIRST_REMINDER, copyDescriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new ReminderEditCommand(INDEX_SECOND_REMINDER, DESC_REHEARSAL)));","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"        assertFalse(standardCommand.equals(new ReminderEditCommand(INDEX_FIRST_REMINDER, DESC_MEETING)));","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":178}},{"path":"src/test/java/seedu/address/logic/commands/reminder/ReminderFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.commands.reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_REMINDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CHRISTMAS;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.MEETING;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.getTypicalAddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":" * Contains integration tests (interaction with the Model) for {@code ReminderFindCommand}.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"public class ReminderFindCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        ReminderNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"                new ReminderNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        ReminderNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"                new ReminderNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand findFirstCommand \u003d new ReminderFindCommand(firstPredicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand findSecondCommand \u003d new ReminderFindCommand(secondPredicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand findFirstCommandCopy \u003d new ReminderFindCommand(firstPredicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        // different reminder -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    public void execute_zeroKeywords_noReminderFound() {","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        ReminderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand command \u003d new ReminderFindCommand(predicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        expectedModel.updateFilteredReminderList(predicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredReminderList());","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    public void execute_multipleKeywords_multipleRemindersFound() {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        ReminderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Holiday Class Meeting\");","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand command \u003d new ReminderFindCommand(predicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        expectedModel.updateFilteredReminderList(predicate);","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        assertEquals(Arrays.asList(MEETING, CLASS, CHRISTMAS), model.getFilteredReminderList());","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    private ReminderNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        return new ReminderNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":83}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.GreetCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaAddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaDeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEnrolCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaExpelCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaFindCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonFindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderAddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderDeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderFindCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderSnoozeCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.CcaUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditCcaDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditReminderDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    ///// person","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_personAdd() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        PersonAddCommand command \u003d (PersonAddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        assertEquals(new PersonAddCommand(person), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_personDelete() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        PersonDeleteCommand command \u003d (PersonDeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"                PersonDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        assertEquals(new PersonDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_personEdit() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand command \u003d (PersonEditCommand) parser.parseCommand(PersonEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        assertEquals(new PersonEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_personFind() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        PersonFindCommand command \u003d (PersonFindCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"                PersonFindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        assertEquals(new PersonFindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    ///// cca","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaAdd() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"        Cca cca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        CcaAddCommand command \u003d (CcaAddCommand) parser.parseCommand(CcaUtil.getAddCommand(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaAddCommand(cca), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaDelete() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"        CcaDeleteCommand command \u003d (CcaDeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"                CcaDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CCA.getOneBased());","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaDeleteCommand(INDEX_FIRST_CCA), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaEdit() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"        Cca cca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder(cca).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand command \u003d (CcaEditCommand) parser.parseCommand(CcaEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"                + INDEX_FIRST_CCA.getOneBased() + \" \" + CcaUtil.getEditCcaDescriptorDetails(descriptor));","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaEditCommand(INDEX_FIRST_CCA, descriptor), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaEnrol() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        CcaEnrolCommand command \u003d (CcaEnrolCommand) parser.parseCommand(CcaUtil.getEnrolCommand(INDEX_FIRST_CCA,","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"                INDEX_FIRST_PERSON));","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaEnrolCommand(INDEX_FIRST_CCA, INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaExpel() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"        CcaExpelCommand command \u003d (CcaExpelCommand) parser.parseCommand(CcaUtil.getExpelCommand(INDEX_FIRST_CCA,","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"                INDEX_FIRST_PERSON));","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaExpelCommand(INDEX_FIRST_CCA, INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_ccaFind() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand command \u003d (CcaFindCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"                CcaFindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"        assertEquals(new CcaFindCommand(new CcaNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"    ///// reminder","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_reminderAdd() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new ReminderBuilder().build();","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"        reminder.setCcaName(\"\");","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"        ReminderAddCommand command \u003d (ReminderAddCommand) parser.parseCommand(ReminderUtil.getAddCommand(reminder));","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"        assertEquals(new ReminderAddCommand(reminder, INDEX_FIRST_CCA), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_reminderDelete() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"        ReminderDeleteCommand command \u003d (ReminderDeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"                ReminderDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_REMINDER.getOneBased());","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"        assertEquals(new ReminderDeleteCommand(INDEX_FIRST_REMINDER), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_reminderEdit() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new ReminderBuilder().build();","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        reminder.setCcaName(\"\");","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder(reminder).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        descriptor.setCca(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand command \u003d (ReminderEditCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"                ReminderEditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_REMINDER.getOneBased() + \" \"","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"                + ReminderUtil.getEditReminderDescriptorDetails(descriptor));","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        assertEquals(new ReminderEditCommand(INDEX_FIRST_REMINDER, descriptor), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_reminderFind() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand command \u003d (ReminderFindCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"                ReminderFindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"                + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"        assertEquals(new ReminderFindCommand(new ReminderNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_reminderSnooze() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"        ReminderSnoozeCommand command \u003d (ReminderSnoozeCommand) parser.parseCommand(","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"                ReminderSnoozeCommand.COMMAND_WORD + \" \" + INDEX_FIRST_REMINDER.getOneBased());","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"        assertEquals(new ReminderSnoozeCommand(INDEX_FIRST_REMINDER), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"    ///// general","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"    public void parseCommand_greet() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"        assertTrue(parser.parseCommand(GreetCommand.COMMAND_WORD) instanceof GreetCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"        assertTrue(parser.parseCommand(GreetCommand.COMMAND_WORD + \" 3\") instanceof GreetCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"weiquu":140,"-":78,"jovyntls":12}},{"path":"src/test/java/seedu/address/logic/parser/cca/CcaAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CCA_NAME_DESC_NUSSO;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CCA_NAME_DESC_USKICK;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CCA_NAME_DESC;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalCcas.USKICK;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.cca.CcaAddCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"public class CcaAddCommandParserTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    private CcaAddCommandParser parser \u003d new CcaAddCommandParser();","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        Cca expectedCca \u003d new CcaBuilder(USKICK).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CCA_NAME_DESC_USKICK","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"                + TAG_DESC_FRIEND, new CcaAddCommand(expectedCca));","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, CCA_NAME_DESC_NUSSO + CCA_NAME_DESC_USKICK","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"                + TAG_DESC_FRIEND, new CcaAddCommand(expectedCca));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        Cca expectedCcaMultipleTags \u003d new CcaBuilder(USKICK).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, CCA_NAME_DESC_USKICK","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new CcaAddCommand(expectedCcaMultipleTags));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        // zero tags","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        Cca expectedCca \u003d new CcaBuilder(NUSSO).withTags().build();","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, CCA_NAME_DESC_NUSSO,","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"                new CcaAddCommand(expectedCca));","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, VALID_CCA_NAME_TRACK,","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, VALID_CCA_NAME_TRACK,","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        // invalid CCA name","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, INVALID_CCA_NAME_DESC","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        // invalid tag","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, CCA_NAME_DESC_USKICK","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, INVALID_CCA_NAME_DESC + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CCA_NAME_DESC_USKICK","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"weiquu":1,"jovyntls":89}},{"path":"src/test/java/seedu/address/logic/parser/cca/CcaDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.cca.CcaDeleteCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * outside of the CcaDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" * same path through the CcaDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class CcaDeleteCommandParserTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    private CcaDeleteCommandParser parser \u003d new CcaDeleteCommandParser();","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, \"1\", new CcaDeleteCommand(INDEX_FIRST_CCA));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"                CcaDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"weiquu":1,"-":23,"jovyntls":9}},{"path":"src/test/java/seedu/address/logic/parser/cca/CcaEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CCA_NAME_DESC_NUSSO;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CCA_NAME_DESC_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CCA_NAME_DESC_USKICK;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CCA_NAME_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_MUSIC;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SPORTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_USP;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_NUSSO;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_USKICK;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MUSIC;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SPORTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_USP;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditCcaDescriptorBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"public class CcaEditCommandParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CcaEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    private CcaEditCommandParser parser \u003d new CcaEditCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        // no index specified","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, VALID_CCA_NAME_NUSSO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        // no field specified","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\", CcaEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // no index and no field specified","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        // negative index","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"-5\" + CCA_NAME_DESC_NUSSO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        // zero index","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"0\" + CCA_NAME_DESC_NUSSO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CCA_NAME_DESC, CcaName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        // invalid name followed by valid tag","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CCA_NAME_DESC + TAG_DESC_MUSIC, CcaName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        // valid name followed by invalid name. The test case for invalid name followed by valid name","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + CCA_NAME_DESC_NUSSO + INVALID_CCA_NAME_DESC,","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"                CcaName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Cca} being edited,","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_MUSIC + TAG_DESC_USP + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_MUSIC + TAG_EMPTY + TAG_DESC_USP, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_MUSIC + TAG_DESC_USP, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CCA_NAME_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"                CcaName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_SECOND_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CCA_NAME_DESC_NUSSO + TAG_DESC_MUSIC;","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_NUSSO)","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"                .withTags(VALID_TAG_MUSIC).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"        // name","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_THIRD_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CCA_NAME_DESC_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_TRACK).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        // one tag","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_MUSIC;","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditCcaDescriptorBuilder().withTags(VALID_TAG_MUSIC).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"        // multiple tags","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_MUSIC + TAG_DESC_USP + TAG_DESC_SPORTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditCcaDescriptorBuilder().withTags(VALID_TAG_MUSIC, VALID_TAG_USP, VALID_TAG_SPORTS).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CCA_NAME_DESC_TRACK + TAG_DESC_SPORTS + CCA_NAME_DESC_TRACK","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"                + TAG_DESC_SPORTS + CCA_NAME_DESC_USKICK + TAG_DESC_USP;","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_USKICK)","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"                .withTags(VALID_TAG_SPORTS, VALID_TAG_USP).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"        // no other valid values specified","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_CCA_NAME_DESC + CCA_NAME_DESC_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_TRACK).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"        // other valid values specified","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_SPORTS + INVALID_CCA_NAME_DESC + TAG_DESC_USP","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"                + CCA_NAME_DESC_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditCcaDescriptorBuilder().withName(VALID_CCA_NAME_TRACK)","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"                .withTags(VALID_TAG_SPORTS, VALID_TAG_USP).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_THIRD_CCA;","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        EditCcaDescriptor descriptor \u003d new EditCcaDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        CcaEditCommand expectedCommand \u003d new CcaEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weiquu":168}},{"path":"src/test/java/seedu/address/logic/parser/cca/CcaFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.cca;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaFindCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.CcaNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"public class CcaFindCommandParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    private CcaFindCommandParser parser \u003d new CcaFindCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"                CcaFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        CcaFindCommand expectedCcaFindCommand \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"                new CcaFindCommand(new CcaNameContainsKeywordsPredicate(Arrays.asList(\"NUSSO\", \"Track\")));","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, \"NUSSO Track\", expectedCcaFindCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, \" \\n NUSSO \\n \\t Track  \\t\", expectedCcaFindCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weiquu":34}},{"path":"src/test/java/seedu/address/logic/parser/person/PersonAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"public class PersonAddCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    private PersonAddCommandParser parser \u003d new PersonAddCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new PersonAddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"                new PersonAddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"weiquu":1,"-":128,"jovyntls":12}},{"path":"src/test/java/seedu/address/logic/parser/person/PersonDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * outside of the PersonDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":" * same path through the PersonDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"public class PersonDeleteCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"    private PersonDeleteCommandParser parser \u003d new PersonDeleteCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, \"1\", new PersonDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"            PersonDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"weiquu":1,"-":24,"jovyntls":8}},{"path":"src/test/java/seedu/address/logic/parser/person/PersonEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"public class PersonEditCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    private PersonEditCommandParser parser \u003d new PersonEditCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, \"1\", PersonEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"jovyntls"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"jovyntls"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"weiquu":1,"-":193,"jovyntls":17}},{"path":"src/test/java/seedu/address/logic/parser/person/PersonFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonFindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"public class PersonFindCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    private PersonFindCommandParser parser \u003d new PersonFindCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"            PersonFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        PersonFindCommand expectedPersonFindCommand \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"                new PersonFindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedPersonFindCommand);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedPersonFindCommand);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"weiquu":1,"-":25,"jovyntls":9}},{"path":"src/test/java/seedu/address/logic/parser/reminder/ReminderAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FREQUENCY_DESC;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OCCURRENCES_DESC;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMINDER_NAME_DESC;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DATE_DESC;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_CID_FIRST_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_CID_SECOND_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_FREQUENCY_DESC_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_FREQUENCY_DESC_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_NAME_DESC_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_NAME_DESC_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_OCCURRENCES_DESC_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_OCCURRENCES_DESC_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_START_DATE_DESC_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_START_DATE_DESC_MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CID_FIRST_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREQUENCY_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCURRENCES_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CCA;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderAddCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"public class ReminderAddCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    private ReminderAddCommandParser parser \u003d new ReminderAddCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        Reminder expectedReminder \u003d new ReminderBuilder(CLASS).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"                new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        // multiple cids - last cid accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_SECOND_CCA + REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_MEETING","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"                + REMINDER_NAME_DESC_CLASS + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_MEETING","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"                + REMINDER_NAME_DESC_CLASS + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        // multiple phones - last start date accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_MEETING + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        // multiple emails - last frequency accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_MEETING + REMINDER_FREQUENCY_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        // multiple addresses - last occurrences accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_MEETING","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        // no frequency and occurrences","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        Reminder expectedReminder \u003d new ReminderBuilder(CLASS).withFrequency(Frequency.ONE_OFF, 1)","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"                .withOccurrence(1).withCcaName(\"\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS, new ReminderAddCommand(expectedReminder, INDEX_FIRST_CCA));","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        // missing cid prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, VALID_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS, expectedMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        // missing name prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + VALID_REMINDER_NAME_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS, expectedMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        // missing start date prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"                + VALID_START_DATE_CLASS, expectedMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        // missing frequency prefix with occurrence prefix present","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + VALID_FREQUENCY_CLASS + REMINDER_FREQUENCY_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderAddCommand.MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE));","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"        // missing occurrence prefix with frequency prefix present","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + VALID_OCCURRENCES_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderAddCommand.MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE));","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        // all prefixes missing","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, VALID_CID_FIRST_CCA + VALID_REMINDER_NAME_CLASS + VALID_START_DATE_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"                + VALID_FREQUENCY_CLASS + VALID_OCCURRENCES_CLASS, expectedMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"        // invalid name","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + INVALID_REMINDER_NAME_DESC","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"                ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"        // invalid start date","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"                + INVALID_START_DATE_DESC + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"                ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"        // invalid frequency","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + INVALID_FREQUENCY_DESC + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"                ReminderFrequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"        // invalid occurrences","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + INVALID_OCCURRENCES_DESC,","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"                ReminderOccurrence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, REMINDER_CID_FIRST_CCA + INVALID_REMINDER_NAME_DESC","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"                + INVALID_START_DATE_DESC + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"                ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"        // non-empty preamble","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + REMINDER_CID_FIRST_CCA + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":151}},{"path":"src/test/java/seedu/address/logic/parser/reminder/ReminderDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderDeleteCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":" * outside of the ReminderDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":" * same path through the ReminderDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"public class ReminderDeleteCommandParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    private ReminderDeleteCommandParser parser \u003d new ReminderDeleteCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, \"1\", new ReminderDeleteCommand(INDEX_FIRST_REMINDER));","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"                ReminderDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weiquu":32}},{"path":"src/test/java/seedu/address/logic/parser/reminder/ReminderEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FREQUENCY_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OCCURRENCES_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMINDER_NAME_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DATE_DESC;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_FREQUENCY_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_FREQUENCY_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_NAME_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_NAME_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_OCCURRENCES_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_OCCURRENCES_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_START_DATE_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMINDER_START_DATE_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUM_TIME_PERIOD_1;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUM_TIME_PERIOD_2;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCURENCES_30;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCURRENCES_50;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_PROJECT;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_PERIOD_DAY;","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_PERIOD_WEEK;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.EditReminderDescriptorBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"public class ReminderEditCommandParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    private static final String MESSAGE_MISSING_ONE_OF_FREQUENCY_OCCURRENCE \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderEditCommand.MESSAGE_ONE_OF_FREQUENCY_OCCURRENCE);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    private ReminderEditCommandParser parser \u003d new ReminderEditCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        // no index specified","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, VALID_REMINDER_NAME_PROJECT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        // no index and no field specified","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        // negative index","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"-5\" + VALID_REMINDER_NAME_PROJECT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        // zero index","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"0\" + VALID_REMINDER_NAME_PROJECT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        // invalid name","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMINDER_NAME_DESC, ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"        // invalid start date","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_DATE_DESC, ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        // invalid frequency with valid occurrence","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FREQUENCY_DESC + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"                ReminderFrequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"        // invalid occurrence with valid frequency","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + REMINDER_FREQUENCY_DESC_CLASS + INVALID_OCCURRENCES_DESC,","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"                ReminderOccurrence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"        // invalid name followed by valid start date","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMINDER_NAME_DESC + VALID_START_DATE_CLASS,","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"                ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"        // valid start date followed by invalid start date. The test case for invalid start date followed by valid","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        // start date is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + REMINDER_START_DATE_DESC_CLASS + INVALID_START_DATE_DESC,","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"                ReminderStartDate.PARSE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMINDER_NAME_DESC + INVALID_START_DATE_DESC","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"                + INVALID_FREQUENCY_DESC + INVALID_OCCURRENCES_DESC, ReminderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"    public void parser_oneOfFrequencyOrOccurrence_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"        // frequency without occurrence","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + REMINDER_FREQUENCY_DESC_CLASS,","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"                MESSAGE_MISSING_ONE_OF_FREQUENCY_OCCURRENCE);","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        // occurrence without frequency","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"1\" + REMINDER_OCCURRENCES_DESC_CLASS,","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"                MESSAGE_MISSING_ONE_OF_FREQUENCY_OCCURRENCE);","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_SECOND_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + REMINDER_NAME_DESC_CLASS + REMINDER_START_DATE_DESC_CLASS","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"                + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_CLASS)","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"                .withStartDate(getReminderStartDate(VALID_START_DATE_CLASS))","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"                .withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_2).withOccurrence(VALID_OCCURRENCES_50)","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"        // name and start date","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + REMINDER_NAME_DESC_MEETING + REMINDER_START_DATE_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_MEETING)","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"                .withStartDate(getReminderStartDate(VALID_START_DATE_MEETING)).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"        // frequency and occurrence","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditReminderDescriptorBuilder().withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_2)","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"                .withOccurrence(VALID_OCCURRENCES_50).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"        // name","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_THIRD_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + REMINDER_NAME_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder()","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"                .withName(VALID_REMINDER_NAME_MEETING).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"        // start date","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + REMINDER_START_DATE_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditReminderDescriptorBuilder().withStartDate(getReminderStartDate(VALID_START_DATE_MEETING))","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + REMINDER_NAME_DESC_CLASS + REMINDER_START_DATE_DESC_CLASS","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"                + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS + REMINDER_NAME_DESC_CLASS","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"                + REMINDER_START_DATE_DESC_CLASS + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"                + REMINDER_NAME_DESC_MEETING + REMINDER_START_DATE_DESC_MEETING + REMINDER_FREQUENCY_DESC_MEETING","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"weiquu"},"content":"                + REMINDER_OCCURRENCES_DESC_MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_MEETING)","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"                .withStartDate(getReminderStartDate(VALID_START_DATE_MEETING))","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"                .withFrequency(VALID_TIME_PERIOD_WEEK, VALID_NUM_TIME_PERIOD_1).withOccurrence(VALID_OCCURENCES_30)","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"        // no other valid values specified","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"weiquu"},"content":"        Index targetIndex \u003d INDEX_FIRST_REMINDER;","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_REMINDER_NAME_DESC + REMINDER_NAME_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"weiquu"},"content":"        EditReminderDescriptor descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_CLASS)","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"        ReminderEditCommand expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"        // other valid values specified","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"        userInput \u003d targetIndex.getOneBased() + REMINDER_NAME_DESC_CLASS + INVALID_START_DATE_DESC","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"                + REMINDER_FREQUENCY_DESC_CLASS + REMINDER_OCCURRENCES_DESC_CLASS + REMINDER_START_DATE_DESC_CLASS;","lastModifiedDate":"2021-11-05"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditReminderDescriptorBuilder().withName(VALID_REMINDER_NAME_CLASS)","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"weiquu"},"content":"                .withStartDate(getReminderStartDate(VALID_START_DATE_CLASS))","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"weiquu"},"content":"                .withFrequency(VALID_TIME_PERIOD_DAY, VALID_NUM_TIME_PERIOD_2).withOccurrence(VALID_OCCURRENCES_50)","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"weiquu"},"content":"        expectedCommand \u003d new ReminderEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"weiquu"},"content":"    private Date getReminderStartDate(String dateString) {","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"weiquu"},"content":"        Date startDate \u003d new Date();","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"weiquu"},"content":"            startDate \u003d ReminderStartDate.PARSE_INPUT_DATE_FORMAT.parse(dateString);","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"weiquu"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"weiquu"},"content":"            assertTrue(false);","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"weiquu"},"content":"        return startDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weiquu":223}},{"path":"src/test/java/seedu/address/logic/parser/reminder/ReminderFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.logic.parser.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderFindCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"public class ReminderFindCommandParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    private ReminderFindCommandParser parser \u003d new ReminderFindCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"                ReminderFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        ReminderFindCommand expectedReminderFindCommand \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"                new ReminderFindCommand(new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"Meeting\", \"Class\")));","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, \"Meeting Class\", expectedReminderFindCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        assertParseSuccess(parser, \" \\n Meeting \\n \\t Class  \\t\", expectedReminderFindCommand);","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weiquu":34}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"okyntary"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"okyntary"},"content":"    public void hasCca_ccaWithSameNameFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"        addressBook.addCca(NUSSO);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"okyntary"},"content":"        Cca editedCca \u003d new CcaBuilder(NUSSO).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"okyntary"},"content":"        assertTrue(addressBook.hasCca(editedCca));","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"        private final ObservableList\u003cCca\u003e ccas \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"        private final ObservableList\u003cReminder\u003e reminders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"            // TODO: add something for CCAs?","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        public ObservableList\u003cCca\u003e getCcaList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"            return ccas;","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"        public ObservableList\u003cReminder\u003e getReminderList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"            return reminders;","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"weiquu":7,"-":102,"jovyntls":8,"okyntary":9}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.USC;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalCcas.USCOFFEE;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CHRISTMAS;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CONCERT;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.exceptions.CcaNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.exceptions.DuplicateCcaException;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.exceptions.DuplicateReminderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.exceptions.ReminderNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    ///// tests for person","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"    public void addPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addPerson(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"    public void addPerson_personNotInAddressBook_addsPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"    public void addPerson_personInAddressBook_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e modelManager.addPerson(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"    public void deletePerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deletePerson(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"    public void deletePerson_personNotInAddressBook_throwsPersonNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.deletePerson(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"    public void deletePerson_personInAddressBook_deletesPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasPerson(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"        modelManager.deletePerson(BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasPerson(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(null, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(ALICE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"    public void setPerson_targetPersonNotInAddressBook_throwsPersonNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.setPerson(ALICE, BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"    public void setPerson_targetPersonAndEditedPersonInAddressBook_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e modelManager.setPerson(ALICE, BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"    public void setPerson_targetPersonInAddressBookAndEditedPersonSameAsTargetPerson_setsPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"        modelManager.setPerson(ALICE, ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"    public void setPerson_targetPersonInAddressBookAndEditedPersonDifferentFromTargetPerson_setsPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"        modelManager.setPerson(ALICE, BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasPerson(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"    ///// tests for cca","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"weiquu"},"content":"    public void hasCca_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCca(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"weiquu"},"content":"    public void hasCca_ccaNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasCca(USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"weiquu"},"content":"    public void hasCca_ccaInAddressBook_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasCca(USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"weiquu"},"content":"    public void addCca_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addCca(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"weiquu"},"content":"    public void addCca_ccaNotInAddressBook_addsCca() {","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasCca(USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"weiquu"},"content":"    public void addCca_ccaInAddressBook_throwsDuplicateCcaException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicateCcaException.class, () -\u003e modelManager.addCca(USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"weiquu"},"content":"    public void deleteCca_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteCca(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"weiquu"},"content":"    public void deleteCca_ccaNotInAddressBook_throwsCcaNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"weiquu"},"content":"        assertThrows(CcaNotFoundException.class, () -\u003e modelManager.deleteCca(USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"weiquu"},"content":"    public void deleteCca_ccaInAddressBook_deletesCca() {","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USC);","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasCca(USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"weiquu"},"content":"        modelManager.deleteCca(USC);","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasCca(USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"weiquu"},"content":"    public void setCca_nullTargetCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCca(null, USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"weiquu"},"content":"    public void setCca_nullEditedCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCca(USCOFFEE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"weiquu"},"content":"    public void setCca_targetCcaNotInAddressBook_throwsCcaNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"weiquu"},"content":"        assertThrows(CcaNotFoundException.class, () -\u003e modelManager.setCca(USCOFFEE, USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"weiquu"},"content":"    public void setCca_targetCcaAndEditedCcaInAddressBook_throwsDuplicateCcaException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USC);","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicateCcaException.class, () -\u003e modelManager.setCca(USCOFFEE, USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"weiquu"},"content":"    public void setCca_targetCcaInAddressBookAndEditedCcaSameAsTargetCca_setsCca() {","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"weiquu"},"content":"        modelManager.setCca(USCOFFEE, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasCca(USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"weiquu"},"content":"    public void setCca_targetCcaInAddressBookAndEditedCcaDifferentFromTargetCca_setsCca() {","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"weiquu"},"content":"        modelManager.addCca(USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"weiquu"},"content":"        modelManager.setCca(USCOFFEE, USC);","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasCca(USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"weiquu"},"content":"    public void enrolPersonIntoCca_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.enrolPersonIntoCca(null, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"weiquu"},"content":"    public void enrolPersonIntoCca_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.enrolPersonIntoCca(USCOFFEE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"weiquu"},"content":"    public void enrolPersonIntoCca_personAlreadyEnrolled_enrolListStaysSame() {","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"weiquu"},"content":"        assertFalse(USCOFFEE.getMembers().contains(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"weiquu"},"content":"        modelManager.enrolPersonIntoCca(USCOFFEE, BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"weiquu"},"content":"        int originalMembers \u003d USCOFFEE.getMembers().size();","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"weiquu"},"content":"        modelManager.enrolPersonIntoCca(USCOFFEE, BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"weiquu"},"content":"        int newMembers \u003d USCOFFEE.getMembers().size();","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"weiquu"},"content":"        assertTrue(USCOFFEE.getMembers().contains(BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"weiquu"},"content":"        assertEquals(originalMembers, newMembers);","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"weiquu"},"content":"    public void enrolPersonIntoCca_personNotAlreadyEnrolled_enrolsPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"weiquu"},"content":"        assertFalse(USCOFFEE.getMembers().contains(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"weiquu"},"content":"        modelManager.enrolPersonIntoCca(USCOFFEE, ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"weiquu"},"content":"        assertTrue(USCOFFEE.getMembers().contains(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"weiquu"},"content":"    public void expelPersonFromCca_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.expelPersonFromCca(null, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"weiquu"},"content":"    public void expelPersonFromCca_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.expelPersonFromCca(USCOFFEE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"weiquu"},"content":"    public void expelPersonFromCca_personNotEnrolled_enrolListStaysSame() {","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"weiquu"},"content":"        int originalMembers \u003d USC.getMembers().size();","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"weiquu"},"content":"        modelManager.expelPersonFromCca(USC, ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"weiquu"},"content":"        int newMembers \u003d USC.getMembers().size();","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"weiquu"},"content":"        assertFalse(USC.getMembers().contains(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"weiquu"},"content":"        assertEquals(originalMembers, newMembers);","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"weiquu"},"content":"    public void expelPersonFromCca_personEnrolled_expelsPerson() {","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"weiquu"},"content":"        modelManager.enrolPersonIntoCca(USC, ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"weiquu"},"content":"        assertTrue(USC.getMembers().contains(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"weiquu"},"content":"        modelManager.expelPersonFromCca(USC, ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"weiquu"},"content":"        assertFalse(USC.getMembers().contains(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"weiquu"},"content":"    ///// tests for reminder","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"weiquu"},"content":"    public void hasReminder_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasReminder(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"weiquu"},"content":"    public void hasReminder_reminderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"weiquu"},"content":"    public void hasReminder_reminderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"weiquu"},"content":"    public void addReminder_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addReminder(null, USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":340,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":341,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"weiquu"},"content":"    public void addReminder_nullCcaToAddInto_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addReminder(CHRISTMAS, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"weiquu"},"content":"    public void addReminder_reminderNotInAddressBook_addsReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"weiquu"},"content":"    public void addReminder_reminderInAddressBook_throwsDuplicateReminderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicateReminderException.class, () -\u003e modelManager.addReminder(CHRISTMAS, USCOFFEE));","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"weiquu"},"content":"    public void deleteReminder_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteReminder(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"weiquu"},"content":"    public void deleteReminder_reminderNotInAddressBook_throwsReminderNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"weiquu"},"content":"        assertThrows(ReminderNotFoundException.class, () -\u003e modelManager.deleteReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"weiquu"},"content":"    public void deleteReminder_reminderInAddressBook_deletesReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":371,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"weiquu"},"content":"        modelManager.deleteReminder(CHRISTMAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"weiquu"},"content":"    public void setReminder_nullTargetReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setReminder(null, CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"weiquu"},"content":"    public void setReminder_nullEditedReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setReminder(CHRISTMAS, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":385,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"weiquu"},"content":"    public void setReminder_targetReminderNotInAddressBook_throwsReminderNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"weiquu"},"content":"        assertThrows(ReminderNotFoundException.class, () -\u003e modelManager.setReminder(CHRISTMAS, CLASS));","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":391,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"weiquu"},"content":"    public void setReminder_targetReminderAndEditedReminderInAddressBook_throwsDuplicateReminderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CLASS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"weiquu"},"content":"        assertThrows(DuplicateReminderException.class, () -\u003e modelManager.setReminder(CHRISTMAS, CLASS));","lastModifiedDate":"2021-11-04"},{"lineNumber":397,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":398,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":399,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"weiquu"},"content":"    public void setReminder_targetReminderInAddressBookAndEditedReminderSameAsTargetReminder_setsReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"weiquu"},"content":"        modelManager.setReminder(CHRISTMAS, CHRISTMAS);","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":405,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":407,"author":{"gitId":"weiquu"},"content":"    public void setReminder_targetReminderInAddressBookAndEditedReminderDifferentFromTargetReminder_setsReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":408,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CHRISTMAS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":409,"author":{"gitId":"weiquu"},"content":"        modelManager.setReminder(CHRISTMAS, CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":410,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CLASS));","lastModifiedDate":"2021-11-04"},{"lineNumber":411,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":412,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":413,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":414,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":415,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.snoozeReminder(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":416,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":417,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":418,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":419,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder_reminderNotInAddressBook_throwsReminderNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":420,"author":{"gitId":"weiquu"},"content":"        assertThrows(ReminderNotFoundException.class, () -\u003e modelManager.snoozeReminder(CHRISTMAS));","lastModifiedDate":"2021-11-04"},{"lineNumber":421,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":422,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":423,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":424,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder_reminderInAddressBookAndLastOccurrence_deletesReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":425,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CONCERT, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":426,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CONCERT));","lastModifiedDate":"2021-11-04"},{"lineNumber":427,"author":{"gitId":"weiquu"},"content":"        modelManager.snoozeReminder(CONCERT);","lastModifiedDate":"2021-11-04"},{"lineNumber":428,"author":{"gitId":"weiquu"},"content":"        assertFalse(modelManager.hasReminder(CONCERT));","lastModifiedDate":"2021-11-04"},{"lineNumber":429,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":430,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":431,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":432,"author":{"gitId":"weiquu"},"content":"    public void snoozeReminder_reminderInAddressBookAndNotLastOccurrence_snoozesReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":433,"author":{"gitId":"weiquu"},"content":"        modelManager.addReminder(CLASS, USCOFFEE);","lastModifiedDate":"2021-11-04"},{"lineNumber":434,"author":{"gitId":"weiquu"},"content":"        assertTrue(modelManager.hasReminder(CLASS));","lastModifiedDate":"2021-11-04"},{"lineNumber":435,"author":{"gitId":"weiquu"},"content":"        int prevOccurrences \u003d CLASS.getOccurrences().getOccurrences();","lastModifiedDate":"2021-11-04"},{"lineNumber":436,"author":{"gitId":"weiquu"},"content":"        modelManager.snoozeReminder(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":437,"author":{"gitId":"weiquu"},"content":"        int newOccurrences \u003d modelManager.getFilteredReminderList().get(0).getOccurrences().getOccurrences();","lastModifiedDate":"2021-11-04"},{"lineNumber":438,"author":{"gitId":"weiquu"},"content":"        assertEquals(prevOccurrences, newOccurrences + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":439,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":440,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":441,"author":{"gitId":"weiquu"},"content":"    ///// tests for filters","lastModifiedDate":"2021-11-04"},{"lineNumber":442,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":448,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":449,"author":{"gitId":"weiquu"},"content":"    public void getFilteredCcaList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":450,"author":{"gitId":"weiquu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCcaList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":452,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":453,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":454,"author":{"gitId":"weiquu"},"content":"    public void getFilteredReminderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"weiquu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredReminderList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":456,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":457,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":494,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"weiquu":362,"-":132}},{"path":"src/test/java/seedu/address/model/cca/CcaContainsPersonPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"public class CcaContainsPersonPredicateTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"        List\u003cPerson\u003e firstPredicatePersonList \u003d Collections.singletonList(ALICE);","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        List\u003cPerson\u003e secondPredicatePersonList \u003d Arrays.asList(ALICE, BOB);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        CcaContainsPersonPredicate firstPredicate \u003d new CcaContainsPersonPredicate(firstPredicatePersonList);","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        CcaContainsPersonPredicate secondPredicate \u003d new CcaContainsPersonPredicate(secondPredicatePersonList);","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        CcaContainsPersonPredicate firstPredicateCopy \u003d new CcaContainsPersonPredicate(firstPredicatePersonList);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    public void test_ccaContainsPerson_returnsTrue() {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        Cca cca \u003d new CcaBuilder().withName(\"NUSSO\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        cca.enrolPerson(ALICE);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // One person","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        CcaContainsPersonPredicate predicate \u003d new CcaContainsPersonPredicate(Collections.singletonList(ALICE));","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        // Only one matching person","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new CcaContainsPersonPredicate(Arrays.asList(ALICE, BOB));","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        // Multiple persons","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        cca.enrolPerson(BOB);","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new CcaContainsPersonPredicate(Arrays.asList(ALICE, BOB));","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    public void test_ccaDoesNotContainPersons_returnsFalse() {","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        Cca cca \u003d new CcaBuilder().withName(\"NUSSO\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        cca.enrolPerson(ALICE);","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        // Zero persons","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        CcaContainsPersonPredicate predicate \u003d new CcaContainsPersonPredicate(Collections.emptyList());","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        // Non-matching person","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new CcaContainsPersonPredicate(Arrays.asList(BOB));","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        // Non-matching persons","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new CcaContainsPersonPredicate(Arrays.asList(BOB, CARL));","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":81}},{"path":"src/test/java/seedu/address/model/cca/CcaContainsReminderPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jivesh"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jivesh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jivesh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jivesh"},"content":"import static seedu.address.testutil.TypicalReminders.CHRISTMAS;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jivesh"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jivesh"},"content":"import static seedu.address.testutil.TypicalReminders.CONCERT;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jivesh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jivesh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jivesh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jivesh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jivesh"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jivesh"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jivesh"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jivesh"},"content":"public class CcaContainsReminderPredicateTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jivesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jivesh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jivesh"},"content":"        List\u003cReminder\u003e firstPredicateReminderList \u003d Collections.singletonList(CHRISTMAS);","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jivesh"},"content":"        List\u003cReminder\u003e secondPredicateReminderList \u003d Collections.singletonList(CONCERT);","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate firstPredicate \u003d new CcaContainsReminderPredicate(firstPredicateReminderList);","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate secondPredicate \u003d new CcaContainsReminderPredicate(secondPredicateReminderList);","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jivesh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jivesh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jivesh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate firstPredicateCopy \u003d new CcaContainsReminderPredicate(firstPredicateReminderList);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jivesh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"jivesh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"jivesh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"jivesh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"jivesh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jivesh"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"jivesh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"jivesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"jivesh"},"content":"    public void test_ccaContainsReminder_returnsTrue() {","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"jivesh"},"content":"        Cca cca \u003d new CcaBuilder().withName(\"NUSSO\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"jivesh"},"content":"        Reminder editedChristmas \u003d new ReminderBuilder(CHRISTMAS).withCcaName(\"NUSSO\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"jivesh"},"content":"        cca.addReminder(CHRISTMAS);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"jivesh"},"content":"        // One reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate predicate \u003d new CcaContainsReminderPredicate(Collections","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"jivesh"},"content":"                .singletonList(editedChristmas));","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"jivesh"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"jivesh"},"content":"        // Only one matching reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"jivesh"},"content":"        predicate \u003d new CcaContainsReminderPredicate(Arrays.asList(editedChristmas, CONCERT));","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"jivesh"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"jivesh"},"content":"        // Multiple reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"jivesh"},"content":"        cca.addReminder(CONCERT);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"jivesh"},"content":"        Reminder editedConcert \u003d new ReminderBuilder(CONCERT).withCcaName(\"NUSSO\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"jivesh"},"content":"        predicate \u003d new CcaContainsReminderPredicate(Arrays.asList(editedChristmas, editedConcert));","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"jivesh"},"content":"        assertTrue(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"jivesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"jivesh"},"content":"    public void test_ccaDoesNotContainReminders_returnsFalse() {","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"jivesh"},"content":"        Cca cca \u003d new CcaBuilder().withName(\"NUSSO\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"jivesh"},"content":"        // Zero reminders","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"jivesh"},"content":"        CcaContainsReminderPredicate predicate \u003d new CcaContainsReminderPredicate(Collections.emptyList());","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"jivesh"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"jivesh"},"content":"        // Non-matching reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"jivesh"},"content":"        predicate \u003d new CcaContainsReminderPredicate(Arrays.asList(CONCERT));","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"jivesh"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"jivesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"jivesh"},"content":"        // Non-matching reminders","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"jivesh"},"content":"        predicate \u003d new CcaContainsReminderPredicate(Arrays.asList(CONCERT, CLASS));","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"jivesh"},"content":"        assertFalse(predicate.test(cca));","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"jivesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"jivesh"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jivesh":84}},{"path":"src/test/java/seedu/address/model/cca/CcaNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"public class CcaNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        CcaNameContainsKeywordsPredicate firstPredicate \u003d new CcaNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        CcaNameContainsKeywordsPredicate secondPredicate \u003d new CcaNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        CcaNameContainsKeywordsPredicate firstPredicateCopy \u003d new CcaNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        // One keyword","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        CcaNameContainsKeywordsPredicate predicate \u003d new CcaNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"                Collections.singletonList(\"Nusso\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new CcaBuilder().withName(\"Nusso Cca\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new CcaNameContainsKeywordsPredicate(Arrays.asList(\"Nusso\", \"Cca\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new CcaBuilder().withName(\"Nusso Cca\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new CcaNameContainsKeywordsPredicate(Arrays.asList(\"Cca\", \"Track\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new CcaBuilder().withName(\"Nusso Track\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new CcaNameContainsKeywordsPredicate(Arrays.asList(\"nUSso\", \"cCA\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new CcaBuilder().withName(\"Nusso Cca\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        CcaNameContainsKeywordsPredicate predicate \u003d new CcaNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new CcaBuilder().withName(\"Nusso\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new CcaNameContainsKeywordsPredicate(Arrays.asList(\"Track\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new CcaBuilder().withName(\"Nusso Cca\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"        // Keywords do not match name","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new CcaNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new CcaBuilder().withName(\"Nusso\").build()));","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"weiquu":1,"jovyntls":77}},{"path":"src/test/java/seedu/address/model/cca/CcaNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public class CcaNameTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CcaName(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public void constructor_invalidCcaName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        String invalidCcaName \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CcaName(invalidCcaName));","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public void isValidCcaName() {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        // null name","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e CcaName.isValidCcaName(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        // invalid name","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"        assertFalse(CcaName.isValidCcaName(\"\")); // empty string","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        assertFalse(CcaName.isValidCcaName(\" \")); // spaces only","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        assertFalse(CcaName.isValidCcaName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        assertFalse(CcaName.isValidCcaName(\"nusso*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        // valid name","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        assertTrue(CcaName.isValidCcaName(\"nus symphony orchestra\")); // alphabets only","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        assertTrue(CcaName.isValidCcaName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        assertTrue(CcaName.isValidCcaName(\"nusso the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertTrue(CcaName.isValidCcaName(\"Capital NUSSO\")); // with capital letters","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertTrue(CcaName.isValidCcaName(\"NUS Symphony Orchestra NUS Symphony Orchestra\")); // long names","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"jovyntls":40}},{"path":"src/test/java/seedu/address/model/cca/CcaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_TAG_INTEREST_GROUP;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_TAG_INTERVIEW_NEEDED;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.testutil.TypicalCcas.TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.testutil.TypicalCcas.USKICK;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"public class CcaTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"        Cca cca \u003d new CcaBuilder().build();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e cca.getTags().remove(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"    public void isSameCca() {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        assertTrue(NUSSO.isSameCca(NUSSO));","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.isSameCca(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"        Cca editedNusso \u003d new CcaBuilder(NUSSO).withTags(VALID_CCA_TAG_INTERVIEW_NEEDED).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"        assertTrue(NUSSO.isSameCca(editedNusso));","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"        editedNusso \u003d new CcaBuilder(NUSSO).withName(VALID_CCA_NAME_TRACK).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.isSameCca(editedNusso));","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"        Cca editedTrack \u003d new CcaBuilder(TRACK).withName(VALID_CCA_NAME_TRACK.toLowerCase()).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"        assertFalse(TRACK.isSameCca(editedTrack));","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"        String nameWithTrailingSpaces \u003d VALID_CCA_NAME_TRACK + \" \";","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"        editedTrack \u003d new CcaBuilder(TRACK).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"        assertFalse(TRACK.isSameCca(editedTrack));","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"    public void equals() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"        Cca nussoCopy \u003d new CcaBuilder(NUSSO).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"        assertTrue(NUSSO.equals(nussoCopy));","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"        assertTrue(NUSSO.equals(NUSSO));","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.equals(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.equals(5));","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.equals(USKICK));","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"        Cca editedNusso \u003d new CcaBuilder(NUSSO).withName(VALID_CCA_TAG_INTEREST_GROUP).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.equals(editedNusso));","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"        editedNusso \u003d new CcaBuilder(NUSSO).withTags(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"        assertFalse(NUSSO.equals(editedNusso));","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"justintanyf":74,"jovyntls":4}},{"path":"src/test/java/seedu/address/model/cca/UniqueCcaListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.cca;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalCcas.USKICK;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.exceptions.CcaNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.cca.exceptions.DuplicateCcaException;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.CcaBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"public class UniqueCcaListTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    private final UniqueCcaList uniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"    public void contains_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.contains(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaNotInList_returnsFalse() {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        assertFalse(uniqueCcaList.contains(NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaInList_returnsTrue() {","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertTrue(uniqueCcaList.contains(NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        Cca editedNusso \u003d new CcaBuilder(NUSSO).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        assertTrue(uniqueCcaList.contains(editedNusso));","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    public void add_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.add(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"    public void add_duplicateCca_throwsDuplicateCcaException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateCcaException.class, () -\u003e uniqueCcaList.add(NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"    public void setCca_nullTargetCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.setCca(null, NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    public void setCca_nullEditedCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.setCca(NUSSO, null));","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"    public void setCca_targetCcaNotInList_throwsCcaNotFoundException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        assertThrows(CcaNotFoundException.class, () -\u003e uniqueCcaList.setCca(NUSSO, NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"    public void setCca_editedCcaIsSameCca_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.setCca(NUSSO, NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"    public void setCca_editedCcaHasSameIdentity_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        Cca editedNusso \u003d new CcaBuilder(NUSSO).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.setCca(NUSSO, editedNusso);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueCcaList.add(editedNusso);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"    public void setCca_editedCcaHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.setCca(NUSSO, USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueCcaList.add(USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"    public void setCca_editedCcaHasNonUniqueIdentity_throwsDuplicateCcaException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateCcaException.class, () -\u003e uniqueCcaList.setCca(NUSSO, USKICK));","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"    public void remove_nullCca_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.remove(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"    public void remove_ccaDoesNotExist_throwsCcaNotFoundException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"        assertThrows(CcaNotFoundException.class, () -\u003e uniqueCcaList.remove(NUSSO));","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"    public void remove_existingCca_removesCca() {","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.remove(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"    public void setCcas_nullUniqueCcaList_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.setCcas((UniqueCcaList) null));","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"    public void setCcas_uniqueCcaList_replacesOwnListWithProvidedUniqueCcaList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueCcaList.add(USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.setCcas(expectedUniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"    public void setCcas_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCcaList.setCcas((List\u003cCca\u003e) null));","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"    public void setCcas_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.add(NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"        List\u003cCca\u003e ccaList \u003d Collections.singletonList(USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"        uniqueCcaList.setCcas(ccaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"        UniqueCcaList expectedUniqueCcaList \u003d new UniqueCcaList();","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueCcaList.add(USKICK);","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueCcaList, uniqueCcaList);","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"    public void setCcas_listWithDuplicateCcas_throwsDuplicateCcaException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        List\u003cCca\u003e listWithDuplicateCcas \u003d Arrays.asList(NUSSO, NUSSO);","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateCcaException.class, () -\u003e uniqueCcaList.setCcas(listWithDuplicateCcas));","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"            -\u003e uniqueCcaList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"jovyntls":167}},{"path":"src/test/java/seedu/address/model/reminder/ReminderContainsCcaNamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"public class ReminderContainsCcaNamePredicateTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        ReminderContainsCcaNamePredicate firstPredicate \u003d new ReminderContainsCcaNamePredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        ReminderContainsCcaNamePredicate secondPredicate \u003d new ReminderContainsCcaNamePredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        ReminderContainsCcaNamePredicate firstPredicateCopy \u003d new ReminderContainsCcaNamePredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        // different ReminderContainsCcaNamePredicate -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    public void test_reminderContainsCcaName_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        // One keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        ReminderContainsCcaNamePredicate predicate \u003d new ReminderContainsCcaNamePredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"                Collections.singletonList(\"NUSSO\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new ReminderBuilder().withName(\"Meeting Reminder\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        reminder.setCcaName(\"NUSSO\");","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        // Multiple keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new ReminderContainsCcaNamePredicate(Arrays.asList(\"NUSSO\", \"NUSSO\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new ReminderContainsCcaNamePredicate(Arrays.asList(\"NUSSO\", \"USKick\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertTrue(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"    public void test_reminderDoesNotContainCcaName_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        // Zero keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        ReminderContainsCcaNamePredicate predicate \u003d new ReminderContainsCcaNamePredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"                Collections.emptyList());","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new ReminderBuilder().withName(\"Meeting Reminder\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        reminder.setCcaName(\"NUSSO\");","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new ReminderContainsCcaNamePredicate(Arrays.asList(\"USKick\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        // Keywords do not match name","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        predicate \u003d new ReminderContainsCcaNamePredicate(Arrays.asList(\"USKick\", \"nusso\", \"USC\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        assertFalse(predicate.test(reminder));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":81}},{"path":"src/test/java/seedu/address/model/reminder/ReminderFrequencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"public class ReminderFrequencyTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReminderFrequency(null, 0));","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    public void constructor_invalidReminderFrequency_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        Frequency validReminderFrequencyPrefix \u003d Frequency.WEEK;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"        int invalidReminderFrequencySuffix \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        assertThrows(AssertionError.class, () -\u003e new ReminderFrequency(validReminderFrequencyPrefix,","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"            invalidReminderFrequencySuffix));","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    public void isValidFrequency() {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        // null email","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e ReminderFrequency.isValidFrequency(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        // blank email","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"\")); // empty string","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\" \")); // spaces only","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        // missing parts","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"d\")); // missing period prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"w\")); // missing period prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"m\")); // missing period prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"y\")); // missing period prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"1\")); // missing period suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"12\")); // missing period suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"13\")); // missing period suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"567\")); // missing period suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        // invalid parts","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"3mm\")); // invalid suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"3x\")); // invalid suffix","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"_3d\")); // underscore in front","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderFrequency.isValidFrequency(\"3d1\")); // invalid format","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        // valid frequency","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderFrequency.isValidFrequency(\"4d\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderFrequency.isValidFrequency(\"3w\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderFrequency.isValidFrequency(\"5m\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderFrequency.isValidFrequency(\"6y\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderFrequency.isValidFrequency(\"10y\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency1 \u003d new ReminderFrequency(Frequency.DAY, 5);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency2 \u003d new ReminderFrequency(Frequency.WEEK, 5);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency3 \u003d new ReminderFrequency(Frequency.DAY, 10);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency1Copy \u003d new ReminderFrequency(Frequency.DAY, 5);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        assertTrue(frequency1.equals(frequency1));","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        assertTrue(frequency1.equals(frequency1Copy));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        assertFalse(frequency1.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        assertFalse(frequency1.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        // different Frequency in ReminderFrequency -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        assertFalse(frequency1.equals(frequency2));","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        // different int in ReminderFrequency -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        assertFalse(frequency1.equals(frequency3));","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    public void isRecurring() {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency1 \u003d new ReminderFrequency(Frequency.MONTH, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency2 \u003d new ReminderFrequency(Frequency.YEAR, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency3 \u003d new ReminderFrequency(Frequency.ONE_OFF, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        assertTrue(frequency1.isRecurring());","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        assertTrue(frequency2.isRecurring());","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"        assertFalse(frequency3.isRecurring());","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    public void checkToString() {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency1 \u003d new ReminderFrequency(Frequency.MONTH, 5);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency2 \u003d new ReminderFrequency(Frequency.YEAR, 10);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        ReminderFrequency frequency3 \u003d new ReminderFrequency(Frequency.ONE_OFF, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"Every 5 Month(s)\", frequency1.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"Every 10 Year(s)\", frequency2.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"Once only\", frequency3.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":49,"jovyntls":58}},{"path":"src/test/java/seedu/address/model/reminder/ReminderNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"public class ReminderNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        ReminderNameContainsKeywordsPredicate firstPredicate \u003d new ReminderNameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"        ReminderNameContainsKeywordsPredicate secondPredicate \u003d new ReminderNameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        ReminderNameContainsKeywordsPredicate firstPredicateCopy \u003d new ReminderNameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"        // One keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"        ReminderNameContainsKeywordsPredicate predicate \u003d new ReminderNameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"                Collections.singletonList(\"Meeting\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new ReminderBuilder().withName(\"Meeting Reminder\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"        // Multiple keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"Meeting\", \"Reminder\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new ReminderBuilder().withName(\"Meeting Reminder\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"Reminder\", \"Project\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new ReminderBuilder().withName(\"Meeting Project\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"mEEtIng\", \"reMINDer\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"        assertTrue(predicate.test(new ReminderBuilder().withName(\"Meeting Reminder\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"        // Zero keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"        ReminderNameContainsKeywordsPredicate predicate \u003d new ReminderNameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"                Collections.emptyList());","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new ReminderBuilder().withName(\"Meeting\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"Project\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new ReminderBuilder().withName(\"Meeting Reminder\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        // Keywords do not match name","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        predicate \u003d new ReminderNameContainsKeywordsPredicate(Arrays.asList(\"12345\",","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"                \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        assertFalse(predicate.test(new ReminderBuilder().withName(\"Meeting\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"jovyntls":80}},{"path":"src/test/java/seedu/address/model/reminder/ReminderNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public class ReminderNameTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReminderName(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public void constructor_invalidReminderName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        String invalidReminderName \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ReminderName(invalidReminderName));","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    public void isValidReminderName() {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"        // null name","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e ReminderName.isValidName(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"        // invalid name","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderName.isValidName(\"nusso*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        // valid name","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderName.isValidName(\"nus symphony orchestra\")); // alphabets only","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderName.isValidName(\"nusso the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderName.isValidName(\"Capital NUSSO\")); // with capital letters","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderName.isValidName(\"NUS Symphony Orchestra NUS Symphony Orchestra\")); // long names","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        ReminderName reminderName1 \u003d new ReminderName(\"name1\");","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        ReminderName reminderName2 \u003d new ReminderName(\"name2\");","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        ReminderName reminderName1Copy \u003d new ReminderName(\"name1\");","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        assertTrue(reminderName1.equals(reminderName1));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        assertTrue(reminderName1.equals(reminderName1Copy));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderName1.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderName1.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderName1.equals(reminderName2));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":22,"jovyntls":40}},{"path":"src/test/java/seedu/address/model/reminder/ReminderOccurrenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"public class ReminderOccurrenceTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public void constructor_null_throwsAssertionError() {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"        assertThrows(AssertionError.class, () -\u003e new ReminderOccurrence(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"    public void constructor_invalidReminderOccurrence_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"        int invalidReminderOccurrence \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"        assertThrows(AssertionError.class, () -\u003e new ReminderOccurrence(invalidReminderOccurrence));","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        ReminderOccurrence reminderOccurrence1 \u003d new ReminderOccurrence(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        ReminderOccurrence reminderOccurrence2 \u003d new ReminderOccurrence(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        ReminderOccurrence reminderOccurrence1Copy \u003d new ReminderOccurrence(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        assertTrue(reminderOccurrence1.equals(reminderOccurrence1));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        assertTrue(reminderOccurrence1.equals(reminderOccurrence1Copy));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderOccurrence1.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderOccurrence1.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        assertFalse(reminderOccurrence1.equals(reminderOccurrence2));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":24,"jovyntls":19}},{"path":"src/test/java/seedu/address/model/reminder/ReminderStartDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"public class ReminderStartDateTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReminderStartDate(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    public void constructor_invalidReminderStartDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        SimpleDateFormat invalidReminderStartDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        assertThrows(java.text.ParseException.class, () -\u003e new ReminderStartDate(invalidReminderStartDate.parse(\"\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"    public void isValidReminderStartDate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"        // null name","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e ReminderStartDate.isValidDate(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"        // invalid name","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\"nusso*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\"2020-2-\")); // incomplete date","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"        assertFalse(ReminderStartDate.isValidDate(\"20202-12-32\")); // year does not exist","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        // valid name","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderStartDate.isValidDate(\"2020-1-1\")); // in the past","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"        assertTrue(ReminderStartDate.isValidDate(\"2023-12-15\")); // in the future","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    // null, invalid string, year too big, wrong, correct","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    public void validate_nullDateString_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        assertThrows(NullPointerException.class, () -\u003e reminderStartDate.validate(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    public void validate_invalidDateStringFormat_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"  \"));","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2020-02-nusso\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2020-02\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2020-02-\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2020-02-0\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"20202-12-32\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2021-02-29\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2021-04-31\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    public void validate_yearInDateStringTooBig_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"3000-02-02\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"    public void validate_dateStringWrong_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"        assertThrows(ParseException.class, () -\u003e reminderStartDate.validate(\"2020-10-31\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    public void validate_dateStringCorrect_nothingThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        ReminderStartDate reminderStartDate \u003d new ReminderStartDate(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        Calendar calendar \u003d new GregorianCalendar();","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"        calendar.setTime(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        int year \u003d calendar.get(Calendar.YEAR);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        int month \u003d calendar.get(Calendar.MONTH) + 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        int day \u003d calendar.get(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"        assertDoesNotThrow(() -\u003e reminderStartDate.validate(year + \"-\" + month + \"-\" + day));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"weiquu":53,"jovyntls":40}},{"path":"src/test/java/seedu/address/model/reminder/ReminderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_NUSSO;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUM_TIME_PERIOD_10;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCURENCES_5;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMINDER_NAME_MEETING;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_MEETING;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_PERIOD_YEAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.MEETING;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import static seedu.address.testutil.TypicalReminders.getDateFromString;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"public class ReminderTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    public void isSameReminder() {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        assertTrue(CLASS.isSameReminder(CLASS));","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.isSameReminder(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        // all attributes same -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        Reminder editedClass \u003d new ReminderBuilder(CLASS).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        assertTrue(CLASS.isSameReminder(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        // same name, same start date, all other attributes different -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withFrequency(VALID_TIME_PERIOD_YEAR, VALID_NUM_TIME_PERIOD_10)","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"                .withOccurrence(VALID_OCCURENCES_5).withCcaName(\"LCC\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        assertTrue(CLASS.isSameReminder(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        // same name, different start date, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withStartDate(getDateFromString(VALID_START_DATE_MEETING)).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.isSameReminder(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        // different name, same start date, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withName(\"Clash\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.isSameReminder(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        Reminder editedMeeting \u003d new ReminderBuilder(MEETING).withName(VALID_REMINDER_NAME_MEETING.toLowerCase())","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        assertFalse(MEETING.isSameReminder(editedMeeting));","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        String nameWithTrailingSpaces \u003d VALID_REMINDER_NAME_MEETING + \" \";","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        editedMeeting \u003d new ReminderBuilder(MEETING).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        assertFalse(MEETING.isSameReminder(editedMeeting));","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    public void equals() {","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        Reminder classCopy \u003d new ReminderBuilder(CLASS).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        assertTrue(CLASS.equals(classCopy));","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        assertTrue(CLASS.equals(CLASS));","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(5));","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        // different reminder -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(MEETING));","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        Reminder editedClass \u003d new ReminderBuilder(CLASS).withName(VALID_REMINDER_NAME_MEETING).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withStartDate(getDateFromString(VALID_START_DATE_MEETING)).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        // different frequency -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withFrequency(VALID_TIME_PERIOD_YEAR, VALID_NUM_TIME_PERIOD_10)","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"                .build();","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        // different occurrence -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withOccurrence(VALID_OCCURENCES_5).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        // different cca name -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        editedClass \u003d new ReminderBuilder(CLASS).withCcaName(VALID_CCA_NAME_NUSSO).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"        assertFalse(CLASS.equals(editedClass));","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":96}},{"path":"src/test/java/seedu/address/model/reminder/UniqueReminderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jovyntls"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalReminders.CLASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import static seedu.address.testutil.TypicalReminders.MEETING;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.exceptions.DuplicateReminderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.exceptions.ReminderNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jovyntls"},"content":"import seedu.address.testutil.ReminderBuilder;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"public class UniqueReminderListTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    private final UniqueReminderList uniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    public void contains_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.contains(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaNotInList_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jovyntls"},"content":"        assertFalse(uniqueReminderList.contains(MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jovyntls"},"content":"        assertTrue(uniqueReminderList.contains(MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jovyntls"},"content":"    public void contains_ccaWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"        Reminder editedNusso \u003d new ReminderBuilder(MEETING).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jovyntls"},"content":"        assertTrue(uniqueReminderList.contains(editedNusso));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jovyntls"},"content":"    public void add_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.add(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"    public void add_duplicateReminder_throwsDuplicateReminderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateReminderException.class, () -\u003e uniqueReminderList.add(MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_nullTargetReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.setReminder(null, MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_nullEditedReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.setReminder(MEETING, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_targetReminderNotInList_throwsReminderNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"jovyntls"},"content":"        assertThrows(ReminderNotFoundException.class, () -\u003e uniqueReminderList.setReminder(MEETING, MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_editedReminderIsSameReminder_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.setReminder(MEETING, MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_editedReminderHasSameIdentity_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"jovyntls"},"content":"        Reminder editedNusso \u003d new ReminderBuilder(MEETING).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.setReminder(MEETING, editedNusso);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueReminderList.add(editedNusso);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_editedReminderHasDifferentIdentity_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.setReminder(MEETING, CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueReminderList.add(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"jovyntls"},"content":"    public void setReminder_editedReminderHasNonUniqueIdentity_throwsDuplicateReminderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateReminderException.class, () -\u003e uniqueReminderList.setReminder(MEETING, CLASS));","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"jovyntls"},"content":"    public void remove_nullReminder_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.remove(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"jovyntls"},"content":"    public void remove_ccaDoesNotExist_throwsReminderNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"jovyntls"},"content":"        assertThrows(ReminderNotFoundException.class, () -\u003e uniqueReminderList.remove(MEETING));","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"jovyntls"},"content":"    public void remove_existingReminder_removesReminder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.remove(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"jovyntls"},"content":"    public void setReminders_nullUniqueReminderList_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.setReminders((UniqueReminderList) null));","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"jovyntls"},"content":"    public void setReminders_uniqueReminderList_replacesOwnListWithProvidedUniqueReminderList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueReminderList.add(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.setReminders(expectedUniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"jovyntls"},"content":"    public void setReminders_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"jovyntls"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReminderList.setReminders((List\u003cReminder\u003e) null));","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"jovyntls"},"content":"    public void setReminders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.add(MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"jovyntls"},"content":"        List\u003cReminder\u003e ccaList \u003d Collections.singletonList(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"jovyntls"},"content":"        uniqueReminderList.setReminders(ccaList);","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"jovyntls"},"content":"        UniqueReminderList expectedUniqueReminderList \u003d new UniqueReminderList();","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"jovyntls"},"content":"        expectedUniqueReminderList.add(CLASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"jovyntls"},"content":"        assertEquals(expectedUniqueReminderList, uniqueReminderList);","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"jovyntls"},"content":"    public void setReminders_listWithDuplicateReminders_throwsDuplicateReminderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"jovyntls"},"content":"        List\u003cReminder\u003e listWithDuplicateReminders \u003d Arrays.asList(MEETING, MEETING);","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"jovyntls"},"content":"        assertThrows(DuplicateReminderException.class, () -\u003e uniqueReminderList","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"jovyntls"},"content":"            .setReminders(listWithDuplicateReminders));","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"jovyntls"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"jovyntls"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"jovyntls"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"jovyntls"},"content":"            -\u003e uniqueReminderList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"jovyntls"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"jovyntls":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedCcaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"import static seedu.address.testutil.TypicalCcas.NUSSO;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"class JsonAdaptedCcaTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"    private static final String VALID_NAME \u003d NUSSO.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"    public void toModelType_validCcaDetails_returnsCca() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"        JsonAdaptedCca cca \u003d new JsonAdaptedCca(NUSSO);","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"        assertEquals(NUSSO, cca.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"okyntary":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedReminderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"import static seedu.address.testutil.TypicalReminders.MEETING;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"class JsonAdaptedReminderTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"    private static final String INVALID_REMINDERNAME \u003d \" \";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"    private static final String VALID_REMINDERNAME \u003d MEETING.getName().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"    private static final Date VALID_STARTDATE \u003d MEETING.getStartDate().getDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"    private static final Frequency VALID_FREQUENCY \u003d MEETING.getFrequency().getTimePeriod();","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"    private static final int VALID_NUMTIMEPERIOD \u003d MEETING.getFrequency().getNumTimePeriod();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"    private static final int VALID_OCCURRENCE \u003d MEETING.getOccurrences().getOccurrences();","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"    private static final String VALID_CCANAME \u003d MEETING.getCcaName();","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"    private static final ArrayList\u003cDate\u003e VALID_DATES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"    void toModelType_validReminderDetails_returnsReminder() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"        JsonAdaptedReminder meeting \u003d new JsonAdaptedReminder(MEETING);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"        assertEquals(MEETING, meeting.toModelType());","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"    public void toModelType_invalidReminderName_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"        JsonAdaptedReminder invalidReminder \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"                new JsonAdaptedReminder(INVALID_REMINDERNAME, VALID_STARTDATE, VALID_FREQUENCY, VALID_NUMTIMEPERIOD,","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"                        VALID_OCCURRENCE, VALID_CCANAME, VALID_DATES);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"        String expectedMessage \u003d ReminderName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, invalidReminder::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"okyntary":41}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"     * Adds a new {@code Cca} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    public AddressBookBuilder withCca(Cca cca) {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        addressBook.addCca(cca);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"     * Adds a new {@code Reminder} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    public AddressBookBuilder withReminder(Reminder reminder) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        addressBook.addReminder(reminder);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weiquu":18,"-":34}},{"path":"src/test/java/seedu/address/testutil/CcaBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"jovyntls"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jovyntls"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":" * A utility class to help with building CCA objects.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"public class CcaBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"    public static final String DEFAULT_NAME \u003d \"NUSSO\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"jovyntls"},"content":"    // Identity fields","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"    private CcaName name;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jovyntls"},"content":"    // Data fields","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jovyntls"},"content":"    private Set\u003cPerson\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jovyntls"},"content":"    private Set\u003cReminder\u003e reminders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"     * Creates a {@code Cca} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"    public CcaBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"        name \u003d new CcaName(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"     * Initializes the CcaBuilder with the data of {@code CcaToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"    public CcaBuilder(Cca ccaToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"        name \u003d ccaToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"     * Sets the {@code CcaName} of the {@code Cca} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"    public CcaBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"        this.name \u003d new CcaName(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"jovyntls"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jovyntls"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jovyntls"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jovyntls"},"content":"    public CcaBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jovyntls"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jovyntls"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jovyntls"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"okyntary"},"content":"    public Cca build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"jovyntls"},"content":"        return new Cca(name, tags);","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jovyntls":22,"okyntary":38}},{"path":"src/test/java/seedu/address/testutil/CcaUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaAddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEnrolCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaExpelCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":" * A utility class for CCA.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"public class CcaUtil {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     * Returns an add command string for adding the {@code CCA}.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    public static String getAddCommand(Cca cca) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        return CcaAddCommand.COMMAND_WORD + \" \" + getCcaDetails(cca);","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     * Returns an enrol command string for enrolling the {@code person} into the {@code CCA}.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    public static String getEnrolCommand(Index ccaIndex, Index personIndex) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        return CcaEnrolCommand.COMMAND_WORD + \" \" + PREFIX_CCA_ID + ccaIndex.getOneBased() + \" \"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"                + PREFIX_PERSON_ID + personIndex.getOneBased();","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"     * Returns an expel command string for expelling the {@code person} from the {@code CCA}.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public static String getExpelCommand(Index ccaIndex, Index personIndex) {","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        return CcaExpelCommand.COMMAND_WORD + \" \" + PREFIX_CCA_ID + ccaIndex.getOneBased() + \" \"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"                + PREFIX_PERSON_ID + personIndex.getOneBased();","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"     * Returns the part of command string for the given {@code cca}\u0027s details.","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    public static String getCcaDetails(Cca cca) {","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        sb.append(PREFIX_NAME + cca.getName().fullName + \" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        cca.getTags().stream().forEach(","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        );","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        return sb.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"     * Returns the part of command string for the given {@code EditCcaDescriptor}\u0027s details.","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"    public static String getEditCcaDescriptorDetails(EditCcaDescriptor descriptor) {","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        return sb.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":74}},{"path":"src/test/java/seedu/address/testutil/EditCcaDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.cca.CcaEditCommand.EditCcaDescriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.cca.CcaName;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":" * A utility class to help with building EditCcaDescriptor objects.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"public class EditCcaDescriptorBuilder {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    private EditCcaDescriptor descriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptorBuilder() {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditCcaDescriptor();","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptorBuilder(EditCcaDescriptor descriptor) {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        this.descriptor \u003d new EditCcaDescriptor(descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * Returns an {@code EditCcaDescriptor} with fields containing {@code cca}\u0027s details","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptorBuilder(Cca cca) {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditCcaDescriptor();","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        descriptor.setName(cca.getName());","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        descriptor.setTags(cca.getTags());","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code CcaName} of the {@code EditCcaDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        descriptor.setName(new CcaName(name));","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCcaDescriptor}","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"     * that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    public EditCcaDescriptor build() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        return descriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":57}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"jovyntls"},"content":"     * Sets the {@code CcaName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":85,"jovyntls":2}},{"path":"src/test/java/seedu/address/testutil/EditReminderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":" * A utility class to help with building EditReminderDescriptor objects.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"public class EditReminderDescriptorBuilder {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    private EditReminderDescriptor descriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditReminderDescriptor();","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder(EditReminderDescriptor descriptor) {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        this.descriptor \u003d new EditReminderDescriptor(descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     * Returns an {@code EditReminderDescriptor} with fields containing {@code reminder}\u0027s details","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder(Reminder reminder) {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        descriptor \u003d new EditReminderDescriptor();","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderName(reminder.getName());","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderStartDate(reminder.getStartDate());","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderFrequency(reminder.getFrequency());","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderOccurrence(reminder.getOccurrences());","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        descriptor.setCca(reminder.getCcaName());","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderName} of the {@code EditReminderDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderName(new ReminderName(name));","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderStartDate} of the {@code EditReminderDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder withStartDate(Date date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderStartDate(new ReminderStartDate(date));","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderFrequency} of the {@code EditReminderDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder withFrequency(Frequency timePeriod, int numTimePeriod) {","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderFrequency(new ReminderFrequency(timePeriod, numTimePeriod));","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderOccurrence} of the {@code EditReminderDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder withOccurrence(int occurrences) {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"        descriptor.setReminderOccurrence(new ReminderOccurrence(occurrences));","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"     * Sets the CCA name of the {@code EditReminderDescriptor} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptorBuilder withCcaName(String ccaName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"        descriptor.setCca(ccaName);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"    public EditReminderDescriptor build() {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        return descriptor;","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":83}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"jovyntls"},"content":"     * Sets the {@code CcaName} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"jovyntls":1}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonAddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"import seedu.address.logic.commands.person.PersonEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"jovyntls"},"content":"        return PersonAddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":59,"jovyntls":3}},{"path":"src/test/java/seedu/address/testutil/ReminderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderName;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":" * A utility class to help with building Reminder objects.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"public class ReminderBuilder {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    public static final String DEFAULT_NAME \u003d \"meeting\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    public static final Frequency DEFAULT_TIME_PERIOD \u003d Frequency.DAY;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    public static final int DEFAULT_NUM_TIME_PERIOD \u003d 2;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    public static final int DEFAULT_OCCURRENCES \u003d 3;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public static final String DEFAULT_CCA \u003d \"nusso\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    private static Date defaultDate \u003d new Date();","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    // Identity fields","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    private ReminderName reminderName;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    private ReminderStartDate reminderStartDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    private ReminderFrequency reminderFrequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    private ReminderOccurrence reminderOccurrence;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    // Data fields","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    private String ccaName;","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    private ArrayList\u003cDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    static {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        String dateString \u003d format.format(new Date());","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            defaultDate \u003d ReminderStartDate.PARSE_INPUT_DATE_FORMAT.parse(dateString);","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"     * Creates a {@code Reminder} with the default details.","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder() {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        reminderName \u003d new ReminderName(DEFAULT_NAME);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        reminderStartDate \u003d new ReminderStartDate(defaultDate);","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        reminderFrequency \u003d new ReminderFrequency(DEFAULT_TIME_PERIOD, DEFAULT_NUM_TIME_PERIOD);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        reminderOccurrence \u003d new ReminderOccurrence(DEFAULT_OCCURRENCES);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        ccaName \u003d DEFAULT_CCA;","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"     * Initializes the ReminderBuilder with the data of {@code ReminderToCopy}.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder(Reminder reminderToCopy) {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        reminderName \u003d reminderToCopy.getName();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        reminderStartDate \u003d reminderToCopy.getStartDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        reminderFrequency \u003d reminderToCopy.getFrequency();","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        reminderOccurrence \u003d reminderToCopy.getOccurrences();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        ccaName \u003d reminderToCopy.getCcaName();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderName} of the {@code Reminder} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder withName(String name) {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        this.reminderName \u003d new ReminderName(name);","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderStartDate} of the {@code Reminder} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder withStartDate(Date date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"        this.reminderStartDate \u003d new ReminderStartDate(date);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderFrequency} of the {@code Reminder} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder withFrequency(Frequency timePeriod, int numTimePeriod) {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"        this.reminderFrequency \u003d new ReminderFrequency(timePeriod, numTimePeriod);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code ReminderOccurrence} of the {@code Reminder} that we are building.","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder withOccurrence(int occurrences) {","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        this.reminderOccurrence \u003d new ReminderOccurrence(occurrences);","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"     * Sets the {@code CcaName} of the {@code Reminder} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"    public ReminderBuilder withCcaName(String ccaName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"        this.ccaName \u003d ccaName;","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"        return this;","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"     * Builds a {@code Reminder} with the details specified.","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"     * @return The built reminder","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    public Reminder build() {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"        Reminder reminder \u003d new Reminder(reminderName, reminderStartDate, reminderFrequency, reminderOccurrence);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"        reminder.setCcaName(ccaName);","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"        return reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":119}},{"path":"src/test/java/seedu/address/testutil/ReminderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA_ID;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCES;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderAddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"import seedu.address.logic.commands.reminder.ReminderEditCommand.EditReminderDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderFrequency;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderOccurrence;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.ReminderStartDate;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":" * A utility class for Reminder.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"public class ReminderUtil {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     * Returns an add command string for adding the {@code reminder}.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    public static String getAddCommand(Reminder reminder) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        return ReminderAddCommand.COMMAND_WORD + \" \" + getReminderDetails(reminder);","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     * Returns the part of command string for the given {@code reminder}\u0027s details.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    public static String getReminderDetails(Reminder reminder) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        sb.append(PREFIX_CCA_ID + \"1 \"); // doesn\u0027t matter","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        sb.append(PREFIX_NAME + reminder.getName().fullName + \" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        sb.append(PREFIX_START_DATE + getStartDateString(reminder.getStartDate()) + \" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        sb.append(getFrequencyString(reminder.getFrequency()));","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        sb.append(getOccurrenceString(reminder.getFrequency(), reminder.getOccurrences()));","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        return sb.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    private static String getStartDateString(ReminderStartDate startDate) {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        return format.format(startDate.startDate);","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    private static String getFrequencyString(ReminderFrequency frequency) {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        String frequencyString \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        switch (frequency.timePeriod) {","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        case DAY:","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"            frequencyString \u003d frequencyString + PREFIX_FREQUENCY + frequency.numTimePeriod + \"d \";","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"        case WEEK:","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"            frequencyString \u003d frequencyString + PREFIX_FREQUENCY + frequency.numTimePeriod + \"w \";","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        case MONTH:","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"            frequencyString \u003d frequencyString + PREFIX_FREQUENCY + frequency.numTimePeriod + \"m \";","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        case YEAR:","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"            frequencyString \u003d frequencyString + PREFIX_FREQUENCY + frequency.numTimePeriod + \"y \";","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        default:","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        return frequencyString;","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"    private static String getOccurrenceString(ReminderFrequency frequency, ReminderOccurrence occurrence) {","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        String occurrenceString \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        if (frequency.timePeriod \u003d\u003d Frequency.ONE_OFF) {","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"            return occurrenceString;","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"        return occurrenceString + PREFIX_OCCURRENCES + occurrence.getOccurrences();","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"     * Returns the part of command string for the given {@code EditReminderDescriptor}\u0027s details.","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"    public static String getEditReminderDescriptorDetails(EditReminderDescriptor descriptor) {","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        descriptor.getReminderName().ifPresent(reminderName -\u003e sb.append(PREFIX_NAME)","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"                .append(reminderName.fullName).append(\" \"));","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        descriptor.getReminderStartDate().ifPresent(startDate -\u003e sb.append(PREFIX_START_DATE)","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"                .append(getStartDateString(startDate)).append(\" \"));","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"        descriptor.getReminderFrequency().ifPresent(frequency -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"            descriptor.getReminderOccurrence().ifPresent(occurrence -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"                sb.append(getFrequencyString(frequency));","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"                sb.append(getOccurrenceString(frequency, occurrence));","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"            });","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        });","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"        return sb.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"weiquu":95}},{"path":"src/test/java/seedu/address/testutil/TypicalCcas.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_TRACK;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_NAME_USP_ULTIMATE;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_TAG_DISC_PROVIDED;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CCA_TAG_INTEREST_GROUP;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"import seedu.address.model.cca.Cca;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":" * A utility class containing a list of {@code Cca} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"public class TypicalCcas {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"    public static final Cca NUSSO \u003d new CcaBuilder().withName(\"NUSSO\").withTags().build();","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"    public static final Cca USKICK \u003d new CcaBuilder().withName(\"USKick\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"    // Manually added","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"    public static final Cca USCOFFEE \u003d new CcaBuilder().withName(\"USCoffee\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"    public static final Cca USC \u003d new CcaBuilder().withName(\"USC\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"    // Manually added - CCA\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"    // TODO - too lazy to add for now","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"    public static final Cca TRACK \u003d new CcaBuilder().withName(VALID_CCA_NAME_TRACK)","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"            .withTags(VALID_CCA_TAG_INTEREST_GROUP).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"    public static final Cca ULTIMATE \u003d new CcaBuilder().withName(VALID_CCA_NAME_USP_ULTIMATE)","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"            .withTags(VALID_CCA_TAG_DISC_PROVIDED).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jovyntls"},"content":"    public static final String KEYWORD_MATCHING_NUSSO \u003d \"NUSSO\"; // A keyword that matches NUSSO","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"    private TypicalCcas() {} // prevents instantiation","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"        for (Cca cca : getTypicalCcas()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"            ab.addCca(cca);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"        return ab;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"    public static List\u003cCca\u003e getTypicalCcas() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(NUSSO, USKICK, USCOFFEE, USC));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"justintanyf":10,"weiquu":1,"jovyntls":1,"okyntary":40}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"jovyntls"},"content":"    public static final Index INDEX_FIRST_CCA \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jovyntls"},"content":"    public static final Index INDEX_SECOND_CCA \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jovyntls"},"content":"    public static final Index INDEX_THIRD_CCA \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public static final Index INDEX_FIRST_REMINDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    public static final Index INDEX_SECOND_REMINDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    public static final Index INDEX_THIRD_REMINDER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"weiquu":3,"-":12,"jovyntls":3}},{"path":"src/test/java/seedu/address/testutil/TypicalReminders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import seedu.address.model.util.Frequency;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":" * A utility class containing a list of {@code Reminder} objects to be used in tests.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"public class TypicalReminders {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    public static final Reminder MEETING \u003d new ReminderBuilder().withName(\"Meeting\")","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"            .withStartDate(getDateFromString(\"2021-10-30\"))","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"            .withFrequency(Frequency.WEEK, 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"            .withOccurrence(30)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"            .withCcaName(\"\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public static final Reminder CLASS \u003d new ReminderBuilder().withName(\"Class\")","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"            .withStartDate(getDateFromString(\"2021-11-01\"))","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"            .withFrequency(Frequency.DAY, 2)","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"            .withOccurrence(50)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"            .withCcaName(\"\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    public static final Reminder CHRISTMAS \u003d new ReminderBuilder().withName(\"Holiday\")","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"            .withStartDate(getDateFromString(\"2021-12-25\"))","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"            .withFrequency(Frequency.YEAR, 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"            .withOccurrence(10)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"            .withCcaName(\"\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    public static final Reminder CONCERT \u003d new ReminderBuilder().withName(\"Concert\")","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"            .withStartDate(getDateFromString(\"2022-02-24\"))","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"            .withFrequency(Frequency.ONE_OFF, 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"            .withOccurrence(1)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"            .withCcaName(\"\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"    private TypicalReminders() {} // prevents instantiation","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"     * Returns an {@code AddressBook} with all the typical reminder.","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        for (Reminder reminder : getTypicalReminders()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"            ab.addReminder(reminder);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"        return ab;","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"    public static List\u003cReminder\u003e getTypicalReminders() {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, CLASS, CHRISTMAS, CONCERT));","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    public static Date getDateFromString(String dateString) {","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        Date date;","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"            date \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(dateString);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"            date \u003d new Date();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        return date;","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"weiquu":65}}]
