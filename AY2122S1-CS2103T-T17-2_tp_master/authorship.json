[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"# CLITutors","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"**`CLITutors`** is a desktop app for **managing private tutoring jobs**, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you have a big list of tutors to manage, `CLITutors` helps you to manage matching tutors and students for private tuition faster than using a regular database.","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"## User Guide","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"The User Guide can be accessed [here](https://github.com/AY2122S1-CS2103T-T17-2/tp/blob/master/docs/UserGuide.md). ","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"## Developer Guide","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"The Developer Guide can be accessed [here](https://github.com/AY2122S1-CS2103T-T17-2/tp/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":2,"tenebrius1":1,"Lemonsr":10,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"### Chng Zi Hao","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"\u003cimg src\u003d\"images/zihaooo9.png\" width\u003d\"200px\" alt\u003d\"Zi Hao\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"[[github](http://github.com/zihaooo9)]","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"[[portfolio](team/zihao.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"* Role: Placeholder guy","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"* Responsibilities: I identify as a placeholder","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"### Liaw Xin Yan","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"\u003cimg src\u003d\"images/lemonsr.png\" width\u003d\"200px\" alt\u003d\"Xin Yan\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"[[github](http://github.com/Lemonsr)]","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"[[portfolio](team/xinyan.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"* Role: UI Designer and Developer","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"### Kleon Ang","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"\u003cimg src\u003d\"images/kleonang.png\" width\u003d\"200px\" alt\u003d\"Kleon\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"[[github](http://github.com/kleonang)]","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"[[portfolio](team/kleon.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"### Tan Yi Guan","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"\u003cimg src\u003d\"images/tenebrius1.png\" width\u003d\"200px\" alt\u003d\"Yi Guan\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"[[github](http://github.com/tenebrius1)]","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"[[portfolio](team/yiguan.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"* Responsibilities: ","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"### Kenneth Hong Jia Wei","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"\u003cimg src\u003d\"images/knotstoks.png\" width\u003d\"200px\" alt\u003d\"Kenneth\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"knotstoks"},"content":"[[github](http://github.com/knotstoks)]","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"knotstoks"},"content":"[[portfolio](team/kennethhong.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"knotstoks"},"content":"* Responsibilities: Burden","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":20,"tenebrius1":5,"Lemonsr":1,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"## Appendix: Requirements","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"### Product scope","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"#### Target user profile","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"* Has a need to manage a significant number of private tutors and students","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"* Likes a lightweight tutor management application to reduce *bloatware*","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"* Wants to have a platform to match students to private tutors ","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"* Prefers desktop app over other platforms","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"* Can type fast","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"* Is comfortable with using a CLI","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"#### Value Proposition","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"Manage the matching of tutors and students for teaching jobs more efficiently than a regular GUI-driven application.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"### User Stories","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"| Priority | As a ...                                       | I want to ...                                         | So that I can …                                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"| -------- | ---------------------------------------------- | ----------------------------------------------------- | ----------------------------------------------------------------- |","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | new user ready to adopt the app for my own use | purge all data                                        | clear all dummy data and begin to use the app                     |","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | delete students and tutors from the list              | remove those people who do not use the service anymore            |","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | add new students and tutors to the app                |                                                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | view my saved data                                    | recall the information of my tutors/students                      |","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | find people that match some keywords                  | avoid scrolling through thousands of entries of data              |","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | assign tags to tutors and students                    | categorize them by their needs                                    |","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | match students and tutors according to their needs    |                                                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | To get feedback from the system                       | see if my commands are working                                    |","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | user                                           | type the commands I want to execute                   |                                                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"| `* * *`  | busy user                                      | use shorter commands                                  | save time keying in full commands                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | first-time user                                | see some sample data when I open the app              | easily try out the features without needing to add my data first  |","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | clumsy user                                    | have a safety net                                     | avoid purging my data by accident                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | edit personal details                                 | update any new particulars of the tutors/students                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | sort by tags                                          | easily find groups of people with the same tags                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | forgetful user                                 | see the available commands for the program            | know what tasks I can do with the program                         |","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | search students and tutors by tags                    | easily import data from one machine to another                    |","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | load in pre-existing data                             | save time keying in full commands                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | assign ratings to tutors                              | see how well their ratings are when teaching students             |","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | undo my commands made                                 | retrieve the previous state of data if I’ve made a mistake        |","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"| `* *`    | user                                           | add priority for matching certain tutors and students | schedule urgent cases ahead of other cases for greater efficiency |","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"| `*`      | user                                           | be able to go through the history of my command       | avoid reentering frequently used commands                         |","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"| `*`      | user                                           | save pictures of students and tutors                  | match faces to names                                              |","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"| `*`      | first-time user                                | view an interactive tutorial                          | learn how to use the app                                          |","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"### Use Cases","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"(For all use cases below, the System is the `CLITutorsBook` and the Actor is the user, unless otherwise specified)","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"#### Use case (UC01): Add a Tutor","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"##### MSS","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"1. User keys in the tutor\u0027s details","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"2. Tutor is added to the database","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"##### Extensions","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"* 1a. User keys in an incorrect format.","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    * 1a1. System displays an error message to tell the user about the format error.","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"#### Use case (UC02): Add a Student","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"##### MSS","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"1. User keys in the student\u0027s details","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"2. Tutor is added to the database","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"##### Extensions","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"* 1a. User keys in an incorrect format.","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    * 1a1. System displays an error message to tell the user about the format error.","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"#### Use case (UC03): Edit a Student name","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"##### MSS","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"1. User enters the command to edit the name of Student A","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"2. System replies with a confirmation message that the edit is successful","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"##### Extensions","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"* 1a. User wants to \u003cins\u003eedit the phone number (UC04)\u003c/ins\u003e of Student A.","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"  Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"* 2a. User keys in an incorrect prefix for editing name.","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"    * 2a1. System displays an error message to tell the user about the format error.","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"#### Use case (UC04): Edit a Student phone number","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"##### MSS","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"1. User enters the command to edit the phone number of Student B","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"2. System replies with a confirmation message that the edit is successful","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"##### Extensions","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"* 1a. User wants to \u003cins\u003eedit the name (UC03)\u003c/ins\u003e of Student B.","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"  Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"* 2a. User keys in an incorrect prefix for editing phone number.","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    * 2a1. System displays an error message to tell the user about the format error.","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"#### Use case (UC05): Delete a Tutor","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"##### MSS","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"1. User requests to list tutors","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"2. `CLITutorsBook` shows a list of tutors","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"3. User requests to delete a specific tutor in the list","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"4. `CLITutorsBook` deletes the tutor","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"##### Extensions","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"    * 3a1. `CLITutorsBook` shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"knotstoks"},"content":"#### Use case (UC06): Delete a Student","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"knotstoks"},"content":"##### MSS","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"knotstoks"},"content":"1. User requests to list students","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"knotstoks"},"content":"2. CLITutorsBook shows a list of students","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"knotstoks"},"content":"3. User requests to delete a specific student in the list","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"knotstoks"},"content":"4. CLITutorsBook deletes the student","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"knotstoks"},"content":"##### Extensions","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"knotstoks"},"content":"    * 3a1. `CLITutorsBook` shows an error message.","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"knotstoks"},"content":"#### Use case (UC07): Finding a Tutor","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"knotstoks"},"content":"##### MSS","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"knotstoks"},"content":"1. User requests to find a tutor using his/her name","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"knotstoks"},"content":"2. `CLITutorsBook` shows all tutors that contains that specific name","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"knotstoks"},"content":"   Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"knotstoks"},"content":"##### Extensions","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"knotstoks"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"knotstoks"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"knotstoks"},"content":"* 1b. There is no one with that specific name.","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"knotstoks"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"knotstoks"},"content":"#### Use case (UC08): Finding a Student","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"knotstoks"},"content":"##### MSS","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"knotstoks"},"content":"1. User requests to find a student using his/her name","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"knotstoks"},"content":"2. `CLITutorsBook` shows all students that contains that specific name","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"knotstoks"},"content":"   Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"knotstoks"},"content":"##### Extensions","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"knotstoks"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"knotstoks"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"knotstoks"},"content":"* 1b. There is no one with that specific name.","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"knotstoks"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"knotstoks"},"content":"#### Use case (UC09): Matching a student with the tutors","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"knotstoks"},"content":"##### MSS","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"knotstoks"},"content":"1. User requests to match a student with tutors with the required qualifications","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"knotstoks"},"content":"2. `CLITutorsBook` shows the tutors that are able to match with the specified student in a window","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"knotstoks"},"content":"   Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"knotstoks"},"content":"##### Extensions","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"knotstoks"},"content":"* 1a. There are no tutors that match the requirements of the student.","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"knotstoks"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"zihaooo9"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"zihaooo9"},"content":"1. Should work on any *mainstream OS* as long as it has Java 11 or above installed.","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"zihaooo9"},"content":"2. Should be able to run on both 32-bit and 64-bit systems.","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"zihaooo9"},"content":"3. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"zihaooo9"},"content":"4. Should not require the use of remote databases.","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"zihaooo9"},"content":"5. System should be able to run even if the data file has errors arising from a user manually editing it.","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"zihaooo9"},"content":"6. Response to user command (add, delete, edit, match) should be visible within 2 seconds.","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"zihaooo9"},"content":"7. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"zihaooo9"},"content":"8. The system should be usable by a novice who may not be familar with CLI. i.e. Users are not expected to key in complicated commands to get desired outputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"zihaooo9"},"content":"9. Product should not be able to send out any information to the student","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"zihaooo9"},"content":"10. Product should not be able to verify the legitimacy of the information of the student or private tutor.","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"Lemonsr"},"content":"### Glossary","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":214,"author":{"gitId":"Lemonsr"},"content":"| Term              | Meaning                                                                                                                                           |","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"Lemonsr"},"content":"|:----------------- |:------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"Lemonsr"},"content":"| **CLI**           | Command-Line Interface                                                                                                                            |","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"Lemonsr"},"content":"| **JSON**          | JSON stands for ***JavaScript Object Notation*** which is a lightweight format for data storage                                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":218,"author":{"gitId":"Lemonsr"},"content":"| **Mainstream OS** | Windows, macOS, Linux   ","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"zihaooo9"},"content":"| **Index**         | Index number shown in the displayed list. The index must be a positive integer 1, 2, 3, …​                                                        |","lastModifiedDate":"2021-09-21"},{"lineNumber":220,"author":{"gitId":"zihaooo9"},"content":"| **Qualification** | How qualified the tutor is with regards to these levels:\u003cbr\u003e0.Pre-University\u003cbr\u003e1.University Student\u003cbr\u003e2.Post-Grad\u003cbr\u003e3.MOE-Trained              |","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"zihaooo9"},"content":"| **Tag**           | Subjects each Tutors teach are saved under tags as ``[X][Y]`` (X is Level code and Y is Specific Subject code). eg. `PM` stands for Primary Math. |","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"zihaooo9"},"content":"| **Bloatware**     |                                                         Software that uses excessive memory and disk space, which makes the program run slow|","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"kleonang":51,"tenebrius1":26,"knotstoks":36,"zihaooo9":15,"Lemonsr":18,"-":76}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"**`CLITutors`** is a desktop app for **managing private tutoring jobs**, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you have a big list of tutors to manage, `CLITutors` helps you to manage matching tutors and students for private tuition faster than using a regular database.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"The application supports the following level of education and subjects as shown in table below.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    \u003cthead\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"            \u003cth style\u003d\"text-align:center; padding: 10px\"\u003eEducation Level\u003c/th\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"            \u003cth style\u003d\"text-align:center\"\u003eSubjects\u003c/th\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"            \u003cth style\u003d\"text-align:center\"\u003eTag\u003c/th\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    \u003c/thead\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    \u003ctbody\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd rowspan\u003d3\u003e\u003cb\u003eP\u003c/b\u003erimary\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eE\u003c/b\u003english\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003ePE\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eM\u003c/b\u003eath\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003ePM\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eS\u003c/b\u003ecience\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003ePS\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"        \u003ctd rowspan\u003d8\u003e\u003cb\u003eS\u003c/b\u003eecondary\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eB\u003c/b\u003eiology\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSB\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eC\u003c/b\u003ehemistry\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSC\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eE\u003c/b\u003english\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSE\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eG\u003c/b\u003eeography\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSG\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eH\u003c/b\u003eistory\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSH\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eL\u003c/b\u003eiterature\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSL\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eM\u003c/b\u003eath\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSM\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eP\u003c/b\u003ehysics\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eSP\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd rowspan\u003d8\u003e\u003cb\u003eT\u003c/b\u003eertiary\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eB\u003c/b\u003eiology\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTB\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eC\u003c/b\u003ehemistry\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTC\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eE\u003c/b\u003economics\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTE\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eG\u003c/b\u003eeography\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTG\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eH\u003c/b\u003eistory\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTH\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eL\u003c/b\u003eiterature\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTL\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eM\u003c/b\u003eath\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTM\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"zihaooo9"},"content":"        \u003ctr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd\u003e\u003cb\u003eP\u003c/b\u003ehysics\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"zihaooo9"},"content":"            \u003ctd style\u003d\"text-align:center\"\u003e\u003cb\u003eTP\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"    \u003c/tbody\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"zihaooo9"},"content":"`Tag` is dervived from [**LEVEL**][**SUBJECT**] e.g. **PM** is Primary Math.","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"Here are the possible categories of qualifications for tutors:","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"- Qualifications","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"    - `0`: Pre-University","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"zihaooo9"},"content":"    - `1`: University Student","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"    - `2`: Post-Grad","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"    - `3`: MOE-Trained","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"## Table of Contents","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"knotstoks"},"content":"2. Download the latest `CLITutors.jar` from [here](https://github.com/AY2122S1-CS2103T-T17-2/tp).","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your AddressBook.","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"5. Type the command in the command box and press `Enter` to execute it. e.g. typing `ihelp` and pressing `Enter` will open the interactive tutorial done by Zi Hao. Some example commands you can try:","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"    - `list`: lists all tutors and students","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"    - `help`: shows all commands available","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"    - `add`: add a tutor/student to the program","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"    - `delete`: delete a tutor/student from the program","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"    - `edit`: edit details of a tutor/student","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"    - `find`: find a tutor/student matching a given keyword","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"    - `clear`: clears all entries","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"    - `exit`: exits the program","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"6. Refer to the [Features](#Features) below for details of each command.","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"zihaooo9"},"content":"\u003cb\u003e:information_source: Notes about the command format:\u003c/b\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"zihaooo9"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"zihaooo9"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"zihaooo9"},"content":"- Items with `…` after them can have multiple arguments in them.\u003cbr\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"zihaooo9"},"content":"  e.g. `[t/TAG...]` can be used as `t/PM` or `t/PM PC PB` etc.","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"zihaooo9"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":151,"author":{"gitId":"zihaooo9"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":154,"author":{"gitId":"zihaooo9"},"content":"- Tags are denoted by `t/[Level][Subject]`. \u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"zihaooo9"},"content":"  e.g. The tag t/PM stands for Primary Math.","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"zihaooo9"},"content":"- Editing information of any `Person` will override the current information stored about the specified `Person`.","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"zihaooo9"},"content":"- Commands with `t` modify attributes of tutors while commands with `s` modify attributes of students.\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"zihaooo9"},"content":"  e.g `delete t 1` stands for deleting the tutor at index `1` in the list of tutors.","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"knotstoks"},"content":"Shows a message with all the commands available to use on `CLITutors`.","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"zihaooo9"},"content":"### Adding a tutor/student: `add`","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"zihaooo9"},"content":"Adds a tutor/student to the data.","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"zihaooo9"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"zihaooo9"},"content":"`add t n/NAME p/PHONE_NUMBER g/GENDER q/QUALIFICATIONS t/TAG...`\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"zihaooo9"},"content":"`add s n/NAME p/PHONE_NUMBER g/GENDER t/TAG`","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"zihaooo9"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"zihaooo9"},"content":"`add t n/John Doe p/98765432 g/M q/2 t/PM TE TM TL`\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"zihaooo9"},"content":"`add s n/Mary Sue p/98765432 g/F t/PM`","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"zihaooo9"},"content":"### Deleting a tutor/student: `delete`","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"zihaooo9"},"content":"Deletes the specified tutor/student from the data.","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"zihaooo9"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"zihaooo9"},"content":"`delete t INDEX`\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"zihaooo9"},"content":"`delete s INDEX`","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"zihaooo9"},"content":"- Deletes the tutor/student at the specified `INDEX`.","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"zihaooo9"},"content":"- The index refers to the index number shown on the tutor/student list.","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"zihaooo9"},"content":"- The index **must be a positive integer**, eg. `1`, `2`, `3`, ...","lastModifiedDate":"2021-09-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"zihaooo9"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"zihaooo9"},"content":"`delete t 0`\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"zihaooo9"},"content":"`delete s 5`","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"zihaooo9"},"content":"### Editing a tutor/student\u0027s particulars: `edit`","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"zihaooo9"},"content":"Edits a tutor/student\u0027s personal particulars from the data.","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"zihaooo9"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":200,"author":{"gitId":"zihaooo9"},"content":"`edit t INDEX [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [q/QUALIFICATIONS] [t/TAG...]`\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":201,"author":{"gitId":"zihaooo9"},"content":"`edit s INDEX [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [t/TAG]`","lastModifiedDate":"2021-09-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"zihaooo9"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":204,"author":{"gitId":"zihaooo9"},"content":"`edit s 0 n/Karina Nabay g/F` to edit student.","lastModifiedDate":"2021-09-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"zihaooo9"},"content":"### Listing all tutors/students: `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"zihaooo9"},"content":"Shows the list of all tutors.","lastModifiedDate":"2021-09-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"zihaooo9"},"content":"Format: \u003cbr\u003e`list`","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"zihaooo9"},"content":"### Finding a tutor/student: `find`","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"zihaooo9"},"content":"Find a tutor/student by name.","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"zihaooo9"},"content":"Format: \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"zihaooo9"},"content":"`find t n/NAME` \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"zihaooo9"},"content":"`find s n/NAME`","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"zihaooo9"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"zihaooo9"},"content":"`find t n/John Cheese`","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"zihaooo9"},"content":"### Matching a student to tutor(s): `match`","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"zihaooo9"},"content":"Find tutor(s) who teaches the subject that the student wants.","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"zihaooo9"},"content":"Format: \u003cbr\u003e`match INDEX`","lastModifiedDate":"2021-09-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":229,"author":{"gitId":"zihaooo9"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":230,"author":{"gitId":"zihaooo9"},"content":"`match 1`","lastModifiedDate":"2021-09-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"zihaooo9"},"content":"Clears all entries from storage.","lastModifiedDate":"2021-09-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"zihaooo9"},"content":"Format: \u003cbr\u003e`clear`","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"zihaooo9"},"content":"Format: \u003cbr\u003e`exit`","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"knotstoks"},"content":"`CLITutors` data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"knotstoks"},"content":"`CLITutors` data is saved as 2 JSON files `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"zihaooo9"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":253,"author":{"gitId":"knotstoks"},"content":"❗\u003cb\u003eCaution:\u003c/b\u003e If your changes to the data file makes its format invalid, `CLITutors` will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-20"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"zihaooo9"},"content":"|   Action   | Format, Examples |","lastModifiedDate":"2021-09-20"},{"lineNumber":259,"author":{"gitId":"zihaooo9"},"content":"|:----------:|:---------------- |","lastModifiedDate":"2021-09-20"},{"lineNumber":260,"author":{"gitId":"zihaooo9"},"content":"|  **Add**   | `add t n/NAME p/PHONE_NUMBER g/GENDER q/QUALIFICATIONS t/TAG...` \u003cbr\u003e`add s n/NAME p/PHONE_NUMBER g/GENDER t/TAG` \u003cbr\u003e e.g. `add t n/John Doe p/98765432 g/M q/3 t/PM`    |","lastModifiedDate":"2021-09-20"},{"lineNumber":261,"author":{"gitId":"zihaooo9"},"content":"| **Delete** | `delete t INDEX` \u003cbr\u003e `delete s INDEX` \u003cbr\u003e e.g. `delete s 3`                 |","lastModifiedDate":"2021-09-20"},{"lineNumber":262,"author":{"gitId":"zihaooo9"},"content":"|  **Help**  | `help`           |","lastModifiedDate":"2021-09-20"},{"lineNumber":263,"author":{"gitId":"zihaooo9"},"content":"|  **Edit**  | `edit t INDEX [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [q/QUALIFICATIONS] [t/TAG...]` \u003cbr\u003e`edit s INDEX [n/NAME] [p/PHONE_NUMBER] [g/GENDER] [t/TAG]`\u003cbr\u003e e.g. `edit t 2 n/John Doe q/1`   |","lastModifiedDate":"2021-09-20"},{"lineNumber":264,"author":{"gitId":"zihaooo9"},"content":"|  **List**  | `list`           |","lastModifiedDate":"2021-09-20"},{"lineNumber":265,"author":{"gitId":"zihaooo9"},"content":"|  **Find**  | `find t n/NAME` \u003cbr\u003e `find s n/NAME` \u003cbr\u003e e.g. `find s n/John`  |","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"zihaooo9"},"content":"| **Match**  | `match INDEX` \u003cbr\u003e e.g. `match 1`          |","lastModifiedDate":"2021-09-20"},{"lineNumber":267,"author":{"gitId":"zihaooo9"},"content":"| **Clear**  | `clear`          |","lastModifiedDate":"2021-09-20"},{"lineNumber":268,"author":{"gitId":"zihaooo9"},"content":"|  **Exit**  | `exit`           |","lastModifiedDate":"2021-09-20"},{"lineNumber":269,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":270,"author":{"gitId":"zihaooo9"},"content":"\u003c!-- ## FAQ --\u003e","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":6,"zihaooo9":187,"-":77}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"title: CLITutors","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T17-2/tp/branch/master/graph/badge.svg?token\u003dLZ0GGNJ35I)](https://codecov.io/gh/AY2122S1-CS2103T-T17-2/tp)","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"**`CLITutors`** is a desktop app for **managing private tutoring jobs**, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you have a big list of tutors to manage, `CLITutors` helps you to manage matching tutors and students for private tuition faster than using a regular database.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"* If you are interested in using CLITutors, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"* If you are interested about developing CLITutors, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tenebrius1":5,"-":14}},{"path":"docs/team/kennethhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":46}},{"path":"docs/team/kleon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":46}},{"path":"docs/team/xinyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":46}},{"path":"docs/team/yiguan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":46}},{"path":"docs/team/zihao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"knotstoks"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"knotstoks"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"knotstoks":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_INVALID_TUTOR_DISPLAYED_INDEX \u003d \"The tutor index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_TUTORS_LISTED_OVERVIEW \u003d \"%1$d tutors listed!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Lemonsr":4,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /** Returns an unmodifiable view of the filtered list of tutors */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cTutor\u003e getFilteredTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kleonang":7,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cTutor\u003e getFilteredTutorList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        return model.getFilteredTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kleonang":9,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tutor or student to the database. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"            + \"t \"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"            + PREFIX_QUALIFICATION + \"2\"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"            + PREFIX_TAG + \"PM\";","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"    public static final String MESSAGE_SUCCESS_TUTOR \u003d \"New tutor added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"    public static final String MESSAGE_SUCCESS_STUDENT \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"    public static final String MESSAGE_TOO_MANY_TAGS \u003d \"Students can only have 1 tag.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_DUPLICATE_TUTOR \u003d \"This tutor already exists in the address book\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"    private final PersonType personType;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"    public AddCommand(Person person, PersonType personType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"        requireNonNull(personType);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"knotstoks"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"knotstoks"},"content":"        if (personType.equals(PersonType.TUTOR)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"knotstoks"},"content":"            Tutor tutor \u003d (Tutor) toAdd;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"knotstoks"},"content":"            if (model.hasTutor(tutor)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"knotstoks"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"knotstoks"},"content":"            model.addTutor(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"knotstoks"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_TUTOR, tutor));","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"knotstoks"},"content":"        if (personType.equals(PersonType.STUDENT)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"knotstoks"},"content":"            Student student \u003d (Student) toAdd;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"knotstoks"},"content":"            if (model.hasStudent(student)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"knotstoks"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"knotstoks"},"content":"            model.addStudent(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"knotstoks"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_STUDENT, student));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"knotstoks"},"content":"        //Any invalid input would be handled by the AddCommandParser and will not reach here","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"knotstoks"},"content":"        throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kleonang":2,"knotstoks":35,"Lemonsr":2,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"            + \": Deletes the tutor/student identified by the index number used in the displayed tutor/student list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"            + \"Example: \" + COMMAND_WORD + \"t 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_DELETE_TUTOR_SUCCESS \u003d \"Deleted Tutor: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"    private final PersonType personType;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"     * Creates a DeleteCommand to delete the specified tutor/student.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"     * @param targetIndex The specified index in either the tutor/student list, of the tutor/student to be deleted","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"     * @param personType The parsed personType (only a valid input if \"t\" or \"s\")","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"    public DeleteCommand(Index targetIndex, PersonType personType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"     * Executes the delete command, which will remove a specified tutor/student from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"        switch (personType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"        case TUTOR:","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"            List\u003cTutor\u003e lastShownTutorList \u003d model.getFilteredTutorList();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownTutorList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TUTOR_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"            Tutor tutorToDelete \u003d lastShownTutorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"            model.deleteTutor(tutorToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TUTOR_SUCCESS, tutorToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"            // No break necessary due to return statement","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"        case STUDENT:","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"            List\u003cStudent\u003e lastShownStudentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Lemonsr"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownStudentList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Lemonsr"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"            Student studentToDelete \u003d lastShownStudentList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"            model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"            // No break necessary due to return statement","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Lemonsr"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Lemonsr"},"content":"            // Any invalid input would be handled by the DeleteCommandParser and will not reach here","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Lemonsr"},"content":"            throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kleonang":1,"Lemonsr":43,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTORS;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        // Note: getFilteredPersonList() no longer exists.","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        // TODO: Replace with getFilteredStudentList() or getFilteredTutorList() depending on which list you want.","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        // Added both statements below for compatibility with Model","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        // TODO: Split into if/else or switch/case statements depending on \"edit t\" or \"edit s\"","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredTutorList(PREDICATE_SHOW_ALL_TUTORS);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"        return new Person(updatedName, updatedPhone, updatedGender, updatedTags);","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        private Gender gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"        private Qualification qualification;","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"            setQualification(toCopy.qualification);","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"kleonang"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"kleonang"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"kleonang"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"kleonang"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"kleonang"},"content":"        public void setQualification(Qualification qualification) {","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"kleonang"},"content":"            this.qualification \u003d qualification;","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"kleonang"},"content":"        public Optional\u003cQualification\u003e getQualification() {","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"kleonang"},"content":"            return Optional.ofNullable(qualification);","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"kleonang"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"kleonang"},"content":"                    \u0026\u0026 getQualification().equals(e.getQualification())","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kleonang":32,"-":198}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        // Added both statements below for build","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        // TODO: Split into if/else or switch/case statements depending on \"find t\" or \"find s\"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredTutorList(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kleonang":4,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTORS;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredTutorList(PREDICATE_SHOW_ALL_TUTORS);","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kleonang":4,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"        PersonType personType \u003d ParserUtil.parsePersonType(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"        switch (personType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"        case TUTOR:","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_GENDER,","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"                            PREFIX_QUALIFICATION, PREFIX_TAG);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_GENDER,","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"                    PREFIX_QUALIFICATION, PREFIX_TAG)","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"            Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"            Qualification qualification \u003d ParserUtil.parseQualification(","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"knotstoks"},"content":"                    argMultimap.getValue(PREFIX_QUALIFICATION).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"knotstoks"},"content":"            Tutor tutor \u003d new Tutor(name, phone, gender, qualification, tagList);","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"knotstoks"},"content":"            return new AddCommand(tutor, PersonType.TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"            // No break necessary due to return statement","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"        case STUDENT:","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"knotstoks"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_GENDER,","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"knotstoks"},"content":"                    PREFIX_QUALIFICATION, PREFIX_TAG);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"knotstoks"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_GENDER,","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"                    PREFIX_QUALIFICATION, PREFIX_TAG)","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"knotstoks"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"knotstoks"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"knotstoks"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"knotstoks"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"knotstoks"},"content":"            gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"knotstoks"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"knotstoks"},"content":"            //Check if tagList has more than one tag for students","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"knotstoks"},"content":"            if (tagList.size() !\u003d 1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"knotstoks"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"knotstoks"},"content":"                        AddCommand.MESSAGE_TOO_MANY_TAGS));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"knotstoks"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"knotstoks"},"content":"            Tag tag \u003d tagList.iterator().next();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"knotstoks"},"content":"            Student student \u003d new Student(name, phone, gender, tag);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"knotstoks"},"content":"            return new AddCommand(student, PersonType.STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Lemonsr"},"content":"            // No break necessary due to return statement","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"knotstoks"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"knotstoks"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kleonang":2,"knotstoks":38,"Lemonsr":4,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"     * Deletes the specified mapping for {@code prefix} key in this map.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"zihaooo9"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"zihaooo9"},"content":"    public void delete(Prefix prefix) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"zihaooo9"},"content":"        argMultimap.remove(prefix);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"zihaooo9":9,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"zihaooo9"},"content":"            // Check if we are handling Tag Prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"zihaooo9"},"content":"            if (argPrefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"zihaooo9"},"content":"                handleTags(argMultimap, argValue);","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"zihaooo9"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"zihaooo9"},"content":"     * Handles the Tag arguments in the argument string specified by {@code argValue}.","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"zihaooo9"},"content":"    private static void handleTags(ArgumentMultimap argMultimap, String argValue) {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"zihaooo9"},"content":"        // If user specifies two t/ Prefixes, take the latest occurrence","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"zihaooo9"},"content":"        if (!argMultimap.getAllValues(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"zihaooo9"},"content":"            argMultimap.delete(PREFIX_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"        String[] tagList \u003d argValue.split(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"        for (String s: tagList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"            argMultimap.put(PREFIX_TAG, s);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"zihaooo9":20,"-":149}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public static final Prefix PREFIX_QUALIFICATION \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kleonang":2,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"            PersonType personType \u003d ParserUtil.parsePersonType(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"            return new DeleteCommand(index, personType);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Lemonsr":3,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_GENDER, PREFIX_TAG);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kleonang":5,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"import seedu.address.model.tag.LevelSubjectCode;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"     * Parses {@code String args} and extracts out the type of Person (Tutor/Student).","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"knotstoks"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"knotstoks"},"content":"     * @return Returns the string at the index of args.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"    public static PersonType parsePersonType(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"        // Allows for command to be valid even with multiple whitespaces within the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"        // For e.g. \"add      t   n/...\" will be a valid command read as \"add t n/...\".","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"        String formattedString \u003d args.replaceAll(\"\\\\s{2,}\", \" \").trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"        String[] parsedString \u003d formattedString.split(\" \");","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"        String personType \u003d (String) Array.get(parsedString, 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"        try (PersonType.detectPersonType(personType)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"            return detectPersonType(personType);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"            throw e;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"     * Parses a {@code String name} into a {@code Gender}.","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"     * Parses a {@code String qualification} into a {@code Qualification}.","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"     * @throws ParseException if the given {@code qualification} is invalid.","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"    public static Qualification parseQualification(String qualification) throws ParseException {","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"        requireNonNull(qualification);","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"        String trimmedQualification \u003d qualification.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"        if (!Qualification.isValidQualification(trimmedQualification)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"            throw new ParseException(Qualification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"        return new Qualification(trimmedQualification);","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"zihaooo9"},"content":"        // Checks Tag argument against allowed Tags, throws exception if not valid","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"zihaooo9"},"content":"        if (!Tag.isValidTagName(trimmedTag) || !LevelSubjectCode.isValidTag(trimmedTag)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"zihaooo9"},"content":"            throw new ParseException(Tag.MESSAGE_INVALID_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Lemonsr"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Lemonsr"},"content":"     * Parses {@code String args} and extracts out the type of Person (Tutor/Student).","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Lemonsr"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Lemonsr"},"content":"     * @return Returns the string at the index of args.","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Lemonsr"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Lemonsr"},"content":"    public static PersonType parsePersonType(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"Lemonsr"},"content":"        // Allows for command to be valid even with multiple whitespaces within the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"Lemonsr"},"content":"        // For e.g. \"add    t   n/...\" will be a valid command read as \"add t n/...\".","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"Lemonsr"},"content":"        String formattedString \u003d args.replaceAll(\"\\\\s{2,}\", \" \").trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"Lemonsr"},"content":"        String[] parsedString \u003d formattedString.split(\" \");","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"Lemonsr"},"content":"        String personType \u003d (String) Array.get(parsedString, 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"Lemonsr"},"content":"        return PersonType.detectPersonType(personType);","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kleonang":25,"zihaooo9":4,"knotstoks":18,"Lemonsr":15,"-":97}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.UniqueStudentList;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.UniqueTutorList;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private final UniqueTutorList tutors;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        tutors \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"     * Replaces the contents of the tutors list with {@code tutors}.","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"     * {@code tutors} must not contain duplicate persons.","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    public void setTutors(List\u003cTutor\u003e tutors) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        this.tutors.setTutors(tutors);","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"     * Replaces the contents of the students list with {@code students}.","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"     * {@code students} must not contain duplicate persons.","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        setTutors(newData.getTutorList());","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"     * Returns true if a tutor with the same identity as {@code tutor} exists in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"    public boolean hasTutor(Tutor tutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        requireNonNull(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        return tutors.contains(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"     * Adds a tutor to the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"     * The tutor must not already exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"    public void addTutor(Tutor p) {","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"        tutors.add(p);","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        students.add(p);","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"     * Replaces the given tutor {@code target} in the list with {@code editedTutor}.","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"     * The tutor identity of {@code editedTutor} must not be the same as another existing tutor in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    public void setTutor(Tutor target, Tutor editedTutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        requireNonNull(editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"        tutors.setTutor(target, editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"     * existing student in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"     * Removes {@code tutor} from this {@code AddressBook}.","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"     * {@code tutor} must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"    public void removeTutor(Tutor tutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"        tutors.remove(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"     * Removes {@code student} from this {@code AddressBook}.","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"     * {@code student} must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"        students.remove(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"        return tutors.asUnmodifiableObservableList().size() + \" tutors, \"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"                + students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cTutor\u003e getTutorList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"        return tutors.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 tutors.equals(((AddressBook) other).tutors)","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"kleonang"},"content":"        return Objects.hash(tutors, students);","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kleonang":88,"-":89}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_TUTORS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"     * Returns true if a tutor with the same identity as {@code tutor} exists in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    boolean hasTutor(Tutor tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"     * Deletes the given tutor.","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"     * The tutor must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"    void deleteTutor(Tutor tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    void deleteStudent(Student student);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"     * Adds the given tutor.","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"     * {@code tutor} must not already exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"    void addTutor(Tutor tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"     * Replaces the given tutor {@code target} with {@code editedTutor}.","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"     * The tutor identity of {@code editedTutor} must not be the same as another existing tutor in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"    void setTutor(Tutor target, Tutor editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"     * existing student in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"    /** Returns an unmodifiable view of the filtered tutor list */","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cTutor\u003e getFilteredTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"     * Updates the filter of the filtered tutor list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"    void updateFilteredTutorList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"    void updateFilteredStudentList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kleonang":55,"-":71}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    private final FilteredList\u003cTutor\u003e filteredTutors;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        filteredTutors \u003d new FilteredList\u003c\u003e(this.addressBook.getTutorList());","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    public boolean hasTutor(Tutor tutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        requireNonNull(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        return addressBook.hasTutor(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"    public void deleteTutor(Tutor target) {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"        addressBook.removeTutor(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"    public void addTutor(Tutor tutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"        addressBook.addTutor(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"        updateFilteredTutorList(PREDICATE_SHOW_ALL_TUTORS);","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"    public void setTutor(Tutor target, Tutor editedTutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(target, editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"        addressBook.setTutor(target, editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"kleonang"},"content":"     * Returns an unmodifiable view of the list of tutors backed by the internal list of","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cTutor\u003e getFilteredTutorList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"        return filteredTutors;","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"kleonang"},"content":"     * Returns an unmodifiable view of the list of students backed by the internal list of","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"    public void updateFilteredTutorList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"        filteredTutors.setPredicate(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"kleonang"},"content":"    public void updateFilteredStudentList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"kleonang"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 filteredTutors.equals(other.filteredTutors)","lastModifiedDate":"2021-10-01"},{"lineNumber":192,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kleonang":63,"-":132}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"     * Returns an unmodifiable view of the tutors list.","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"     * This list will not contain any duplicate tutors.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cTutor\u003e getTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kleonang":10,"-":13}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"public class Gender {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"            \"Gender should be \u0027M\u0027 or \u0027F\u0027\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[MF]\";","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    public final String genderSymbol;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    public Gender(String gender) {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        genderSymbol \u003d gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        return genderSymbol;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 genderSymbol.equals(((Gender) other).genderSymbol)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        return genderSymbol.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kleonang":52}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"public abstract class Person {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private final Gender gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    public Person(Name name, Phone phone, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(name, phone, gender, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        return gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"        return Objects.hash(name, phone, gender, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"                .append(getGender());","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kleonang":11,"-":103}},{"path":"src/main/java/seedu/address/model/person/Qualification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" * Represents a Tutor\u0027s qualification in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQualification(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"public class Qualification {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"            \"Qualification should be \u00270\u0027, \u00271\u0027, \u00272\u0027 or \u00273\u0027\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0123]\";","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    public final String index;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * Constructs a {@code Qualification}.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     * @param qualification A valid qualification.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    public Qualification(String qualification) {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        requireNonNull(qualification);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        checkArgument(isValidQualification(qualification), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        index \u003d qualification;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Returns true if a given string is a valid qualification.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public static boolean isValidQualification(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        return index;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"                || (other instanceof Qualification // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 index.equals(((Qualification) other).index)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        return index.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kleonang":52}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" * Represents a Student in CLITutors.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"public class Student extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    private Tag tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public Student(Name name, Phone phone, Gender gender, Tag tag) {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        super(name, phone, gender, wrapTag(tag));","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(name, phone, gender, tag);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"     * Wraps given tag in a Set.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     * @param tag The given tag to wrap.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"     * @return A Set containing only the given tag.","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    private static Set\u003cTag\u003e wrapTag(Tag tag) {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        Set\u003cTag\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        set.add(tag);","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        return set;","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    public Tag getTag() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        return tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kleonang":42}},{"path":"src/main/java/seedu/address/model/person/Tutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" * Represents a Tutor in CLITutors.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"public class Tutor extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    private final Qualification qualification;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public Tutor(Name name, Phone phone, Gender gender, Qualification qualification, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        super(name, phone, gender, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(name, phone, gender, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"        this.qualification \u003d qualification;","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public Qualification getQualification() {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        return qualification;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"            return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        if (!(other instanceof Tutor)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"            return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        Tutor otherTutor \u003d (Tutor) other;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        return otherTutor.getName().equals(getName())","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 otherTutor.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 otherTutor.getGender().equals(getGender())","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 otherTutor.getQualification().equals(getQualification())","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 otherTutor.getTags().equals(getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        return Objects.hash(super.getName(), super.getPhone(), super.getGender(), qualification, super.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        builder.append(super.getName())","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"                .append(super.getPhone())","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"                .append(super.getGender())","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"                .append(\"; Qualification: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"                .append(getQualification());","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        Set\u003cTag\u003e tags \u003d super.getTags();","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kleonang":77}},{"path":"src/main/java/seedu/address/model/person/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" * A student is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":" * of students uses Person#isSamePerson(Person) for equality so as to ensure that the student being added or updated is","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":" * unique in terms of identity in the UniqueStudentList. However, the removal of a student uses Student#equals(Object)","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":" * so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"                    return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"        return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":137}},{"path":"src/main/java/seedu/address/model/person/UniqueTutorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" * A list of tutors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" * A tutor is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":" * tutors uses Person#isSamePerson(Person) for equality so as to ensure that the tutor being added or updated is","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":" * unique in terms of identity in the UniqueTutorList. However, the removal of a tutor uses Tutor#equals(Object) so","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":" * as to ensure that the tutor with exactly the same fields will be removed.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"public class UniqueTutorList implements Iterable\u003cTutor\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private final ObservableList\u003cTutor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    private final ObservableList\u003cTutor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * Returns true if the list contains an equivalent tutor as the given argument.","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    public boolean contains(Tutor toCheck) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     * Adds a tutor to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     * The tutor must not already exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public void add(Tutor toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"     * Replaces the tutor {@code target} in the list with {@code editedTutor}.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"     * The tutor identity of {@code editedTutor} must not be the same as another existing tutor in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    public void setTutor(Tutor target, Tutor editedTutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(target, editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        if (!target.isSamePerson(editedTutor) \u0026\u0026 contains(editedTutor)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        internalList.set(index, editedTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"     * Removes the equivalent tutor from the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"     * The tutor must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    public void remove(Tutor toRemove) {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    public void setTutors(UniqueTutorList replacement) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"     * Replaces the contents of this list with {@code tutors}.","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"     * {@code tutors} must not contain duplicate tutors.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"    public void setTutors(List\u003cTutor\u003e tutors) {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        requireAllNonNull(tutors);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"        if (!tutorsAreUnique(tutors)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        internalList.setAll(tutors);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    public ObservableList\u003cTutor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"    public Iterator\u003cTutor\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"                || (other instanceof UniqueTutorList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"                \u0026\u0026 internalList.equals(((UniqueTutorList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"     * Returns true if {@code tutors} contains only unique tutors.","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"    private boolean tutorsAreUnique(List\u003cTutor\u003e tutors) {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"        for (int i \u003d 0; i \u003c tutors.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"            for (int j \u003d i + 1; j \u003c tutors.size(); j++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"                if (tutors.get(i).isSamePerson(tutors.get(j))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"                    return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"                }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"        return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":132,"zihaooo9":6}},{"path":"src/main/java/seedu/address/model/tag/LevelSubjectCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"public enum LevelSubjectCode {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"    PE(\"pe\", \"PriEng\"), // Primary English","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"    PM(\"pm\", \"PriMath\"), // Primary Math","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"    PS(\"ps\", \"PriSci\"), // Primary Science","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"    SB(\"sb\", \"SecBio\"), // Secondary Biology","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"    SC(\"sc\", \"SecChem\"), // Secondary Chemistry","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"    SE(\"se\", \"SecEng\"), // Secondary English","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    SG(\"sg\", \"SecGeog\"), // Secondary Geography","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    SH(\"sh\", \"SecHist\"), // Secondary History","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    SL(\"sl\", \"SecLit\"), // Secondary Literature","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"    SM(\"sm\", \"SecMath\"), // Secondary Math","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    SP(\"sp\", \"SecPhy\"), // Secondary Physics","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"    TB(\"tb\", \"TerBio\"), // Tertiary Biology","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    TC(\"tc\", \"TerChem\"), // Tertiary Chemistry","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    TE(\"te\", \"TerEcon\"), // Tertiary Economics","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"    TG(\"tg\", \"TerGeog\"), // Tertiary Geography","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"    TH(\"th\", \"TerHist\"), // Tertiary History","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    TL(\"tl\", \"TerLit\"), // Tertiary Literature","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"    TM(\"tm\", \"TerMath\"), // Tertiary Math","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zihaooo9"},"content":"    TP(\"tp\", \"TerPhy\"), // Tertiary Physics","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    INVALID(\"Invalid\", \"Invalid\");","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    public final String subCode;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"    public final String label;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    LevelSubjectCode(String subCode, String label) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"        this.subCode \u003d subCode;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zihaooo9"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zihaooo9"},"content":"     * Checks if user input matches any enum values.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"zihaooo9"},"content":"     * @param subCode Tag from user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zihaooo9"},"content":"     * @return True if tag that user has given is valid, false otherwise.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zihaooo9"},"content":"    public static boolean isValidTag(String subCode) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        for (LevelSubjectCode x : values()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"            if (x.subCode.equalsIgnoreCase(subCode)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"zihaooo9"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zihaooo9"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"zihaooo9"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"zihaooo9"},"content":"     * Returns label that corresponds to the Tag user has given.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zihaooo9"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"zihaooo9"},"content":"     * @param subCode Tag from user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"     * @return Label corresponding to the Tag.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"zihaooo9"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"zihaooo9"},"content":"    public static String getLabel(String subCode) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"        for (LevelSubjectCode x : values()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zihaooo9"},"content":"            if (x.subCode.equalsIgnoreCase(subCode)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"zihaooo9"},"content":"                return x.label;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"zihaooo9"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"zihaooo9"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"        return INVALID.label;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zihaooo9":62}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"Please enter valid tag(s).\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"zihaooo9"},"content":"        // Throws error if getLabel returns an \"Invalid\" label","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zihaooo9"},"content":"        checkArgument(LevelSubjectCode.getLabel(tagName).equals(\"Invalid\"), MESSAGE_INVALID_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"        this.tagName \u003d LevelSubjectCode.getLabel(tagName);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zihaooo9":4,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public static Tutor[] getSampleTutors() {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        return new Tutor[] {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"            new Tutor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Gender(\"M\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"                new Qualification(\"0\"), getTagSet(\"PM\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"            new Tutor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Gender(\"F\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"                new Qualification(\"1\"), getTagSet(\"SP\", \"SC\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"            new Tutor(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Gender(\"F\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"                new Qualification(\"2\"), getTagSet(\"TE\", \"TL\"))","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"        };","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Gender(\"M\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                        new Tag(\"PM\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"                new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Gender(\"M\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"                        new Tag(\"SC\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"                new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Gender(\"M\"),","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"                        new Tag(\"TG\"))","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        for (Tutor sampleTutor : getSampleTutors()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"            sampleAb.addTutor(sampleTutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kleonang":28,"-":35}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private final String gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        gender \u003d source.getGender().genderSymbol;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    public String getName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        return name;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    public String getPhone() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        return phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"    public String getGender() {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        return gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        return tagged;","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":13,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"public class JsonAdaptedStudent extends JsonAdaptedPerson {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"                             @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"                             @JsonProperty(\"tagged\") JsonAdaptedTag tag) {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        super(name, phone, gender, wrapTag(tag));","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        super(source.getName().fullName, source.getPhone().value,","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"                source.getGender().genderSymbol, getAddedTags(source));","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"     * Wraps given tag in a List.","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"     * @param tag The given tag to wrap.","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"     * @return A List containing only the given tag.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    private static List\u003cJsonAdaptedTag\u003e wrapTag(JsonAdaptedTag tag) {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        List\u003cJsonAdaptedTag\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        list.add(tag);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        return list;","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"     * Gets a List of JsonAdaptedTags based on tags from a given Student.","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"     * @param source A Student to add tags from.","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"     * @return A List of JsonAdaptedTags from the source.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    private static List\u003cJsonAdaptedTag\u003e getAddedTags(Student source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        return tagged;","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        if (super.getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        if (!Name.isValidName(super.getName())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        final Name modelName \u003d new Name(super.getName());","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        if (super.getPhone() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        if (!Phone.isValidPhone(super.getPhone())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        final Phone modelPhone \u003d new Phone(super.getPhone());","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        if (super.getGender() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        if (!Gender.isValidGender(super.getGender())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        final Gender modelGender \u003d new Gender(super.getGender());","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        final Tag modelTag \u003d super.getTags().get(0).toModelType();","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"        return new Student(modelName, modelPhone, modelGender, modelTag);","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":96}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"public class JsonAdaptedTutor extends JsonAdaptedPerson {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private final String qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"     * Constructs a {@code JsonAdaptedTutor} with the given tutor details.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public JsonAdaptedTutor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"                             @JsonProperty(\"gender\") String gender, @JsonProperty(\"qualification\") String qualification,","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        super(name, phone, gender, tagged);","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        this.qualification \u003d qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * Converts a given {@code Tutor} into this class for Jackson use.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    public JsonAdaptedTutor(Tutor source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        super(source.getName().fullName, source.getPhone().value,","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"                source.getGender().genderSymbol, getAddedTags(source));","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        qualification \u003d source.getQualification().index;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * Gets a List of JsonAdaptedTags based on tags from a given Tutor.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     * @param source A Tutor to add tags from.","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"     * @return A List of JsonAdaptedTags from the source.","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    private static List\u003cJsonAdaptedTag\u003e getAddedTags(Tutor source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        return tagged;","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"     * Converts this Jackson-friendly adapted tutor object into the model\u0027s {@code Tutor} object.","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tutor.","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    public Tutor toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        for (JsonAdaptedTag tag : super.getTags()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        if (super.getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        if (!Name.isValidName(super.getName())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        final Name modelName \u003d new Name(super.getName());","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        if (super.getPhone() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        if (!Phone.isValidPhone(super.getPhone())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        final Phone modelPhone \u003d new Phone(super.getPhone());","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        if (super.getGender() \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        if (!Gender.isValidGender(super.getGender())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        final Gender modelGender \u003d new Gender(super.getGender());","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        if (qualification \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"                    Qualification.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"        if (!Qualification.isValidQualification(qualification)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"            throw new IllegalValueException(Qualification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        final Qualification modelQualification \u003d new Qualification(qualification);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"        return new Tutor(modelName, modelPhone, modelGender, modelQualification, modelTags);","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":104}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    public static final String MESSAGE_DUPLICATE_TUTOR \u003d \"Tutors list contains duplicate tutor(s).\";","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    private final List\u003cJsonAdaptedTutor\u003e tutors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"tutors\") List\u003cJsonAdaptedTutor\u003e tutors,","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"                                       @JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        this.tutors.addAll(tutors);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        tutors.addAll(source.getTutorList().stream().map(JsonAdaptedTutor::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        // Add tutors to addressBook","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        for (JsonAdaptedTutor jsonAdaptedTutor : tutors) {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"            Tutor tutor \u003d jsonAdaptedTutor.toModelType();","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"            if (addressBook.hasTutor(tutor)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TUTOR);","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"            addressBook.addTutor(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        // Add students to addressBook","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":26,"-":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    private PersonListPanel personListPanel; // Probably have to split into TutorListPanel and StudentListPanel","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        // Note: getFilteredPersonList() no longer exists.","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"        // TODO: Replace with getFilteredStudentList() or getFilteredTutorList() depending on which list you want.","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kleonang":3,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    private Label gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        gender.setText(person.getGender().genderSymbol);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kleonang":2,"-":72}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kleonang":1,"-":34}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"  \"tutors\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    \"name\": \"Dank Muster\",","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    \"phone\": \"9069420\",","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"S*\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":10,"-":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"{","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"  \"tutors\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"  }, {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"1\",","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"SM\", \"SC\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"  }, {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"  } ]","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateTutorAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"{","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"  \"tutors\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"  }, {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"  }, {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"SC\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"  } ]","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"{","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"  \"tutors\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Dank Muster\",","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"P*\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"  } ]","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":15}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidTutorAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"{","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"  \"tutors\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"4\",","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"  } ]","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":15}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"  \"tutors\" : [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"0\",","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"1\",","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"SM\", \"SC\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    \"qualification\" : \"2\",","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"TL\", \"TE\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"  } ],","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"PM\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"SC\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"F\",","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"TG\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    \"gender\" : \"M\",","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    \"tagged\" : [ \"TP\" ]","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":20,"-":23}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.QUALIFICATION_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_PM;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_PM_TP;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TP;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM_LABEL;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TP;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TP_LABEL;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"knotstoks"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"zihaooo9"},"content":"                + QUALIFICATION_DESC_BOB + TAG_DESC_PM_TP;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"zihaooo9"},"content":"        Tutor expectedTutor \u003d new TutorBuilder().withTags(VALID_TAG_PM, VALID_TAG_TP).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"knotstoks"},"content":"        expectedModel.addTutor(expectedTutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"knotstoks"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTutorList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"knotstoks":16,"zihaooo9":7,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"knotstoks"},"content":"        Tutor validTutor \u003d new TutorBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"        Model expectedModelTutor \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"knotstoks"},"content":"        Model expectedModelStudent \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"knotstoks"},"content":"        expectedModelTutor.addTutor(validTutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"knotstoks"},"content":"        expectedModelStudent.addStudent(validStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"        assertCommandSuccess(new AddCommand(validTutor, PersonType.TUTOR), model,","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS_TUTOR, validTutor), expectedModelTutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"        assertCommandSuccess(new AddCommand(validTutor, PersonType.STUDENT), model,","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS_TUTOR, validStudent), expectedModelStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"knotstoks"},"content":"        Tutor tutorInList \u003d model.getAddressBook().getTutorList().get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"        assertCommandFailure(new AddCommand(tutorInList, PersonType.TUTOR),","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"knotstoks"},"content":"                model, AddCommand.MESSAGE_DUPLICATE_TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"knotstoks"},"content":"        assertCommandFailure(new AddCommand(studentInList, PersonType.STUDENT),","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"knotstoks"},"content":"                model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"knotstoks":23,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"knotstoks"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"knotstoks"},"content":"    public void constructor_nullTutorOrStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"knotstoks"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null, PersonType.TUTOR));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"knotstoks"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null, PersonType.STUDENT));","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"        ModelStubAcceptingTutorAdded modelStubTutor \u003d new ModelStubAcceptingTutorAdded();","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"        ModelStubAcceptingStudentAdded modelStubStudent \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"        Tutor validTutor \u003d new TutorBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"knotstoks"},"content":"        CommandResult commandResultTutor \u003d new AddCommand(validTutor, PersonType.TUTOR).execute(modelStubTutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"knotstoks"},"content":"        CommandResult commandResultStudent \u003d new AddCommand(validStudent, PersonType.STUDENT).execute(modelStubStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"knotstoks"},"content":"        // Adding a tutor","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS_TUTOR, validTutor),","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"knotstoks"},"content":"                commandResultTutor.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"        assertEquals(Arrays.asList(validTutor), modelStubTutor.tutorsAdded);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"knotstoks"},"content":"        // Adding a student","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"knotstoks"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS_STUDENT, validStudent),","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"knotstoks"},"content":"                commandResultStudent.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"knotstoks"},"content":"        assertEquals(Arrays.asList(validStudent), modelStubStudent.studentsAdded);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"knotstoks"},"content":"        Tutor validTutor \u003d new TutorBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"knotstoks"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"        AddCommand addCommandTutor \u003d new AddCommand(validTutor, PersonType.TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"knotstoks"},"content":"        AddCommand addCommandStudent \u003d new AddCommand(validStudent, PersonType.STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"knotstoks"},"content":"        ModelStub modelStubTutor \u003d new ModelStubWithTutor(validTutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"knotstoks"},"content":"        ModelStub modelStubStudent \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"knotstoks"},"content":"        // Check for duplicate tutor","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"knotstoks"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TUTOR,","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"knotstoks"},"content":"                () -\u003e addCommandTutor.execute(modelStubTutor));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"knotstoks"},"content":"        // Check for duplicate student","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"knotstoks"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"knotstoks"},"content":"                () -\u003e addCommandStudent.execute(modelStubStudent));","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"knotstoks"},"content":"        Tutor tutorAlice \u003d new TutorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"knotstoks"},"content":"        Tutor tutorBob \u003d new TutorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"knotstoks"},"content":"        Student studentCharlie \u003d new StudentBuilder().withName(\"Charlie\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"knotstoks"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(tutorAlice, PersonType.STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"knotstoks"},"content":"        AddCommand addBobCommand \u003d new AddCommand(tutorBob, PersonType.TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"knotstoks"},"content":"        AddCommand addCharlieCommand \u003d new AddCommand(studentCharlie, PersonType.STUDENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"knotstoks"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(tutorAlice, PersonType.TUTOR);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"knotstoks"},"content":"        // different tutor -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"knotstoks"},"content":"        // different class (student) -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"knotstoks"},"content":"        assertFalse(addAliceCommand.equals(addCharlieCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"knotstoks"},"content":"        public void addTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"knotstoks"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"knotstoks"},"content":"        public void addStudent (Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"knotstoks"},"content":"        public boolean hasTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"knotstoks"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"knotstoks"},"content":"        public void deleteTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"knotstoks"},"content":"        public void deleteStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"knotstoks"},"content":"        public void setTutor(Tutor target, Tutor editedTutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"knotstoks"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"knotstoks"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":193,"author":{"gitId":"knotstoks"},"content":"        public ObservableList\u003cTutor\u003e getFilteredTutorList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"knotstoks"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"knotstoks"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"knotstoks"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":203,"author":{"gitId":"knotstoks"},"content":"        public void updateFilteredTutorList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"knotstoks"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"knotstoks"},"content":"        public void updateFilteredStudentList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"knotstoks"},"content":"     * A Model stub that contains a single tutor.","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"knotstoks"},"content":"    private class ModelStubWithTutor extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"knotstoks"},"content":"        private final Tutor tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"knotstoks"},"content":"        ModelStubWithTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"knotstoks"},"content":"            this.tutor \u003d tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"knotstoks"},"content":"        public boolean hasTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":226,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":227,"author":{"gitId":"knotstoks"},"content":"            return this.tutor.isSamePerson(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"knotstoks"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"knotstoks"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"knotstoks"},"content":"        private final Student student;","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":237,"author":{"gitId":"knotstoks"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"knotstoks"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"knotstoks"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":244,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"knotstoks"},"content":"            return this.student.isSamePerson(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":247,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":248,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":250,"author":{"gitId":"knotstoks"},"content":"     * A Model stub that always accepts the tutor being added.","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"knotstoks"},"content":"    private class ModelStubAcceptingTutorAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":253,"author":{"gitId":"knotstoks"},"content":"        final ArrayList\u003cTutor\u003e tutorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":254,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":256,"author":{"gitId":"knotstoks"},"content":"        public boolean hasTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":257,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":258,"author":{"gitId":"knotstoks"},"content":"            return tutorsAdded.stream().anyMatch(tutor::isSamePerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"knotstoks"},"content":"        public void addTutor(Tutor tutor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":263,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"knotstoks"},"content":"            tutorsAdded.add(tutor);","lastModifiedDate":"2021-10-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"knotstoks"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":274,"author":{"gitId":"knotstoks"},"content":"     * A Model stub that always accepts the tutor being added.","lastModifiedDate":"2021-10-05"},{"lineNumber":275,"author":{"gitId":"knotstoks"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":276,"author":{"gitId":"knotstoks"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":277,"author":{"gitId":"knotstoks"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":278,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"knotstoks"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":281,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":282,"author":{"gitId":"knotstoks"},"content":"            return studentsAdded.stream().anyMatch(student::isSamePerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":283,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":285,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":286,"author":{"gitId":"knotstoks"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-05"},{"lineNumber":287,"author":{"gitId":"knotstoks"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":288,"author":{"gitId":"knotstoks"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-05"},{"lineNumber":289,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":290,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":291,"author":{"gitId":"knotstoks"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"knotstoks"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"knotstoks"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":294,"author":{"gitId":"knotstoks"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":295,"author":{"gitId":"knotstoks"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"knotstoks":143,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    public static final String VALID_QUALIFICATION_BOB \u003d \"0\";","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    public static final String VALID_TAG_PM \u003d \"PM\";","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    public static final String VALID_TAG_TP \u003d \"TP\";","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"zihaooo9"},"content":"    public static final String VALID_TAG_TP_UNCAPITALIZED \u003d \"tp\";","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"knotstoks"},"content":"    public static final PersonType VALID_TUTOR_TYPE \u003d PersonType.TUTOR;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"    public static final PersonType VALID_STUDENT_TYPE \u003d PersonType.STUDENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"knotstoks"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"knotstoks"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"    public static final String QUALIFICATION_DESC_BOB \u003d \" \" + PREFIX_QUALIFICATION + VALID_QUALIFICATION_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"zihaooo9"},"content":"    public static final String TAG_DESC_PM_TP \u003d \" \" + PREFIX_TAG + VALID_TAG_PM + VALID_TAG_TP;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    public static final String TAG_DESC_PM \u003d \" \" + PREFIX_TAG + VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    public static final String TAG_DESC_TP \u003d \" \" + PREFIX_TAG + VALID_TAG_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"zihaooo9"},"content":"    public static final String TAG_DESC_UNCAPITALIZED \u003d \" \" + PREFIX_TAG + VALID_TAG_TP_UNCAPITALIZED;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"Z\"; // \u0027Z\u0027 not allowed in gender","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"zihaooo9"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"ABCDE\"; //  invalid tag, does not correspond with LevelSubjectCode","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"                .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"                .withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"                .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"                .withTags(VALID_TAG_PM, VALID_TAG_TP).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"        List\u003cTutor\u003e expectedFilteredTutorList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTutorList());","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"        List\u003cStudent\u003e expectedFilteredStudentList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedFilteredTutorList, actualModel.getFilteredTutorList());","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedFilteredStudentList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"     * Updates {@code model}\u0027s filtered tutor list to show only the tutor at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"    public static void showTutorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTutorList().size());","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"        Person person \u003d model.getFilteredTutorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredTutorList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"        assertEquals(1, model.getFilteredTutorList().size());","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"     * Updates {@code model}\u0027s filtered student list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"        Person person \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kleonang":38,"knotstoks":8,"zihaooo9":6,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTutorAtIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"        Tutor tutorToDelete \u003d model.getFilteredTutorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandTutor \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandStudent \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"        String expectedMessageTutor \u003d String.format(DeleteCommand.MESSAGE_DELETE_TUTOR_SUCCESS, tutorToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"        String expectedMessageStudent \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"        ModelManager expectedModelTutor \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"        ModelManager expectedModelStudent \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"        expectedModelTutor.deleteTutor(tutorToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"        expectedModelStudent.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"        // Successfully deleting a tutor for valid index for an unfiltered list","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"        assertCommandSuccess(deleteCommandTutor, model, expectedMessageTutor, expectedModelTutor);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"        // Successfully deleting a student for valid index for an unfiltered list","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"        assertCommandSuccess(deleteCommandStudent, model, expectedMessageStudent, expectedModelStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"        Index outOfBoundIndexTutor \u003d Index.fromOneBased(model.getFilteredTutorList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"        Index outOfBoundIndexStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandTutor \u003d new DeleteCommand(outOfBoundIndexTutor, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandStudent \u003d new DeleteCommand(outOfBoundIndexStudent, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"        // Fail at deleting a tutor for invalid index for an unfiltered list","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"        assertCommandFailure(deleteCommandTutor, model, Messages.MESSAGE_INVALID_TUTOR_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"        // Fail at deleting a student for invalid index for an unfiltered list","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Lemonsr"},"content":"        assertCommandFailure(deleteCommandStudent, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"        showTutorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"        showStudentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"        Tutor tutorToDelete \u003d model.getFilteredTutorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandTutor \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Lemonsr"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandStudent \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Lemonsr"},"content":"        String expectedMessageTutor \u003d String.format(DeleteCommand.MESSAGE_DELETE_TUTOR_SUCCESS, tutorToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Lemonsr"},"content":"        String expectedMessageStudent \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Lemonsr"},"content":"        Model expectedModelTutor \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Lemonsr"},"content":"        expectedModelTutor.deleteTutor(tutorToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Lemonsr"},"content":"        showNoTutor(expectedModelTutor);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Lemonsr"},"content":"        Model expectedModelStudent \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Lemonsr"},"content":"        expectedModelStudent.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Lemonsr"},"content":"        showNoStudent(expectedModelStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Lemonsr"},"content":"        // Successfully deleting a tutor for valid index for a filtered list","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Lemonsr"},"content":"        assertCommandSuccess(deleteCommandTutor, model, expectedMessageTutor, expectedModelTutor);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"Lemonsr"},"content":"        // Successfully deleting a student for valid index for a filtered list","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Lemonsr"},"content":"        assertCommandSuccess(deleteCommandStudent, model, expectedMessageStudent, expectedModelStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"Lemonsr"},"content":"        showTutorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Lemonsr"},"content":"        showStudentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"Lemonsr"},"content":"        Index outOfBoundIndexTutor \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Lemonsr"},"content":"        // ensures that outOfBoundIndexTutor is still in bounds of address book list","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(outOfBoundIndexTutor.getZeroBased() \u003c model.getAddressBook().getTutorList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Lemonsr"},"content":"        Index outOfBoundIndexStudent \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Lemonsr"},"content":"        // ensures that outOfBoundIndexStudent is still in bounds of address book list","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(outOfBoundIndexStudent.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandTutor \u003d new DeleteCommand(outOfBoundIndexTutor, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteCommandStudent \u003d new DeleteCommand(outOfBoundIndexStudent, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Lemonsr"},"content":"        // Fail at deleting a tutor for invalid index for a filtered list","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Lemonsr"},"content":"        assertCommandFailure(deleteCommandTutor, model, Messages.MESSAGE_INVALID_TUTOR_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Lemonsr"},"content":"        // Fail at deleting a student for invalid index for a filtered list","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Lemonsr"},"content":"        assertCommandFailure(deleteCommandStudent, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteFirstCommandTutor \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteSecondCommandTutor \u003d new DeleteCommand(INDEX_SECOND_PERSON, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteFirstCommandStudent \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteSecondCommandStudent \u003d new DeleteCommand(INDEX_SECOND_PERSON, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(deleteFirstCommandTutor.equals(deleteFirstCommandTutor));","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(deleteFirstCommandStudent.equals(deleteFirstCommandStudent));","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteFirstCommandCopyTutor \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(deleteFirstCommandTutor.equals(deleteFirstCommandCopyTutor));","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"Lemonsr"},"content":"        DeleteCommand deleteFirstCommandCopyStudent \u003d new DeleteCommand(INDEX_FIRST_PERSON, PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(deleteFirstCommandStudent.equals(deleteFirstCommandCopyStudent));","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandTutor.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandStudent.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandTutor.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandStudent.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"Lemonsr"},"content":"        // different tutors -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandTutor.equals(deleteSecondCommandTutor));","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"Lemonsr"},"content":"        // different students -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"Lemonsr"},"content":"        assertFalse(deleteFirstCommandStudent.equals(deleteSecondCommandStudent));","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"Lemonsr"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"Lemonsr"},"content":"     * Updates {@code model}\u0027s filtered list to show no one, for tutors.","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"Lemonsr"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"Lemonsr"},"content":"    private void showNoTutor(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"Lemonsr"},"content":"        model.updateFilteredTutorList(p -\u003e false);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(model.getFilteredTutorList().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"Lemonsr"},"content":"     * Updates {@code model}\u0027s filtered list to show no one, for students.","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"Lemonsr"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"Lemonsr"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"Lemonsr"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Lemonsr":102,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        // PersonBuilder no longer exists.","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        // TODO: Use TutorBuilder or StudentBuilder instead.","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"                .withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kleonang":5,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kleonang":5,"-":48}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.QUALIFICATION_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_PM;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_PM_TP;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TP;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_UNCAPITALIZED;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUALIFICATION_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TP;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_TYPE;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"knotstoks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TUTOR_TYPE;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"knotstoks"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"knotstoks"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"knotstoks"},"content":"        Tutor expectedTutor \u003d new TutorBuilder(BOB).withTags(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"knotstoks"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTag(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"knotstoks"},"content":"        //Tests for tutors","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_BOB + QUALIFICATION_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"knotstoks"},"content":"                + TAG_DESC_TP, new AddCommand(expectedTutor, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_BOB + QUALIFICATION_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"                + TAG_DESC_TP, new AddCommand(expectedTutor, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_BOB + QUALIFICATION_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"knotstoks"},"content":"                + TAG_DESC_TP, new AddCommand(expectedTutor, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"zihaooo9"},"content":"        // Check that tags are case-insensitive","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"zihaooo9"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_UNCAPITALIZED, new AddCommand(expectedTutor, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"zihaooo9"},"content":"        // multiple tag prefixes - tags in latest tag prefix accepted","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"zihaooo9"},"content":"        Person expectedTutorMultipleTagPrefixes \u003d new TutorBuilder(BOB).withTags(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"zihaooo9"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_PM + TAG_DESC_TP, new AddCommand(expectedTutorMultipleTagPrefixes, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"zihaooo9"},"content":"        // multiple tag arguments - all arguments for tag prefix accepted","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"knotstoks"},"content":"        Person expectedTutorMultipleTags \u003d new TutorBuilder(BOB).withTags(VALID_TAG_TP, VALID_TAG_PM)","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"knotstoks"},"content":"                .build();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_PM_TP, new AddCommand(expectedTutorMultipleTags, VALID_TUTOR_TYPE));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"knotstoks"},"content":"        //Tests for students","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"knotstoks"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_STUDENT_TYPE + NAME_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_AMY + TAG_DESC_TP, new AddCommand(expectedStudent, VALID_STUDENT_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"knotstoks"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser, VALID_STUDENT_TYPE + NAME_DESC_AMY + PHONE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_AMY + TAG_DESC_TP, new AddCommand(expectedStudent, VALID_STUDENT_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"knotstoks"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"knotstoks"},"content":"        assertParseSuccess(parser,  VALID_STUDENT_TYPE + NAME_DESC_AMY + PHONE_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_AMY + TAG_DESC_TP, new AddCommand(expectedStudent, VALID_STUDENT_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"knotstoks"},"content":"        // one tag - accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"zihaooo9"},"content":"        Student expectedStudentOneTag \u003d new StudentBuilder(AMY).withTag(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"zihaooo9"},"content":"        assertParseSuccess(parser, VALID_STUDENT_TYPE + NAME_DESC_AMY + PHONE_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"knotstoks"},"content":"                + TAG_DESC_TP, new AddCommand(expectedStudentOneTag, VALID_STUDENT_TYPE));","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"zihaooo9"},"content":"        // multiple tag prefixes - tags in latest tag prefix accepted","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"zihaooo9"},"content":"        Student expectedStudentMultipleTagPrefix \u003d new StudentBuilder(AMY).withTag(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"zihaooo9"},"content":"        assertParseSuccess(parser, VALID_STUDENT_TYPE + NAME_DESC_AMY + PHONE_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_PM + TAG_DESC_TP, new AddCommand(expectedStudentMultipleTagPrefix, VALID_STUDENT_TYPE));","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"knotstoks"},"content":"    public void parse_studentTooManyTags_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"knotstoks"},"content":"        // multiple tags - not accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"knotstoks"},"content":"        String expectedMultipleTagsStudentMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"knotstoks"},"content":"                AddCommand.MESSAGE_TOO_MANY_TAGS);","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"zihaooo9"},"content":"        // Too many tag arguments - fail","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"zihaooo9"},"content":"        assertParseFailure(parser, VALID_STUDENT_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_PM_TP, expectedMultipleTagsStudentMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"zihaooo9"},"content":"        // Multiple tag prefixes, latest one with too many tags argument taken - fail","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_STUDENT_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"zihaooo9"},"content":"                + TAG_DESC_PM + TAG_DESC_PM_TP, expectedMultipleTagsStudentMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + VALID_NAME_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"knotstoks"},"content":"                + QUALIFICATION_DESC_BOB + TAG_DESC_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + VALID_PHONE_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"knotstoks"},"content":"                + QUALIFICATION_DESC_BOB + TAG_DESC_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"        // missing gender prefix","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_GENDER_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"knotstoks"},"content":"                + QUALIFICATION_DESC_BOB + TAG_DESC_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"knotstoks"},"content":"        // missing qualification prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"knotstoks"},"content":"                + VALID_QUALIFICATION_BOB + TAG_DESC_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"knotstoks"},"content":"        // missing tag prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"knotstoks"},"content":"                + QUALIFICATION_DESC_BOB + VALID_TAG_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + VALID_NAME_BOB + VALID_PHONE_BOB + VALID_GENDER_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"knotstoks"},"content":"                + VALID_QUALIFICATION_BOB + VALID_TAG_PM, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + INVALID_NAME_DESC + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"                + TAG_DESC_PM + TAG_DESC_TP, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + INVALID_PHONE_DESC + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"                + TAG_DESC_PM + TAG_DESC_TP, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"        // invalid gender","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_GENDER_DESC","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"                + TAG_DESC_PM + TAG_DESC_TP, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"                + INVALID_TAG_DESC + VALID_TAG_TP, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, VALID_TUTOR_TYPE + INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_GENDER_DESC,","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"knotstoks"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + VALID_TUTOR_TYPE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"knotstoks"},"content":"                + GENDER_DESC_BOB + TAG_DESC_PM + TAG_DESC_TP,","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kleonang":8,"knotstoks":73,"zihaooo9":26,"-":73}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"import static seedu.address.logic.parser.PersonType;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"        assertParseSuccess(parser, \"t 1\", new DeleteCommand(INDEX_FIRST_PERSON), PersonType.TUTOR);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"        assertParseSuccess(parser, \"s 1\", new DeleteCommand(INDEX_FIRST_PERSON), PersonType.STUDENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Lemonsr":3,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_TP + TAG_DESC_PM + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_TP + TAG_EMPTY + TAG_DESC_PM, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_TP + TAG_DESC_PM, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_PM","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"                + NAME_DESC_AMY + TAG_DESC_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"                .withTags(VALID_TAG_PM, VALID_TAG_TP).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"                + TAG_DESC_TP + PHONE_DESC_AMY + TAG_DESC_TP","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"                + PHONE_DESC_BOB + TAG_DESC_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"                .withTags(VALID_TAG_TP, VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kleonang":23,"-":159}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"zihaooo9"},"content":"    private static final String INVALID_TAG \u003d \"abcdefg\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"zihaooo9"},"content":"    private static final String VALID_TAG_1 \u003d \"PM\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zihaooo9"},"content":"    private static final String VALID_TAG_2 \u003d \"SM\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"zihaooo9"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1),","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"zihaooo9"},"content":"                new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"zihaooo9":5,"-":140}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUALIFICATION_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTutorList());","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    public void resetData_withDuplicateTutors_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withGender(VALID_GENDER_BOB).withTags(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        List\u003cTutor\u003e newTutors \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        List\u003cStudent\u003e newStudents \u003d List.of(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newTutors, newStudents);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTutor(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_tutorNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        assertFalse(addressBook.hasTutor(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        assertFalse(addressBook.hasStudent(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_tutorInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"        addressBook.addTutor(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        assertTrue(addressBook.hasTutor(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        addressBook.addStudent(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        assertTrue(addressBook.hasStudent(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_tutorWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        addressBook.addTutor(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withGender(VALID_GENDER_BOB).withTags(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"                .withQualification(VALID_QUALIFICATION_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"        assertTrue(addressBook.hasTutor(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"        addressBook.addStudent(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"        Student editedDaniel \u003d new StudentBuilder(DANIEL).withGender(VALID_GENDER_BOB).withTag(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"        assertTrue(addressBook.hasStudent(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    public void getTutorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTutorList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        private final ObservableList\u003cTutor\u003e tutors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"        AddressBookStub(Collection\u003cTutor\u003e tutors, Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"            this.tutors.setAll(tutors);","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"        @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"        public ObservableList\u003cTutor\u003e getTutorList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"            return tutors;","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"            return students;","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"kleonang":69,"-":75}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTORS;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_nullTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTutor(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_tutorNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        assertFalse(modelManager.hasTutor(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"        assertFalse(modelManager.hasStudent(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"    public void hasTutor_tutorInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        modelManager.addTutor(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        assertTrue(modelManager.hasTutor(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        modelManager.addStudent(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"        assertTrue(modelManager.hasStudent(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"    public void getFilteredTutorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTutorList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withTutor(ALICE).withStudent(DANIEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"        modelManager.updateFilteredTutorList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"        modelManager.updateFilteredTutorList(PREDICATE_SHOW_ALL_TUTORS);","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kleonang":37,"-":118}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public void test_tutorNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new TutorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new TutorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new TutorBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new TutorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    public void test_studentNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"        // One keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"    public void test_tutorNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new TutorBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new TutorBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        // Keywords match phone, gender and qualification but does not match name","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"F\", \"2\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new TutorBuilder().withName(\"Alice\").withPhone(\"12345\").withQualification(\"2\")","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"                .withGender(\"F\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"    public void test_studentNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"        // Keywords match phone and gender, but does not match name","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"F\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"                .withGender(\"F\").build()));","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kleonang":49,"-":62}},{"path":"src/test/java/seedu/address/model/person/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        assertTrue(DANIEL.isSamePerson(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.isSamePerson(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        Student editedDaniel \u003d new StudentBuilder(DANIEL).withPhone(VALID_PHONE_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                .withTag(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        assertTrue(DANIEL.isSamePerson(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        editedDaniel \u003d new StudentBuilder(DANIEL).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.isSamePerson(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        Student editedAmy \u003d new StudentBuilder(AMY).withName(VALID_NAME_AMY.toLowerCase()).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        assertFalse(AMY.isSamePerson(editedAmy));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_AMY + \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        editedAmy \u003d new StudentBuilder(AMY).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        assertFalse(AMY.isSamePerson(editedAmy));","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"        Student aliceCopy \u003d new StudentBuilder(DANIEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        assertTrue(DANIEL.equals(aliceCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        assertTrue(DANIEL.equals(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(5));","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(AMY));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        Student editedDaniel \u003d new StudentBuilder(DANIEL).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        editedDaniel \u003d new StudentBuilder(DANIEL).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        editedDaniel \u003d new StudentBuilder(DANIEL).withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        editedDaniel \u003d new StudentBuilder(DANIEL).withTag(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        assertFalse(DANIEL.equals(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":86}},{"path":"src/test/java/seedu/address/model/person/TutorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUALIFICATION_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"public class TutorTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"        Tutor tutor \u003d new TutorBuilder().build();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e tutor.getTags().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withPhone(VALID_PHONE_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"                .withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        editedAlice \u003d new TutorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        Tutor editedBob \u003d new TutorBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        editedBob \u003d new TutorBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        Tutor aliceCopy \u003d new TutorBuilder(ALICE).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"        // different tutor -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        editedAlice \u003d new TutorBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        editedAlice \u003d new TutorBuilder(ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        // different qualification -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"        editedAlice \u003d new TutorBuilder(ALICE).withQualification(VALID_QUALIFICATION_BOB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"        editedAlice \u003d new TutorBuilder(ALICE).withTags(VALID_TAG_PM).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":23,"-":68}},{"path":"src/test/java/seedu/address/model/person/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        assertFalse(uniqueStudentList.contains(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        assertTrue(uniqueStudentList.contains(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        Student editedDaniel \u003d new StudentBuilder(DANIEL).withGender(VALID_GENDER_AMY).withTag(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        assertTrue(uniqueStudentList.contains(editedDaniel));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.add(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(DANIEL, null));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueStudentList.setStudent(DANIEL, DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.setStudent(DANIEL, DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        expectedUniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        Student editedDaniel \u003d new StudentBuilder(DANIEL).withGender(VALID_GENDER_AMY).withTag(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.setStudent(DANIEL, editedDaniel);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        expectedUniqueStudentList.add(editedDaniel);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.setStudent(DANIEL, AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"        expectedUniqueStudentList.add(AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.setStudent(DANIEL, AMY));","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueStudentList.remove(DANIEL));","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.remove(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"        expectedUniqueStudentList.add(AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.add(DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"kleonang"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"kleonang"},"content":"        expectedUniqueStudentList.add(AMY);","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(DANIEL, DANIEL);","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"kleonang"},"content":"                -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":169}},{"path":"src/test/java/seedu/address/model/person/UniqueTutorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.testutil.TutorBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"public class UniqueTutorListTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private final UniqueTutorList uniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public void contains_nullTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.contains(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public void contains_tutorNotInList_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        assertFalse(uniqueTutorList.contains(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public void contains_tutorInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        assertTrue(uniqueTutorList.contains(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public void contains_tutorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withGender(VALID_GENDER_BOB).withTags(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        assertTrue(uniqueTutorList.contains(editedAlice));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    public void add_nullTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.add(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    public void add_duplicateTutor_throwsDuplicateTutorException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueTutorList.add(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"    public void setTutor_nullTargetTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.setTutor(null, ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"    public void setTutor_nullEditedTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.setTutor(ALICE, null));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    public void setTutor_targetTutorNotInList_throwsTutorNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueTutorList.setTutor(ALICE, ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    public void setTutor_editedTutorIsSameTutor_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.setTutor(ALICE, ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"        expectedUniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    public void setTutor_editedTutorHasSameIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"        Tutor editedAlice \u003d new TutorBuilder(ALICE).withGender(VALID_GENDER_BOB).withTags(VALID_TAG_PM)","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.setTutor(ALICE, editedAlice);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        expectedUniqueTutorList.add(editedAlice);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"    public void setTutor_editedTutorHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.setTutor(ALICE, BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"        expectedUniqueTutorList.add(BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"kleonang"},"content":"    public void setTutor_editedTutorHasNonUniqueIdentity_throwsDuplicateTutorException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueTutorList.setTutor(ALICE, BOB));","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"kleonang"},"content":"    public void remove_nullTutor_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.remove(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"kleonang"},"content":"    public void remove_tutorDoesNotExist_throwsTutorNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"kleonang"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueTutorList.remove(ALICE));","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"kleonang"},"content":"    public void remove_existingTutor_removesTutor() {","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.remove(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"kleonang"},"content":"    public void setTutors_nullUniqueTutorList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.setTutors((UniqueTutorList) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"kleonang"},"content":"    public void setTutors_uniqueTutorList_replacesOwnListWithProvidedUniqueTutorList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"kleonang"},"content":"        expectedUniqueTutorList.add(BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.setTutors(expectedUniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"kleonang"},"content":"    public void setTutors_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"kleonang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorList.setTutors((List\u003cTutor\u003e) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"kleonang"},"content":"    public void setTutors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.add(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"kleonang"},"content":"        List\u003cTutor\u003e tutorList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"kleonang"},"content":"        uniqueTutorList.setTutors(tutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"kleonang"},"content":"        UniqueTutorList expectedUniqueTutorList \u003d new UniqueTutorList();","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"kleonang"},"content":"        expectedUniqueTutorList.add(BOB);","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"kleonang"},"content":"        assertEquals(expectedUniqueTutorList, uniqueTutorList);","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"kleonang"},"content":"    public void setTutors_listWithDuplicateTutors_throwsDuplicateTutorException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"kleonang"},"content":"        List\u003cTutor\u003e listWithDuplicateTutors \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"kleonang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueTutorList.setTutors(listWithDuplicateTutors));","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"kleonang"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"kleonang"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"kleonang"},"content":"                -\u003e uniqueTutorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":170}},{"path":"src/test/java/seedu/address/model/tag/LevelSubjectCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zihaooo9"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zihaooo9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zihaooo9"},"content":"class LevelSubjectCodeTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zihaooo9"},"content":"    public void testIsValidTag() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(true, LevelSubjectCode.isValidTag(VALID_TAG_PM));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(false, LevelSubjectCode.isValidTag(\"ABCDE\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zihaooo9"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zihaooo9"},"content":"    public void testGetLabel() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"PriMath\", LevelSubjectCode.getLabel(VALID_TAG_PM));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zihaooo9"},"content":"        assertEquals(\"Invalid\", LevelSubjectCode.getLabel(\"FailTest\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zihaooo9"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zihaooo9"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zihaooo9":21}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    private static final JsonAdaptedTag INVALID_TAG \u003d new JsonAdaptedTag(\"PME\");","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private static final String VALID_NAME \u003d ELLE.getName().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private static final String VALID_PHONE \u003d ELLE.getPhone().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private static final String VALID_GENDER \u003d ELLE.getGender().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    private static final JsonAdaptedTag VALID_TAG \u003d new JsonAdaptedTag(ELLE.getTag());","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(ELLE);","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"        assertEquals(ELLE, student.toModelType());","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_GENDER, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_GENDER, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_GENDER, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_GENDER, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_GENDER, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidTag_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_GENDER, INVALID_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":83}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTutorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"public class JsonAdaptedTutorTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    private static final String INVALID_QUALIFICATION \u003d \"4\";","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"zihaooo9"},"content":"    private static final String INVALID_TAG \u003d \"ABCDE\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    private static final String VALID_QUALIFICATION \u003d BENSON.getQualification().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public void toModelType_validTutorDetails_returnsTutor() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d new JsonAdaptedTutor(BENSON);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        assertEquals(BENSON, tutor.toModelType());","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedTutor(INVALID_NAME, VALID_PHONE, VALID_GENDER, VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d new JsonAdaptedTutor(null, VALID_PHONE, VALID_GENDER,","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"                VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedTutor(VALID_NAME, INVALID_PHONE, VALID_GENDER, VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d new JsonAdaptedTutor(VALID_NAME, null, VALID_GENDER,","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"                VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedTutor(VALID_NAME, VALID_PHONE, INVALID_GENDER, VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    public void toModelType_nullQualification_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d new JsonAdaptedTutor(VALID_NAME, VALID_PHONE, VALID_GENDER,","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Qualification.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidQualification_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedTutor(VALID_NAME, VALID_PHONE, VALID_GENDER, INVALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d Qualification.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"kleonang"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d new JsonAdaptedTutor(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"kleonang"},"content":"                VALID_QUALIFICATION, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"kleonang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"kleonang"},"content":"        JsonAdaptedTutor tutor \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"kleonang"},"content":"                new JsonAdaptedTutor(VALID_NAME, VALID_PHONE, VALID_GENDER, VALID_QUALIFICATION, invalidTags);","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, tutor::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":51,"zihaooo9":1,"-":61}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"        original.addTutor(HOON);","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"        original.removeTutor(ALICE);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":3,"-":107}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private static final Path INVALID_TUTOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTutorAddressBook.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private static final Path DUPLICATE_TUTOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTutorAddressBook.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidTutorFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TUTOR_FILE,","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"    public void toModelType_duplicateTutors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TUTOR_FILE,","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TUTOR,","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kleonang":24,"-":40}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     * Adds a new {@code Tutor} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public AddressBookBuilder withTutor(Tutor tutor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        addressBook.addTutor(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kleonang":13,"-":30}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kleonang":11,"-":67}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        sb.append(PREFIX_GENDER + person.getGender().genderSymbol + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.genderSymbol).append(\" \"));","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kleonang":3,"-":56}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_GENDER \u003d \"M\";","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_NAME \u003d \"Danny Phantom\";","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_PHONE \u003d \"91122334\";","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_TAG \u003d \"PM\";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    private Name name;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    private Tag tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"        tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"     * Initializes the StudentBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder(Student personToCopy) {","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"        tag \u003d personToCopy.getTag();","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Gender} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder withGender(String gender) {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Tag} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder withTag(String tag) {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"    public Student build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"        return new Student(name, phone, gender, tag);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":79}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"public class StudentUtil extends PersonUtil {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"        return PersonUtil.getAddCommand(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"        return PersonUtil.getPersonDetails(student);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kleonang":18,"knotstoks":3,"Lemonsr":2}},{"path":"src/test/java/seedu/address/testutil/TutorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kleonang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"zihaooo9"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zihaooo9"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zihaooo9"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":" * A utility class to help with building Tutor objects.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":"public class TutorBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"    public static final String DEFAULT_QUALIFICATION \u003d \"3\";","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"zihaooo9"},"content":"    public static final String DEFAULT_TAG \u003d \"PM\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"    private Name name;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    private Qualification qualification;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"     * Creates a {@code TutorBuilder} with the default details.","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"        qualification \u003d new Qualification(DEFAULT_QUALIFICATION);","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"zihaooo9"},"content":"        tags.add(new Tag(DEFAULT_TAG));","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * Initializes the TutorBuilder with the data of {@code tutorToCopy}.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder(Tutor tutorToCopy) {","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        name \u003d tutorToCopy.getName();","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        phone \u003d tutorToCopy.getPhone();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        gender \u003d tutorToCopy.getGender();","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        tags \u003d new HashSet\u003c\u003e(tutorToCopy.getTags());","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Gender} of the {@code Tutor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder withGender(String gender) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Name} of the {@code Tutor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder withName(String name) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"kleonang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Tutor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Phone} of the {@code Tutor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"kleonang"},"content":"     * Sets the {@code Qualification} of the {@code Tutor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"kleonang"},"content":"    public TutorBuilder withQualification(String qualification) {","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"kleonang"},"content":"        this.qualification \u003d new Qualification(qualification);","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"kleonang"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"kleonang"},"content":"    public Tutor build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"kleonang"},"content":"        return new Tutor(name, phone, gender, qualification, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"kleonang"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kleonang":92,"zihaooo9":5}},{"path":"src/test/java/seedu/address/testutil/TutorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"knotstoks"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"knotstoks"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kleonang"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kleonang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kleonang"},"content":" * A utility class for Tutor.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"public class TutorUtil extends PersonUtil {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kleonang"},"content":"     * Returns an add command string for adding the {@code tutor}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kleonang"},"content":"    public static String getAddCommand(Tutor tutor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kleonang"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTutorDetails(tutor);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"     * Returns the part of command string for the given {@code tutor}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public static String getTutorDetails(Tutor tutor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"        sb.append(PREFIX_NAME + tutor.getName().fullName + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"        sb.append(PREFIX_PHONE + tutor.getPhone().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"        sb.append(PREFIX_GENDER + tutor.getGender().genderSymbol + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"        sb.append(PREFIX_QUALIFICATION + tutor.getQualification().index + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"        tutor.getTags().stream().forEach(","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"        );","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kleonang"},"content":"    public static String getEditPersonDescriptorDetails(EditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kleonang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.genderSymbol).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"        descriptor.getQualification().ifPresent(qualification -\u003e sb.append(PREFIX_QUALIFICATION)","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kleonang"},"content":"                .append(qualification.index).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kleonang"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kleonang"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kleonang"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"knotstoks"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kleonang":60,"knotstoks":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUALIFICATION_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_PM;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"kleonang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TP;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"kleonang"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"kleonang"},"content":"    public static final Tutor ALICE \u003d new TutorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"kleonang"},"content":"            .withGender(\"F\")","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"kleonang"},"content":"            .withQualification(\"0\")","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"kleonang"},"content":"            .withTags(\"PM\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"kleonang"},"content":"    public static final Tutor BENSON \u003d new TutorBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"kleonang"},"content":"            .withGender(\"M\")","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"kleonang"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"kleonang"},"content":"            .withQualification(\"1\")","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"kleonang"},"content":"            .withTags(\"SM\", \"SC\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"kleonang"},"content":"    public static final Tutor CARL \u003d new TutorBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"kleonang"},"content":"            .withGender(\"M\").withQualification(\"2\").withTags(\"TL\", \"TE\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"kleonang"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"kleonang"},"content":"            .withGender(\"M\").withTag(\"PM\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"kleonang"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"kleonang"},"content":"            .withGender(\"F\").withTag(\"SC\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"kleonang"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"kleonang"},"content":"            .withGender(\"F\").withTag(\"TG\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"kleonang"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"kleonang"},"content":"            .withGender(\"M\").withTag(\"TP\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"kleonang"},"content":"    public static final Tutor HOON \u003d new TutorBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"kleonang"},"content":"            .withGender(\"M\").withQualification(\"2\").withTags(\"TG, TL\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"kleonang"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"kleonang"},"content":"            .withGender(\"F\").withTag(\"PE\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"kleonang"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"kleonang"},"content":"            .withGender(VALID_GENDER_AMY).withTag(VALID_TAG_TP).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"kleonang"},"content":"    public static final Tutor BOB \u003d new TutorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"kleonang"},"content":"            .withGender(VALID_GENDER_BOB).withQualification(VALID_QUALIFICATION_BOB)","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"kleonang"},"content":"            .withTags(VALID_TAG_PM, VALID_TAG_TP).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"kleonang"},"content":"        for (Tutor tutor : getTypicalTutors()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"kleonang"},"content":"            ab.addTutor(tutor);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"kleonang"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"kleonang"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"kleonang"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"kleonang"},"content":"    public static List\u003cTutor\u003e getTypicalTutors() {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"kleonang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL));","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"kleonang"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"kleonang"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"kleonang"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"kleonang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kleonang":46,"-":39}}]
